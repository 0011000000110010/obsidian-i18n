{
    "manifest": {
        "translationVersion": 1730386661917,
        "pluginVersion": "5.0.1"
    },
    "description": {
        "original": "Colorizes tags in different colors. Colors of nested tags are mixed with the root tag to improve readability. Text color contrast is automatically matched to comply with AA level of WCAG 2.1.",
        "translation": "为不同的标签着色。嵌套标签的颜色与根标签混合，以提高可读性。文本颜色对比度自动匹配，符合 WCAG 2.1 的 AA 级别标准。"
    },
    "dict": {
        ".setButtonText(\"Reset\")": ".setButtonText(\"重置\")",
        ".setName(\"Palette\")": ".setName(\"调色板\")",
        ".setName(\"Custom palette\")": ".setName(\"自定义调色板\")",
        ".setName(\"Palette shift\")": ".setName(\"调色板偏移\")",
        ".setName(\"\\u{1F9BE} Accessibility\")": ".setName(\"\\u{1F9BE} 可访问性\")",
        ".setName(\"High text contrast\")": ".setName(\"高文本对比度\")",
        ".setName(\"\\u{1F9EA} Experimental\")": ".setName(\"\\u{1F9EA} 实验性\")",
        ".setName(\"Mix colors\")": ".setName(\"混合颜色\")",
        ".setName(\"Gradient transition\")": ".setName(\"渐变过渡\")",
        ".setName(\"Reset config\")": ".setName(\"重置配置\")",
        ".setDesc(\"Select palette\")": ".setDesc(\"选择调色板\")",
        ".setDesc(\"\").addText((text) => {\n        text.inputEl.style.minWidth = \"100%\";\n        text.setValue(\n          this.plugin.settings.palette.custom\n        ).setPlaceholder(\"Paste palette\")": ".setDesc(\"\").addText((text) => {\n        text.inputEl.style.minWidth = \"100%\";\n        text.setValue(\n          this.plugin.settings.palette.custom\n        ).setPlaceholder(\"粘贴调色板\")",
        ".setDesc(\n      \"If the colors of some tags don't fit, you can shift the palette.\"\n    )": ".setDesc(\n      \"如果某些标签的颜色不合适，您可以调整调色板。\"\n    )",
        ".setDesc(\"Show accessibility options\")": ".setDesc(\"显示可访问性选项\")",
        ".setDesc(\"Use only white and black colors for texts\")": ".setDesc(\"文本仅使用白色和黑色\")",
        ".setDesc(\n      \"Dangerous actions or insanely unstable options that could be changed or removed in any time\"\n    )": ".setDesc(\n      \"危险操作或极度不稳定的选项，这些选项可能随时更改或移除\"\n    )",
        ".setDesc(\"It helps to make text readable\")": ".setDesc(\"这有助于使文本可读\")",
        ".setDesc(\n        \"\\u{1F6A8} All colors of all tags will be recalculated as if it was the first launch of the plugin. Requires restart of Obsidian.\"\n      )": ".setDesc(\n        \"\\u{1F6A8} 所有标签的所有颜色将重新计算，就像插件首次启动一样。需要重启 Obsidian。\"\n      )",
        ".setPlaceholder(\"Paste palette\")": ".setPlaceholder(\"粘贴调色板\")",
        "Notice(\n            `\\u2705 Reset is done\nPlease restart Obsidian`,\n            1e4\n          )": "Notice(\n            `\\u2705 重置完成\n请重新启动 Obsidian`,\n            1e4\n          )",
        "Notice(`\\u2B06\\uFE0F Colored Tags: a new version is available`)": "Notice(`\\u2B06\\uFE0F 彩色标签：有新版本可用`)",
        ".log(\"the unthinkable has happened\")": ".log(\"难以置信的事情发生了\")",
        "Error(`Missing white point to convert ${!W1 ? \"from\" : \"\"}${!W1 && !W2 ? \"/\" : \"\"}${!W2 ? \"to\" : \"\"}`);": "Error(`缺少白点以进行转换 ${!W1 ? \"从\" : \"\"}${!W1 && !W2 ? \"/\" : \"\"}${!W2 ? \"到\" : \"\"}`);",
        "Error(\"Only Bradford CAT with white points D50 and D65 supported for now.\");": "Error(\"目前仅支持白点为D50和D65的Bradford色差转换。\" );",
        "Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);": "Error(`无法在颜色空间 ${this} 和 ${space} 之间转换：未找到连接空间`);",
        "Error(`Duplicate color space registration: '${id}'`);": "Error(`颜色空间注册重复：'${id}'`);",
        "Error(`No color space found with id = \"${space}\"`);": "Error(`未找到id为 \"${space}\" 的颜色空间`);",
        "Error(`${space} is not a valid color space`);": "Error(`${space} 不是有效的颜色空间`);",
        "Error(`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`);": "Error(`无法解析坐标参考 ${ref}：未指定颜色空间，且不允许相对引用`);",
        "Error(`No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(\", \")}`);": "Error(`在 ${space.name} 中未找到 \"${coord}\" 坐标。其坐标为： ${Object.keys(space.coords).join(\", \")}`);",
        "Error(`Cannot parse color(${id}). ` + (didYouMean || \"Missing a plugin?\"));\n    } else {\n      for (let space of ColorSpace.all) {\n        let format = space.getFormat(name);\n        if (format && format.type === \"function\") {\n          let alpha = 1;\n          if (format.lastAlpha || last(env.parsed.args).alpha) {\n            alpha = env.parsed.args.pop();\n          }\n          let coords = env.parsed.args;\n          let types;\n          if (format.coordGrammar) {\n            types = Object.entries(space.coords).map(([id, coordMeta], i) => {\n              var _a2;\n              let coordGrammar2 = format.coordGrammar[i];\n              let providedType = (_a2 = coords[i]) == null ? void 0 : _a2.type;\n              let type2 = coordGrammar2.find((c4) => c4 == providedType);\n              if (!type2) {\n                let coordName = coordMeta.name || id;\n                throw new TypeError(`${providedType} not allowed for ${coordName} in ${name}()`);": "Error(`无法解析颜色(${id})。 ` + (didYouMean || \"缺少插件？\"));\n    } else {\n      for (let space of ColorSpace.all) {\n        let format = space.getFormat(name);\n        if (format && format.type === \"function\") {\n          let alpha = 1;\n          if (format.lastAlpha || last(env.parsed.args).alpha) {\n            alpha = env.parsed.args.pop();\n          }\n          let coords = env.parsed.args;\n          let types;\n          if (format.coordGrammar) {\n            types = Object.entries(space.coords).map(([id, coordMeta], i) => {\n              var _a2;\n              let coordGrammar2 = format.coordGrammar[i];\n              let providedType = (_a2 = coords[i]) == null ? void 0 : _a2.type;\n              let type2 = coordGrammar2.find((c4) => c4 == providedType);\n              if (!type2) {\n                let coordName = coordMeta.name || id;\n                throw new TypeError(`${providedType}不允许用于${coordName}在${name}()`);",
        "Error(`Could not parse ${str} as a color. Missing a plugin?`);": "Error(`无法将 ${str} 解析为颜色。缺少插件？`);",
        "Error(\"Empty color reference\");": "Error(\"空颜色引用\");",
        "Error(`format ${formatId} can only be used to parse colors, not for serialization`);": "Error(`格式 ${formatId} 仅可用于解析颜色，而非序列化`);",
        "Error(`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`);": "Error(`contrast() 函数需要一个对比算法。请指定以下之一： ${algorithms}`);",
        "Error(`Unknown contrast algorithm: ${algorithm}`);": "Error(`未知的对比算法： ${algorithm}`);",
        "Error(`Unknown deltaE method: ${method}`);": "Error(`未知的 deltaE 方法： ${method}`);",
        "\"\\u{1F338} Adaptive soft\"": "\"\\u{1F338} 自适应柔和\"",
        "\"\\u{1F33A} Adaptive bright\"": "\"\\u{1F33A} 自适应明亮\"",
        "\"Custom\"": "\"自定义\"",
        "The format is <code>XXXXXX-XXXXXX-XXXXXX</code> for each RGB color.<br/>": "每个 RGB 颜色的格式为 <code>XXXXXX-XXXXXX-XXXXXX</code>.<br/>",
        "You can share the best color palettes or get one <a href=\"https://github.com/pfrankov/obsidian-colored-tags/discussions/18\">from the community</a>.": "您可以分享最佳颜色调色板，或从 <a href=\"https://github.com/pfrankov/obsidian-colored-tags/discussions/18\">社区</a> 获取一个。"
    }
}