{
    "manifest": {
        "translationVersion": 1734876560015,
        "pluginVersion": "0.3.1"
    },
    "description": {
        "original": "This is a simple wrapper for Obsidian-Tasks-Calendar (https://github.com/702573N/Obsidian-Tasks-Calendar) and Obsidian-Tasks-Timeline (https://github.com/702573N/Obsidian-Tasks-Timeline).",
        "translation": "This is a simple wrapper for Obsidian-Tasks-Calendar (https://github.com/702573N/Obsidian-Tasks-Calendar) and Obsidian-Tasks-Timeline (https://github.com/702573N/Obsidian-Tasks-Timeline)."
    },
    "dict": {
        ".setName(\"Open View On Startup\")": ".setName(\"启动时打开视图\")",
        ".setName(\"Use Builtin Style\")": ".setName(\"使用内置风格\")",
        ".setName(\"Behavior of Counters and Filters Panel\")": ".setName(\"计数器和过滤器面板的行为\")",
        ".setName(\"Enable Quick Entry Panel\")": ".setName(\"启用快速输入面板\")",
        ".setName(\"Tasks Files\")": ".setName(\"任务文件\")",
        ".setName(\"Inbox\")": ".setName(\"收件箱\")",
        ".setName(\"Hide tasks of specific status.\")": ".setName(\"隐藏特定状态的任务。\")",
        ".setName(\"Use Relative Date\")": ".setName(\"使用相对日期\")",
        ".setName(\"Use Priority\")": ".setName(\"使用优先级\")",
        ".setName(\"Use Tags\")": ".setName(\"使用标签\")",
        ".setName(\"Use Filename\")": ".setName(\"使用文件名\")",
        ".setName(\"Date Format\")": ".setName(\"日期格式\")",
        ".setName(\"Convert Time Prefix\")": ".setName(\"转换时间前缀\")",
        ".setName(\"Use Include Tags\")": ".setName(\"使用包含标签\")",
        ".setName(\"Use Exclude Tags\")": ".setName(\"使用排除标签\")",
        ".setName(\"Exclude Paths\")": ".setName(\"排除路径\")",
        ".setName(\"Tag and color\")": ".setName(\"标签和颜色\")",
        ".setName(\"Tag\")": ".setName(\"标签\")",
        ".setDesc(\"Use builtin styles (the marker icons for task status) or not.\\n                If disabled, styles defined by the theme you are using will be used.\")": ".setDesc(\"是否使用内置样式（任务状态的标记图标）。\\n如果禁用，将使用您正在使用的主题定义的样式。\")",
        ".setDesc(\"Use quick entry panel or not.\")": ".setDesc(\"是否使用快速进入面板。\")",
        ".setDesc(\"Specify the folder where the daily notes are saved.\")": ".setDesc(\"指定保存每日笔记的文件夹。\")",
        ".setDesc(\"Use relative date to describe the task dates or not.\")": ".setDesc(\"是否使用相对日期来描述任务日期。\")",
        ".setDesc(\"Display the priority information of tasks or not.\")": ".setDesc(\"是否显示任务的优先级信息。\")",
        ".setDesc(\"Display the tags of tasks or not. Color palette can be defined for tags!\")": ".setDesc(\"是否显示任务的标签。可以为标签定义调色板！\")",
        ".setTooltip(\"Delete\")": ".setTooltip(\"删除\")",
        ".setTooltip(\"Edit\")": ".setTooltip(\"编辑\")",
        ".setTooltip(\"Add a palette\")": ".setTooltip(\"添加调色板\")",
        ".setTooltip(\"Save\")": ".setTooltip(\"保存\")",
        ".setName(\"Enable Counters and Filters Panel\")": ".setName(\"启动计数器和过滤器面板\")",
        ".setName(\"Quick Entry Panel Position\")": ".setName(\"快速进入面板位置\")",
        ".setName(\"Section For New Tasks\")": ".setName(\"新任务部件\")",
        ".setName(\"Daily Note Folder\")": ".setName(\"日记文件夹\")",
        ".setName(\"Daily Note Format\")": ".setName(\"日记格式\")",
        ".setName(\"Enable Year Header\")": ".setName(\"开启年份标题\")",
        ".setName(\"Forward Tasks From Past\")": ".setName(\"转发过时的任务\")",
        ".setName(\"Today Focus On Load\")": ".setName(\"加载今日任务\")",
        ".setName(\"Activate Filter On Load\")": ".setName(\"加载时激活过滤器\")",
        ".setName(\"Use Recurrence\")": ".setName(\"使用递归\")",
        ".setName(\"Use Section\")": ".setName(\"使用部件\")",
        ".setName(\"Sort By\")": ".setName(\"排序\")",
        ".setName(\"Include Paths\")": ".setName(\"包含路径\")",
        ".setName(\"Filter Empty\")": ".setName(\"过滤空值\")",
        ".setDesc(\"Open the view on startup or not.\")": ".setDesc(\"是否在启动时打开视图。\")",
        ".setDesc(\"Use counters and filters on the quick entry panel or not.\")": ".setDesc(\"是否在快速输入面板上使用计数器和过滤器。\")",
        ".setDesc(\"Set the default behavior of the counter and filter buttons.                Available choices are: *Filter* to filter other items out,                or *Focus* to make selected items more clear.\")": ".setDesc(\"设置计数器和过滤器按钮的默认行为。可用的选项有：*Filter* 过滤掉其他项目，或 *Focus* 使所选项目更清晰。\")",
        ".setDesc(\"Where you like the entry panel to be,                * Top means on top of the view,                * Bottom means on bottom of the view,                * Today means in today's view.\")": ".setDesc(\"你喜欢进入面板的位置，*Top* 表示在视图的顶部，*Bottom* 表示在视图的底部，*Today* 表示在今天的视图中。\")",
        ".setDesc(\"Task Files you would like to specify explicitly for quick entry panel.                    make sure paths are separated by , .\")": ".setDesc(\"要显式指定用于快速执行面板的任务文件。确保路径之间用\",\"分隔。\")",
        ".setDesc(\"Set a file as an 'Inbox' for task items from the quick entry panel.                    This file will be displayed on top of the file list.\")": ".setDesc(\"将一个文件设置为快速输入面板中的任务项的“收件箱”。该文件将显示在文件列表的顶部。\")",
        ".setDesc(\"Specify under which section the new task items should be appended.\")": ".setDesc(\"指定应在哪个部分下追加新任务项。\")",
        ".setDesc(\"Display the year on top of tasks of that year or not.\")": ".setDesc(\"将年份显示在该年的任务上方或不显示。\")",
        ".setDesc(\"Provide comma split status markers, e.g.,: x, - \\n                Use [ ] if you would like to hide all tasks with marker [ ] or status todo.\")": ".setDesc(\"提供逗号分隔状态标记，例如：x,- \\n如果您想隐藏所有带有标记[]或状态todo的任务，请使用[]\")",
        ".setDesc(\"Forward overdue tasks from the past and all unplanned tasks to display them on the today panel or not.\")": ".setDesc(\"转发过期任务和所有未计划的任务，以便在今日面板上显示它们。\")",
        ".setDesc(\"Activate today focus on load or not.\")": ".setDesc(\"激活或关闭加载时聚焦到当日任务\")",
        ".setDesc(\"Activate a filter or not\")": ".setDesc(\"激活或关闭过滤\")",
        ".setDesc(\"Display the recurrence information of tasks or not.\")": ".setDesc(\"是否重复显示任务信息。\")",
        ".setDesc(\"Display which file the task is from or not.\")": ".setDesc(\"是否显示任务来自哪个文件。\")",
        ".setDesc(\"Display which section the task is from or not.\")": ".setDesc(\"是否显示任务来自哪个部分\")",
        ".setDesc(\"Convert 24 hour time prefix to 12 hour time with am/pm. \\n\t\t\t    For example, 15:30 at the beginning of a task will become 3:30 pm.\\n\t\t\t    This is applied after sorting, enabling a chronological ordering.\")": ".setDesc(\"用am/pm转换24小时时间前缀为12小时时间。\\n例如，任务开始时的15:30将变成下午3:30。\\n这在排序之后应用，支持按时间顺序排序。\")",
        ".setDesc(\"Use tags filters to filter tasks without specific tags out or not.\")": ".setDesc(\"打开/关闭使用标签过滤器来过滤没有特定标签的任务。\")",
        ".setDesc(\"Use tags filters to filters tasks with specific tags out or not.\")": ".setDesc(\"打开/关闭使用标签过滤器过滤带有特定标签的任务。\")",
        ".setDesc(\"Filter empty items out or not. If not, the raw text will be displayed.\")": ".setDesc(\"是否过滤空项。如果不是，将显示原始文本。\")",
        ".setDesc(\"Enter tag text (# included) in the text input and select color in the color selector.\")": ".setDesc(\"在文本框中输入标签文本（# included），并在颜色选择器中选择颜色。\")",
        ".setPlaceholder(\"comma separated file paths, e.g.: path1,path2\")": ".setPlaceholder(\"以逗号分隔的文件路径, 例如: path1,path2\")",
        ".setPlaceholder(\"Status markers split by comma. e.g.,: x, -.\")": ".setPlaceholder(\"状态标记用逗号分隔. 例如: x, -.\")",
        ".setPlaceholder(\"e.g.: YYYY-MM-DD\")": ".setPlaceholder(\"例如: YYYY-MM-DD\")",
        ".setPlaceholder(\"comma separated file paths, e.g.: path1,path2/path3,path4.md\")": ".setPlaceholder(\"以逗号分隔的文件路径, 如: path1,path2/path3,path4.md\")",
        ".setTooltip(\"Cancel\")": ".setTooltip(\"撤销\")",
        "Notice(`Tag ${t} already exists.`, 5e3)": "Notice(`标签 ${t} 已存在。`, 5e3)",
        "Notice(`${this.tagText} seems not a valid tag.`, 5e3)": "Notice(`${this.tagText} 似乎不是一个有效的标签`, 5e3)",
        "Notice(\"The color seems to be empty, maybe you forget to click the color picker.\", 5e3)": "Notice(\"颜色似乎是空的，可能您忘记单击颜色选择器。\", 5e3)",
        "Notice(\"Error when creating file \" + path + \" for new task: \" + reason, 5e3)": "Notice(\"创建文件时报告 \" + path + \" 新的任务: \" + reason, 5e3)",
        "Notice(\"Error when writing new tasks to \" + path + \".\" + reason, 5e3)": "Notice(\"创建新任务时报错 \" + path + \".\" + reason, 5e3)",
        "Notice(\"Error when reading file \" + path + \".\" + reason, 5e3)": "Notice(\"读取文件时报错 \" + path + \".\" + reason, 5e3)",
        "Notice(\"No such file: \" + path, 5e3)": "Notice(\"没有这个文件: \" + path, 5e3)",
        "Notice(\"Error when trying open file: \" + err, 5e3)": "Notice(\"打开文件时报错: \" + err, 5e3)",
        "Notice(\"Something went wrong: \" + reason, 5e3)": "Notice(\"发生了一些错误: \" + reason, 5e3)",
        "Notice(\"Error when parsing task items: \" + reason, 5e3)": "Notice(\"解析任务项时报错: \" + reason, 5e3)",
        "Notice(\"Error when generating tasks from files: \" + reason, 5e3)": "Notice(\"从文件生成任务时报错: \" + reason, 5e3)",
        "(log(asUint)": "(log(asUint)",
        "alog(boundary, errorInfo)": "alog(boundary, errorInfo)",
        ".log(this.app.workspace.getLeavesOfType(TIMELINE_VIEW)": ".log(this.app.workspace.getLeavesOfType(TIMELINE_VIEW)",
        ".log(e)": ".log(e)",
        " error(format)": " error(format)",
        " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)": " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)",
        " error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"提供的键是不支持的类型 %s。在这里使用该值之前，必须将其强制转换为字符串.\", typeName(value)",
        " error(\"Received an unexpected object in getComponentNameFromType()": " error(\"Received an unexpected object in getComponentNameFromType()",
        " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
        " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
        " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()": " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()",
        " error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\")": " error(\"渲染不受支持，并将在未来的主要版本中删除。你是想用渲染代替吗？\")",
        " error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"渲染不受支持，并将在未来的主要版本中删除。你是想用渲染代替吗？\")",
        " error(\"lazy: Expected the result of a dynamic import()": " error(\"lazy: Expected the result of a dynamic import()",
        " error(\"React.lazy(...)": " error(\"React.lazy(...)",
        " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)": " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)",
        " error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render)": " error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render)",
        " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")": " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")",
        " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")": " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")",
        " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)": " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)",
        " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)": " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)",
        " error(\"Calling useContext(Context.Consumer)": " error(\"Calling useContext(Context.Consumer)",
        " error(\"Calling useContext(Context.Provider)": " error(\"Calling useContext(Context.Provider)",
        " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")": " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")",
        " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)": " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)",
        " error(\"Failed %s type: %s\", location, error$1.message)": " error(\"Failed %s type: %s\", location, error$1.message)",
        " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)": " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)",
        " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")": " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")",
        " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")": " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")",
        " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key)": " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key)",
        " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")": " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")",
        " error(\"React.createElement: type is invalid -- expected a string (for built-in components)": " error(\"React.createElement: type is invalid -- expected a string (for built-in components)",
        " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()": " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()",
        " error(\"You called act(async ()": " error(\"You called act(async ()",
        " error(\"You seem to have overlapping act()": " error(\"You seem to have overlapping act()",
        " error(\"React.jsx: type is invalid -- expected a string (for built-in components)": " error(\"React.jsx: type is invalid -- expected a string (for built-in components)",
        " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")": " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")",
        " error('A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName)": " error('A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName)",
        " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)": " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)",
        " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)": " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)",
        " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
        " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
        " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)",
        " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)": " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)",
        " error(\"Invalid attribute name: `%s`\", attributeName)": " error(\"Invalid attribute name: `%s`\", attributeName)",
        " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)": " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)",
        " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")",
        " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")",
        " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)": " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)",
        " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")": " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")",
        " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")": " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")",
        " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")": " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")",
        " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()",
        " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()",
        " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")": " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")",
        " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)": " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)",
        " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)": " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)",
        " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")": " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")",
        " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)": " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)",
        " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)": " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)",
        " error(\"%s a style property during rerender (%s)": " error(\"%s a style property during rerender (%s)",
        " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")": " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")",
        " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)": " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)",
        " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)": " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)",
        " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)",
        " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
        " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
        " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)",
        " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)",
        " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")": " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")",
        " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)": " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)",
        " error(\"Unknown event handler property `%s`. It will be ignored.\", name)": " error(\"Unknown event handler property `%s`. It will be ignored.\", name)",
        " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)": " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)",
        " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")": " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")",
        " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")": " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")",
        " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)": " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)",
        " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)": " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)",
        " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)",
        " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)": " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)",
        " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()": " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()",
        " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)": " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)",
        " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
        " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
        " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"%s is accessing isMounted inside its render()": " error(\"%s is accessing isMounted inside its render()",
        " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")": " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")",
        " error(\"React instrumentation encountered an error: %s.\", err)": " error(\"React instrumentation encountered an error: %s.\", err)",
        " error(\"React instrumentation encountered an error: %s\", err)": " error(\"React instrumentation encountered an error: %s\", err)",
        " error(\"Should have found matching lanes. This is a bug in React.\")": " error(\"Should have found matching lanes. This is a bug in React.\")",
        " error('Did not expect a listenToNonDelegatedEvent()": " error('Did not expect a listenToNonDelegatedEvent()",
        " error('Did not expect a listenToNativeEvent()": " error('Did not expect a listenToNativeEvent()",
        " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)": " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)",
        " error(\"Extra attributes from the server: %s\", names)": " error(\"Extra attributes from the server: %s\", names)",
        " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)": " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)",
        " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)": " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)",
        " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)": " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)",
        " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)": " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)",
        " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)": " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)",
        " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()": " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()",
        " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()": " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()",
        " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()": " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()",
        " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()": " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()",
        " error(\"validateDOMNesting: when childText is passed, childTag should be null\")": " error(\"validateDOMNesting: when childText is passed, childTag should be null\")",
        " error(\"validateDOMNesting(...)": " error(\"validateDOMNesting(...)",
        " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()": " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()",
        " error(\"Unexpected pop.\")": " error(\"Unexpected pop.\")",
        " error(\"Unexpected Fiber popped.\")": " error(\"Unexpected Fiber popped.\")",
        " error(\"%s.childContextTypes is specified but there is no getChildContext()": " error(\"%s.childContextTypes is specified but there is no getChildContext()",
        " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")": " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")",
        " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")": " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")",
        " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")",
        " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')": " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')",
        " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. We recommend using useRef()": " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. We recommend using useRef()",
        " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")": " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")",
        " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key)": " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key)",
        " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()": " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()",
        " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")": " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")",
        " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")": " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")",
        " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()": " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()",
        " error(\"An update (setState, replaceState, or forceUpdate)": " error(\"An update (setState, replaceState, or forceUpdate)",
        " error(\"%s received a final argument that is not an array (instead, received `%s`)": " error(\"%s received a final argument that is not an array (instead, received `%s`)",
        " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)": " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)",
        " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")": " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")",
        " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")": " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")",
        " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")": " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")",
        " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")",
        " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")",
        " error(\"Expected useImperativeHandle()": " error(\"Expected useImperativeHandle()",
        " error(\"State updates from the useState()": " error(\"State updates from the useState()",
        " error(\"Do not call Hooks inside useEffect(...)": " error(\"Do not call Hooks inside useEffect(...)",
        " error(\"%s(...)": " error(\"%s(...)",
        " error(\"%s.getDerivedStateFromProps()": " error(\"%s.getDerivedStateFromProps()",
        " error(\"%s.shouldComponentUpdate()": " error(\"%s.shouldComponentUpdate()",
        " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)": " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)",
        " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)": " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)",
        " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)": " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)",
        " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)": " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)",
        " error(\"%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()": " error(\"%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()",
        " error(\"%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()": " error(\"%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()",
        " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)": " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)",
        " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)": " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)",
        " error(\"%s has a method called componentShouldUpdate()": " error(\"%s has a method called componentShouldUpdate()",
        " error(\"%s has a method called shouldComponentUpdate()": " error(\"%s has a method called shouldComponentUpdate()",
        " error(\"%s has a method called componentDidUnmount()": " error(\"%s has a method called componentDidUnmount()",
        " error(\"%s has a method called componentDidReceiveProps()": " error(\"%s has a method called componentDidReceiveProps()",
        " error(\"%s has a method called componentWillRecieveProps()": " error(\"%s has a method called componentWillRecieveProps()",
        " error(\"%s has a method called UNSAFE_componentWillRecieveProps()": " error(\"%s has a method called UNSAFE_componentWillRecieveProps()",
        " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)": " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)",
        " error(\"%s: getSnapshotBeforeUpdate()": " error(\"%s: getSnapshotBeforeUpdate()",
        " error(\"%s: getDerivedStateFromProps()": " error(\"%s: getDerivedStateFromProps()",
        " error(\"%s: getDerivedStateFromError()": " error(\"%s: getDerivedStateFromError()",
        " error(\"%s.state: must be set to an object or null\", name)": " error(\"%s.state: must be set to an object or null\", name)",
        " error(\"%s.getChildContext()": " error(\"%s.getChildContext()",
        " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()": " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()",
        " error(\"%s.componentWillMount()": " error(\"%s.componentWillMount()",
        " error(\"%s.componentWillReceiveProps()": " error(\"%s.componentWillReceiveProps()",
        " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)": " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)",
        " error(\"%s: Error boundaries should implement getDerivedStateFromError()": " error(\"%s: Error boundaries should implement getDerivedStateFromError()",
        " error(\"%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.\", componentName)": " error(\"%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.\", componentName)",
        " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)": " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)",
        " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)": " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)",
        " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()": " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()",
        " error(\"%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.\", componentName)": " error(\"%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.\", componentName)",
        " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)": " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)",
        " error(\"%s: Function components do not support contextType.\", _componentName4)": " error(\"%s: Function components do not support contextType.\", _componentName4)",
        " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)": " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)",
        " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()",
        " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()",
        " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
        " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
        " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)": " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)",
        " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)": " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)",
        " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index2, type)": " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index2, type)",
        " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)": " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)",
        " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")": " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")",
        " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")",
        " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")": " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")",
        " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current2)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current2)",
        " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"%s.getSnapshotBeforeUpdate()": " error(\"%s.getSnapshotBeforeUpdate()",
        " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)": " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)",
        " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()": " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()",
        " error(\"The current testing environment is not configured to support act(...)": " error(\"The current testing environment is not configured to support act(...)",
        " error(\"useInsertionEffect must not schedule updates.\")": " error(\"useInsertionEffect must not schedule updates.\")",
        " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")": " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")",
        " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)": " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)",
        " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")": " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")",
        " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")": " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")",
        " error(\"Cannot update a component (`%s`)": " error(\"Cannot update a component (`%s`)",
        " error(\"Cannot update during an existing state transition (such as within `render`)": " error(\"Cannot update during an existing state transition (such as within `render`)",
        " error(\"An update to %s inside a test was not wrapped in act(...)": " error(\"An update to %s inside a test was not wrapped in act(...)",
        " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)": " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)",
        " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)": " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)",
        " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)": " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)",
        " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current)": " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current)",
        " error(\"render(...)": " error(\"render(...)",
        " error(\"You passed a container to the second argument of root.render(...)": " error(\"You passed a container to the second argument of root.render(...)",
        " error(\"You passed a second argument to root.render(...)": " error(\"You passed a second argument to root.render(...)",
        " error(\"unmount(...)": " error(\"unmount(...)",
        " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")": " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")",
        " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)": " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)",
        " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)": " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)",
        " error(\"createRoot()": " error(\"createRoot()",
        " error(\"You are calling ReactDOMClient.createRoot()": " error(\"You are calling ReactDOMClient.createRoot()",
        " error(\"render()": " error(\"render()",
        " error(\"findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\")": " error(\"findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\")",
        " error(\"%s is accessing findDOMNode inside its render()": " error(\"%s is accessing findDOMNode inside its render()",
        " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.hydrate()": " error(\"You are calling ReactDOM.hydrate()",
        " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.render()": " error(\"You are calling ReactDOM.render()",
        " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()": " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()",
        " error(\"unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.unmountComponentAtNode()": " error(\"You are calling ReactDOM.unmountComponentAtNode()",
        " error(\"unmountComponentAtNode()": " error(\"unmountComponentAtNode()",
        " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")": " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")",
        " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
        " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
        " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")": " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")",
        ".error(\"Read file from obsidian cache failed: \" + reason)": ".error(\"Read file from obsidian cache failed: \" + reason)",
        "name: \"Anno Domini\"": "name: \"Anno Domini\"",
        "name: \"Before Christ\"": "name: \"Before Christ\"",
        "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"": "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"",
        "name: `%s`": "name: `%s`",
        "name: \"className\"": "name: \"className\"",
        "name: \"name\"": "name: \"name\"",
        "name: \"attributeName\"": "name: \"attributeName\"",
        "name: \"glyphName\"": "name: \"glyphName\"",
        "name : \"invokeguardedcallback\"": "name : \"invokeguardedcallback\"",
        "name: \"Action\"": "name: \"Action\"",
        "name: \"File name\"": "name: \"File name\"",
        "name: \"Filter Type\"": "name: \"Filter Type\"",
        "name: \"priorityFilter\"": "name: \"priorityFilter\"",
        "name: \"Open Tasks Timeline View\"": "name: \"Open Tasks Timeline View\"",
        "description: '#dog #car http://www/ddd#ere #house'": "description: '#dog #car http://www/ddd#ere #house'",
        "link: \"xmlnsXlink\"": "link: \"xmlnsXlink\"",
        "text: \"Timeline Settings\"": "text: \"时间线设置\"",
        "text: \"UI Settings\"": "text: \"UI 设置\"",
        "text: \"Task Item Visualization Settings\"": "text: \"任务项可视化设置\"",
        "text: `${tag}`": "text: `${tag}`",
        "text: \"Other Settings\"": "text: \"其他设置\"",
        ".createEl(\"h1\", { text: \"Timeline Settings\" })": ".createEl(\"h1\", { text: \"时间线设置\" })",
        ".createEl(\"h2\", { text: \"UI Settings\" })": ".createEl(\"h2\", { text: \"用户界面设置\" })",
        ".createEl(\"h2\", { text: \"Task Item Visualization Settings\" })": ".createEl(\"h2\", { text: \"任务项可视化设置\" })",
        ".createEl(\"h2\", { text: \"Other Settings\" })": ".createEl(\"h2\", { text: \"其他设置\" })",
        "\"Daily note file format.                    The format sould be of moment format,                    see <a href=https://momentjs.com/docs/#/displaying/format/>docs of moment.js</a>                    for more details.\"": "\"每日笔记文件格式.                    格式应该是即时格式,                    更多详细信息参阅 <a href=https://momentjs.com/docs/#/displaying/format/>文档 moment.js</a>                    .\"",
        "\"Hide Tags\",": "\"隐藏标签\",",
        "\"Specify which tags are not necessary to display with a tag badge,            note that all tag texts are remove from the displayed item text by default.            Also note that the tags are just hided, not removed from the item.\"": "\"指定哪些标签不需要与标签徽章一起显示，请注意，默认情况下，所有标签文本都会从显示的项目文本中删除。还要注意，标签只是隐藏的，而不是从项目中删除的。\"",
        "\"Specify format you would like to use for dates.                Note that the format should be of moment format.                See <a href=https://momentjs.com/docs/#/displaying/format/>docs of moment.js</a> for more details.\"": "\"指定要用于日期的格式。                请注意，格式应为准确时刻格式。                了解更多详情，请参阅 <a href=https://momentjs.com/docs/#/displaying/format/>文档 moment.js</a> \"",
        "\"Specify how you would like the taks item to be sorted inside a date.\"": "\"指定您希望如何在日期内对节拍项目进行排序。\"",
        "\"Include tasks match specific paths (folders, files). \\n                <p style=color:red;>NOTE that no prefix or trailing '/' needed, unless you want to filter the entire vault out.</p>\"": "\"包含与特定路径（文件夹、文件）匹配的任务。 \\n                <p style=color:red;>请注意，除非您想过滤掉整个库，否则不需要前缀或尾随的 '/'。</p>\"",
        "\"Exclude tasks match specific paths (folders, files). \\n                <p style=color:red;>NOTE that no prefix or trailing '/' needed, unless you want to filter the entire vault out.</p>\"": "\"排除与特定路径（文件夹、文件）匹配的任务。 \\n                <p style=color:red;>请注意，除非您想过滤掉整个库，否则不需要前缀或尾随的 '/'。</p>\"",
        "Convert 24 hour time prefix to 12 hour time with am/pm.": "使用 am/pm 将24小时时间前缀转换为12小时时间。",
        "For example, 15:30 at the beginning of a task will become 3:30 pm.": "例如，任务开始时的15:30将变为3:30 pm。",
        "This is applied after sorting, enabling a chronological ordering.": "这将在排序后应用，实现按时间顺序排序。",
        "\"Filter\": \"Filter\"": "\"Filter\": \"过滤\"",
        "\"Focus\": \"Focus\"": "\"Focus\": \"聚焦\"",
        "\"today\": \"today\"": "\"today\": \"今天\"",
        "\"top\": \"top\"": "\"top\": \"顶部\"",
        "\"bottom\": \"bottom\"": "\"bottom\": \"底部\""
    }
}