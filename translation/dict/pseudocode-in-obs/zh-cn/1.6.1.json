{
    "manifest": {
        "translationVersion": 1731593762629,
        "pluginVersion": "1.6.1"
    },
    "description": {
        "original": "This is an obsidian plugin that helps to render a LaTeX-style pseudocode inside a code block.",
        "translation": "这是一个 Obsidian 插件，它有助于在代码块中呈现 LaTeX 风格的伪代码。"
    },
    "dict": {
        "Notice(\n        \"Pseudocode Plugin: Preamble file not found at \" + searchPath + \".\"\n      )": "Notice(\n        \"Pseudocode Plugin: 没有找到前导文件（可能是一些自定义的宏定义等），路径为: \" + searchPath + \".\"\n      )",
        "Notice(\"Pseudocode Plugin: Preamble file loaded.\")": "Notice(\"Pseudocode Plugin: 前导文件（可能是一些自定义的宏定义等）未加载\")",
        "Notice(\n        \"Pseudocode Plugin: Preamble file contains invalid LaTeX. Please refer to console for details.\"\n      )": "Notice(\n        \"Pseudocode Plugin: 前导文件（可能是一些自定义的宏定义等）包含无效的 LaTeX\"\n      )",
        ".log(\"light theme detected\")": ".log(\"检测到浅色主题。\")",
        ".log(\"dark theme detected\")": ".log(\"检测到深色主题。\")",
        ".log(\"Copied to clipboard\")": ".log(\"已复制到剪贴板\")",
        ".log(error)": ".log(error)",
        ".log(\"Preamble is enabled.\")": ".log(\"前导文件（可能是一些自定义的宏定义等）已打开\")",
        ".log(\"Loaded preamble:\\n\" + this.preamble)": ".log(\"Loaded preamble:\\n\" + this.preamble)",
        ".log(\n        \"Preamble file loaded. You can check the detail in console.\"\n      )": ".log(\n        \"前导文件（可能是一些自定义的宏定义等）已加载. 你可以在控制台中查看详细信息。\"\n      )",
        ".error(\"Failed to copy to clipboard: \", error)": ".error(\"复制失败: \", error)",
        "name: \"Insert a new pseudocode block\"": "name: \"插入一个新的latex伪代码块。\"",
        "text: \"Render Behevior\"": "text: \"渲染行为\"",
        "text: \"Preamble Settings\"": "text: \"前导文件设置（可能是一些自定义的宏定义等）\"",
        ".setName(\"Block Size\")": ".setName(\"块大小\")",
        ".setName(\"Follow System Theme\")": ".setName(\"跟随系统主题\")",
        ".setName(\"Indent Size\")": ".setName(\"缩进大小\")",
        ".setName(\"Comment Delimiter\")": ".setName(\"注释分隔符\")",
        ".setName(\"Show Line Numbers\")": ".setName(\"显示行号\")",
        ".setName(\"Line Number Punctuation\")": ".setName(\"行号标点\")",
        ".setName(\"No End\")": ".setName(\"无结束\")",
        ".setName(\"Scope Lines\")": ".setName(\"作用域线\")",
        ".setName(\"Preamble Enabled\")": ".setName(\"启用前导部分\")",
        ".setName(\"Preamble Path\")": ".setName(\"前导路径\")",
        ".setName(\"Preamble Loaded Notice\")": ".setName(\"前导加载通知\")",
        ".setDesc(\n      \"The width of the pseudocode block. The unit is 'em'. The default value is 99, which will work as the max width of the editor. '30' looks good for me.\"\n    )": ".setDesc(\n      \"伪代码块的宽度。单位为'em'。默认值为99，作为编辑器的最大宽度。'30'对我来说看起来不错。\"\n    )",
        ".setDesc(\"Whether to follow the system theme.\")": ".setDesc(\"是否跟随系统主题。\")",
        ".setDesc(\n      \"The indent size of inside a control block, e.g. if, for, etc. The unit must be in 'em'.\"\n    )": ".setDesc(\n      \"控制块内部的缩进大小，例如if、for等。单位必须为'em'。\"\n    )",
        ".setDesc(\"The string used to indicate a comment in the pseudocode.\")": ".setDesc(\"用于指示伪代码中注释的字符串。\")",
        ".setDesc(\"Whether line numbering is enabled.\")": ".setDesc(\"是否启用行号。\")",
        ".setDesc(\n      \"The punctuation used to separate the line number from the pseudocode.\"\n    )": ".setDesc(\n      \"用于分隔行号和伪代码的标点符号。\"\n    )",
        ".setDesc(\n      \"If enabled, pseudocode blocks will not have an 'end' statement.\"\n    )": ".setDesc(\n      \"如果启用，伪代码块将没有'end'语句。\"\n    )",
        ".setDesc(\n      \"If enabled, pseudocode blocks will have lines indicating the scope of the block.\"\n    )": ".setDesc(\n      \"如果启用，伪代码块将有指示块作用域的线条。\"\n    )",
        ".setDesc(\n      \"Whether to load the preamble file. Please reload the plugin for this setting to take effect.\"\n    )": ".setDesc(\n      \"是否加载前导文件。请重新加载插件以使此设置生效。\"\n    )",
        ".setDesc(\n      \"The path to the preamble file. The path is relative to the vault root.\"\n    )": ".setDesc(\n      \"前导文件的路径。路径相对于库的根目录。\"\n    )",
        ".setDesc(\n      \"Whether to show a notice everytime the preamble is loaded.\"\n    )": ".setDesc(\n      \"是否每次加载前导时显示通知。\"\n    )"
    }
}