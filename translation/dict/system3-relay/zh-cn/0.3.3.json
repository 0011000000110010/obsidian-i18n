{
    "manifest": {
        "translationVersion": 1730379853435,
        "pluginVersion": "0.3.3"
    },
    "description": {
        "original": "Collaborate in real time with live cursors. Create relays, add folders, and manage user access.",
        "translation": "与实时光标实时协作。创建中继、添加文件夹和管理用户访问。"
    },
    "dict": {
        "Notice(n.name+`:\nAn error has occurred, please reload Obsidian.`)": "Notice(n.name+`:\n发生错误，请重新加载Obsidian。`)",
        "Notice(\"Invite link copied\")": "Notice(\"邀请链接已复制\")",
        "Notice(\"Please sign in to use relay\")": "Notice(\"请登录以使用relay\")",
        ".log(`[${this.path}] disconnection event`,c)": ".log(`[${this.path}] 断开连接事件`,c)",
        ".log(\"get provider token\")": ".log(\"获取提供者令牌\")",
        ".log(`Token Refreshed: setting new provider url, ${this._provider.url}`)": ".log(`令牌已刷新：设置新提供者URL，${this._provider.url}`)",
        ".log(\"file tree\",this._debugFileTree()": ".log(\"文件树\",this._debugFileTree()",
        ".log(\"update count\",this.path,this._persistence._dbsize)": ".log(\"更新计数\",this.path,this._persistence._dbsize)",
        ".log(`syncFileTree diff:\n`+o.join(`\n`)": ".log(`syncFileTree 差异:\n`+o.join(`\n`)",
        ".log(\"[getDoc]: creating doc for shared ID\")": ".log(\"[getDoc]: 为共享ID创建文档\")",
        ".log(\"[getDoc]: creating new shared ID for existing file\")": ".log(\"[getDoc]: 为现有文件创建新的共享ID\")",
        ".log(`[${c.path}] No Known Peers: Syncing file into ytext.`)": ".log(`[${c.path}] 没有已知对等体：正在同步文件到ytext。`)",
        ".log(\"Moving out of shared folder\")": ".log(\"移动出共享文件夹\")",
        ".log(\"Moving in from outside of shared folder\")": ".log(\"从共享文件夹外部移动进来\")",
        ".log(\"created\")": ".log(\"已创建\")",
        ".log(\"Recived yjs event against a non-live view\")": ".log(\"接收到yjs事件，但不是实时视图\")",
        ".log(\"dispatch (incremental)": ".log(\"派遣 (增量)",
        ".log(\"dispatch (full)": ".log(\"派遣 (完整)",
        ".log(\"ytext and editor buffer need syncing\")": ".log(\"ytext和编辑器缓冲区需要同步\")",
        ".log(\"local db missing, not setting buffer\")": ".log(\"本地数据库缺失，未设置缓冲区\")",
        ".log(\"unable to subscribe to metadata updates\")": ".log(\"无法订阅元数据更新\")",
        ".log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`)": ".log(\"[putFolderFiles]\",`上传 ${e.docset.size} 项`)",
        ".log(\"[getFolderFiles]\",`Downloading ${e.docset.size} files`)": ".log(\"[getFolderFiles]\",`下载 ${e.docset.size} 个文件`)",
        ".log(\"[System 3][Relay][Live Views] going offline\")": ".log(\"[System 3][Relay][实时视图] 离线\")",
        ".log(\"[System 3][Relay][Live Views] going online\")": ".log(\"[System 3][Relay][实时视图] 在线\")",
        ".log(`Folder not ready, skipping views. folder=${s.path}`)": ".log(`文件夹未准备好，跳过视图。文件夹=${s.path}`)",
        ".log(\"request failed\",t)": ".log(\"请求失败\",t)",
        ".log(\"starting\")": ".log(\"启动中\")",
        ".log(\"stopping\")": ".log(\"停止中\")",
        ".log(\"check and refresh tokens\")": ".log(\"检查并刷新令牌\")",
        ".log(\"adding to refresh queue\")": ".log(\"添加到刷新队列\")",
        ".log(\"getting next item in queue\")": ".log(\"获取队列中的下一个项目\")",
        ".log(`immediate refresh of ${e}`)": ".log(`立即刷新 ${e}`)",
        ".log(`enqueued refresh of ${e}`)": ".log(`已入队刷新 ${e}`)",
        ".log(`new expiry time is ${r}`)": ".log(`新到期时间为 ${r}`)",
        ".log(`Token refreshed for ${s.friendlyName} (${e})": ".log(`为 ${s.friendlyName} 刷新令牌 (${e})",
        ".log(`getting token ${t}`)": ".log(`获取令牌 ${t}`)",
        ".log(\"token was valid, cache hit!\")": ".log(\"令牌有效，缓存命中！\")",
        ".log(\"back online\")": ".log(\"重新上线\")",
        ".log(\"Loading shared folders\")": ".log(\"加载共享文件夹\")",
        ".log(\"Saving settings: settings file locked\")": ".log(\"保存设置：设置文件已锁定\")",
        ".log(\"Saving settings\",this.settings)": ".log(\"保存设置\",this.settings)",
        ".error(\"[yjs] Tried to remove event handler that doesn't exist.\")": ".error(\"[yjs] 尝试移除不存在的事件处理程序。\")",
        ".error(\"This document was already integrated as a sub-document. You should create a second instance instead with the same guid.\")": ".error(\"该文档已作为子文档集成。你应该创建一个相同guid的第二个实例。\")",
        ".error(\"Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438\")": ".error(\"Yjs已被导入。这会破坏构造函数检查并导致问题！- https://github.com/yjs/yjs/issues/438\")",
        ".error(\"Caught error while handling a Yjs update\",r)": ".error(\"处理Yjs更新时捕获错误\",r)",
        ".error(\"Unable to compute message\")": ".error(\"无法计算消息\")",
        ".error(`Failed to write logs (attempt ${e+1})": ".error(`写入日志失败 (尝试 ${e+1})",
        ".error(\"Max retries reached. Discarding log entries.\")": ".error(\"达到最大重试次数。丢弃日志条目。\")",
        ".error(\"Failed to write log:\",c)": ".error(\"写入日志失败：\",c)",
        ".error(\"Deleting doc (somehow moved outside of shared folder)": ".error(\"删除文档 (某种原因移动到共享文件夹外)",
        ".error(\"Authenticating failed\",t)": ".error(\"身份验证失败\",t)",
        ".error(\"No collection found for\",e)": ".error(\"未找到集合：\",e)",
        ".error(\"No collection found for record\",e)": ".error(\"未找到记录的集合：\",e)",
        "name:\"folder\"": "name:\"文件夹\"",
        "name:\"layers\"": "name:\"图层\"",
        "name:\"satellite\"": "name:\"卫星\"",
        "name:\"settings\"": "name:\"设置\"",
        "name:\"Account\"": "name:\"账户\"",
        "name:\"Your account\"": "name:\"你的账户\"",
        "name:\"Login\"": "name:\"登录\"",
        "name:\"\",description:`If your browser doesn't open, you can login manually by\\n\\t\\t\\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`,$$slots:{default:[Fk]},$$scope:{ctx:n}}}),c=new rt({props:{name:\"": "name:\"\",description:`如果你的浏览器无法打开，你可以手动登录\\n\\t\\t\\t访问此URL。点击将链接复制到剪贴板。`,$$slots:{default:[Fk]},$$scope:{ctx:n}}}),c=new rt({props:{name:\"",
        "name:\"User Agent\"": "name:\"用户代理\"",
        "name:\"Fetch\"": "name:\"获取\"",
        "name:\"Response\"": "name:\"响应\"",
        "name:\"Blink Fetch\"": "name:\"Blink获取\"",
        "name:\"Connections\"": "name:\"连接\"",
        "name:\"Advanced\"": "name:\"高级\"",
        "name:\"Debug logs\"": "name:\"调试日志\"",
        "name:\"Check\"": "name:\"检查\"",
        "name:\"Join a relay\"": "name:\"加入 relay\"",
        "name:\"Share key\"": "name:\"共享密钥\"",
        "name:\"Relays\"": "name:\"中继\"",
        "name:\"Shared folders\"": "name:\"共享文件夹\"",
        "name:\"Folder name\"": "name:\"文件夹名称\"",
        "name:\"Folder location\"": "name:\"文件夹位置\"",
        "name:\"Relay name\"": "name:\"relay 名称\"",
        "name:\"Membership\"": "name:\"会员资格\"",
        "name:\"Leave relay\"": "name:\"离开 relay\"",
        "name:\"Storage\"": "name:\"存储\"",
        "name:\"Destroy relay\"": "name:\"销毁 relay\"",
        "name:`Plan: ${n[7].plan}`": "name:`计划: ${n[7].plan}`",
        "name:\"Sharing\"": "name:\"共享\"",
        "name:\"Remote Folder\"": "name:\"远程文件夹\"",
        "name:\"Remove from relay\"": "name:\"从relay中移除\"",
        "name:\"Local folder\"": "name:\"本地文件夹\"",
        "name:\"Delete from vault\"": "name:\"从保险库中删除\"",
        "name:\"Delete metadata\"": "name:\"删除元数据\"",
        "name:\"Relay\"": "name:\"Relay\"",
        "name:\"Owner\"": "name:\"所有者\"",
        "name:\"Member\"": "name:\"成员\"",
        "name:\"relays\"": "name:\"relays\"",
        "name:\"subscriptions\"": "name:\"订阅\"",
        "name:\"Feature Flags\"": "name:\"功能标志\"",
        "description:\"You are currently logged in as: \"": "description:\"你当前登录为: \"",
        "description:\"Please complete the login flow in your browser and wait a few seconds.\"": "description:\"请在你的浏览器中完成登录流程，并等待几秒钟。\"",
        "description:`If your browser doesn't open, you can login manually by\n\t\t\tvisiting this URL in your browser. Clicking will copy the link to your clipboard.`": "description:`如果你的浏览器无法打开，你可以手动登录\n\t\t\t访问此URL。点击将链接复制到剪贴板。`",
        "description:\"Enable debug logs to help diagnose issues.\"": "description:\"启用调试日志以帮助诊断问题。\"",
        "description:\"Click here once you've completed login\"": "description:\"登录完成后请点击此处\"",
        "description:\"You need to login to use this plugin.\"": "description:\"你需要登录才能使用此插件。\"",
        "description:\"Enter the code that was shared with you.\"": "description:\"输入与您共享的代码。\"",
        "description:\"Set the name of the folder to be added.\"": "description:\"设置要添加的文件夹名称。\"",
        "description:\"Set the location in your vault.\"": "description:\"设置在保险库中的位置。\"",
        "description:\"Set the relay name.\"": "description:\"设置relay名称。\"",
        "description:\"Leave the relay. Local data is preserved.\"": "description:\"离开relay。本地数据将保留。\"",
        "description:\"This will destroy the relay (deleting all data on the server). Local data is preserved.\"": "description:\"这将销毁relay（删除服务器上的所有数据）。本地数据将保留。\"",
        "description:\"Share this key with your collaborators.\"": "description:\"与您的协作者共享此密钥。\"",
        "description:\"Deletes the remote folder from the relay. Local files will be preserved.\"": "description:\"从relay中删除远程文件夹。本地文件将被保留。\"",
        "description:\"Delete the local Shared Folder and all of its contents.\"": "description:\"删除本地共享文件夹及其所有内容。\"",
        "description:\"Deletes edit history and disables change tracking.\"": "description:\"删除编辑历史并禁用变更跟踪。\"",
        "text:\"Accept Top\"": "text:\"接受顶部\"",
        "text:\"Accept Bottom\"": "text:\"接受底部\"",
        "text:\"Accept All\"": "text:\"接受全部\"",
        "text:\"Accept None\"": "text:\"接受全部\"",
        "text:`Accept from ${this.file1.name}`": "text:`接受来自 ${this.file1.name}`",
        "text:\"Discard\"": "text:\"丢弃\"",
        "text:`Accept from ${this.file2.name}`": "text:`接受来自 ${this.file2.name}`",
        "Error(\"Path must be a string. Received \"": "Error(\"路径必须是一个字符串。收到的类型为：\"",
        "Error('\"ext\" argument must be a string');": "Error('\"ext\" 参数必须是一个字符串');",
        "Error(\"Null input. (diff_main)\");": "Error(\"输入为空。 (diff_main)\");",
        "Error(\"Illegal escape in diff_fromDelta: \"+l)}break;case\"-\":case\"=\":var c=parseInt(l,10);if(isNaN(c)||c<0)throw new Error(\"Invalid number in diff_fromDelta: \"+l);var f=n.substring(s,s+=c);o[i].charAt(0)==\"=\"?t[r++]=new K.Diff(he,f):t[r++]=new K.Diff(Pe,f);break;default:if(o[i])throw new Error(\"Invalid diff operation in diff_fromDelta: \"+o[i])}}if(s!=n.length)throw new Error(\"Delta length (\"+s+\") does not equal source text length (\"+n.length+\").\");": "Error(\"diff_fromDelta 中的非法转义: \"+l)}break;case\"-\":case\"=\":var c=parseInt(l,10);if(isNaN(c)||c<0)throw new Error(\"diff_fromDelta 中的无效数字: \"+l);var f=n.substring(s,s+=c);o[i].charAt(0)==\"=\"?t[r++]=new K.Diff(he,f):t[r++]=new K.Diff(Pe,f);break;default:if(o[i])throw new Error(\"diff_fromDelta 中的无效操作: \"+o[i])}}if(s!=n.length)throw new Error(\"Delta 长度 (\"+s+\") 与源文本长度 (\"+n.length+\") 不相等。\");",
        "Error(\"Null input. (match_main)\");": "Error(\"输入为空。 (match_main)\");",
        "Error(\"Pattern too long for this browser.\");": "Error(\"此浏览器支持的模式过长。 \");",
        "Error(\"patch not initialized\");": "Error(\"补丁未初始化\");",
        "Error(\"Unknown call format to patch_make.\");": "Error(\"补丁生成的调用格式未知。\");",
        "Error(\"Unknown unit \"+a)}}function Nb(){return this.isValid()?this._milliseconds+this._days*864e5+this._months%12*2592e6+ye(this._months/12)*31536e6:NaN}function Hr(a){return function(){return this.as(a)}}var Bb=Hr(\"ms\"),Hb=Hr(\"s\"),Vb=Hr(\"m\"),Wb=Hr(\"h\"),Kb=Hr(\"d\"),Yb=Hr(\"w\"),Jb=Hr(\"M\"),qb=Hr(\"Q\"),jb=Hr(\"y\");": "Error(\"未知单位 \"+a)}}function Nb(){return this.isValid()?this._milliseconds+this._days*864e5+this._months%12*2592e6+ye(this._months/12)*31536e6:NaN}function Hr(a){return function(){return this.as(a)}}var Bb=Hr(\"ms\"),Hb=Hr(\"s\"),Vb=Hr(\"m\"),Wb=Hr(\"h\"),Kb=Hr(\"d\"),Yb=Hr(\"w\"),Jb=Hr(\"M\"),qb=Hr(\"Q\"),jb=Hr(\"y\");",
        "Error(`Type with the name ${e} has already been defined with a different constructor`);": "Error(`名称为 ${e} 的类型已被定义，并使用不同的构造函数`);",
        "Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");": "Error(\"不支持 crypto.getRandomValues()。请查看 https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");",
        "Error(\"Invalid relay UUID\");": "Error(\"无效的relay UUID\");",
        "Error(\"Invalid folder UUID\");": "Error(\"无效的文件夹 UUID\");",
        "Error(\"Invalid document UUID\");": "Error(\"无效的文档 UUID\");",
        "Error(\"Invalid s3rn format\");": "Error(\"无效的 s3rn 格式\");",
        "Error(\"Invalid UUID\");": "Error(\"无效的 UUID\");",
        "Error(\"Invalid s3rn format for the given product type\")}};var km=require(\"obsidian\");": "Error(\"给定产品类型的无效 s3rn 格式\")}};var km=require(\"obsidian\");",
        "Error(\"missing provider!\");": "Error(\"缺少提供者!\");",
        "Error(\"tried to access postie during teardown\");": "Error(\"在拆卸期间尝试访问 postie\");",
        "Error(`Could not find shared folders on file system at ${this.path}`);": "Error(`无法在文件系统中找到共享文件夹，路径为 ${this.path}`);",
        "Error(\"Path is not in shared folder: \"+t)}mkdir(t){let r=(0,Zt.join)(this.path,t);return this.vault.adapter.mkdir((0,ut.normalizePath)(r))}checkPath(t){return t.startsWith(this.path+Zt.sep)}checkExtension(t,r=\".md\"){return t.endsWith(r)}getVirtualPath(t){return this.assertPath(t),t.slice(this.path.length)}getFile(t,r=!0,s=!1,o=!0){let i=this.getVirtualPath(t);return this.getDoc(i,r,s,o)}getTFile(t){let r=this.vault.getAbstractFileByPath(this.getPath(t.path));return r instanceof ut.TFile?r:null}getDoc(t,r=!0,s=!1,o=!0){let i=this.ids.get(t);if(i!==void 0){let l=this.docs.get(i);return l!==void 0?(l.move(t),l):(this.log(\"[getDoc]: creating doc for shared ID\"),this.createDoc(t,!1,o))}else{if(r)return this.log(\"[getDoc]: creating new shared ID for existing file\"),this.createDoc(t,s,o);throw new Error(\"No shared doc for vpath: \"+t)}}createFile(t,r=!1,s=!0,o=i=>{}){let i=this.getVirtualPath(t);return this.createDoc(i,r,s,o)}placeHold(t){let r=[];return this.ydoc.transact(()=>{t.forEach(s=>{if(!this.ids.has(s)){this.debug(\"creating entirely new doc for\",s);let o=Hs();r.push(o),this.ids.set(s,o)}})},this),r}createDoc(t,r=!1,s=!0,o=i=>{}){!this.synced&&!this.ids.get(t)&&this.warn(`potential for document split at ${t}`);let i=this.ids.get(t),l;if(i===void 0){if(!r)throw new Error(\"attempting to create a new doc without a local file\");": "Error(\"路径不在共享文件夹中: \"+t)}mkdir(t){let r=(0,Zt.join)(this.path,t);return this.vault.adapter.mkdir((0,ut.normalizePath)(r))}checkPath(t){return t.startsWith(this.path+Zt.sep)}checkExtension(t,r=\".md\"){return t.endsWith(r)}getVirtualPath(t){return this.assertPath(t),t.slice(this.path.length)}getFile(t,r=!0,s=!1,o=!0){let i=this.getVirtualPath(t);return this.getDoc(i,r,s,o)}getTFile(t){let r=this.vault.getAbstractFileByPath(this.getPath(t.path));return r instanceof ut.TFile?r:null}getDoc(t,r=!0,s=!1,o=!0){let i=this.ids.get(t);if(i!==void 0){let l=this.docs.get(i);return l!==void 0?(l.move(t),l):(this.log(\"[getDoc]: 创建共享 ID 的文档\"),this.createDoc(t,!1,o))}else{if(r)return this.log(\"[getDoc]: 为现有文件创建新的共享 ID\"),this.createDoc(t,s,o);throw new Error(\"虚拟路径没有共享文档: \"+t)}}createFile(t,r=!1,s=!0,o=i=>{}){let i=this.getVirtualPath(t);return this.createDoc(i,r,s,o)}placeHold(t){let r=[];return this.ydoc.transact(()=>{t.forEach(s=>{if(!this.ids.has(s)){this.debug(\"为\",s,\"创建全新文档\");let o=Hs();r.push(o),this.ids.set(s,o)}})},this),r}createDoc(t,r=!1,s=!0,o=i=>{}){!this.synced&&!this.ids.get(t)&&this.warn(`在 ${t} 处潜在的文档分裂`);let i=this.ids.get(t),l;if(i===void 0){if(!r)throw new Error(\"尝试在没有本地文件的情况下创建新文档\");",
        "Error(`This folder is already mounted at ${l.path}.`);": "Error(`该文件夹已经挂载在 ${l.path}。`);",
        "Error(\"Conflict: Tracked folder exists at this location.\");": "Error(\"冲突: 此位置存在已跟踪的文件夹。\");",
        "Error(\"Function called outside component initialization\");": "Error(\"函数在组件初始化外部被调用\");",
        "Error(`Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var GS=Object.prototype.toString,ai=new rn;ai.useLongestToken=!0;ai.tokenize=tf.tokenize;ai.castInput=function(n){var e=this.options,t=e.undefinedReplacement,r=e.stringifyReplacer,s=r===void 0?function(o,i){return typeof i==\"undefined\"?t:i}:r;return typeof n==\"string\"?n:JSON.stringify(Zu(n,null,null,s),s,\"  \")};ai.equals=function(n,e){return rn.prototype.equals.call(ai,n.replace(/,([\\r\\n])/g,\"$1\"),e.replace(/,([\\r\\n])/g,\"$1\"))};function Zu(n,e,t,r,s){e=e||[],t=t||[],r&&(n=r(s,n));var o;for(o=0;o<e.length;o+=1)if(e[o]===n)return t[o];var i;if(GS.call(n)===\"[object Array]\"){for(e.push(n),i=new Array(n.length),t.push(i),o=0;o<n.length;o+=1)i[o]=Zu(n[o],e,t,r,s);return e.pop(),t.pop(),i}if(n&&n.toJSON&&(n=n.toJSON()),Ya(n)===\"object\"&&n!==null){e.push(n),i={},t.push(i);var l=[],c;for(c in n)n.hasOwnProperty(c)&&l.push(c);for(l.sort(),o=0;o<l.length;o+=1)c=l[o],i[c]=Zu(n[c],e,t,r,c);e.pop(),t.pop()}else i=n;return i}var Qu=new rn;Qu.tokenize=function(n){return n.slice()};Qu.join=Qu.removeEmpty=function(n){return n};function zm(n,e,t,r,s,o,i){i||(i={}),typeof i.context==\"undefined\"&&(i.context=4);var l=VS(t,r,i);if(!l)return;l.push({value:\"\",lines:[]});function c(x){return x.map(function(M){return\" \"+M})}for(var f=[],d=0,p=0,g=[],_=1,y=1,b=function(M){var W=l[M],S=W.lines||W.value.replace(/\\n$/,\"\").split(`\n`);": "Error(`无效的尝试去展开非可迭代实例。\n要可迭代，非数组对象必须有一个 [Symbol.iterator]() 方法。`)}var GS=Object.prototype.toString,ai=new rn;ai.useLongestToken=!0;ai.tokenize=tf.tokenize;ai.castInput=function(n){var e=this.options,t=e.undefinedReplacement,r=e.stringifyReplacer,s=r===void 0?function(o,i){return typeof i==\"undefined\"?t:i}:r;return typeof n==\"string\"?n:JSON.stringify(Zu(n,null,null,s),s,\"  \")};ai.equals=function(n,e){return rn.prototype.equals.call(ai,n.replace(/,([\\r\\n])/g,\"$1\"),e.replace(/,([\\r\\n])/g,\"$1\"))};function Zu(n,e,t,r,s){e=e||[],t=t||[],r&&(n=r(s,n));var o;for(o=0;o<e.length;o+=1)if(e[o]===n)return t[o];var i;if(GS.call(n)===\"[object Array]\"){for(e.push(n),i=new Array(n.length),t.push(i),o=0;o<n.length;o+=1)i[o]=Zu(n[o],e,t,r,s);return e.pop(),t.pop(),i}if(n&&n.toJSON&&(n=n.toJSON()),Ya(n)===\"object\"&&n!==null){e.push(n),i={},t.push(i);var l=[],c;for(c in n)n.hasOwnProperty(c)&&l.push(c);for(l.sort(),o=0;o<l.length;o+=1)c=l[o],i[c]=Zu(n[c],e,t,r,c);e.pop(),t.pop()}else i=n;return i}var Qu=new rn;Qu.tokenize=function(n){return n.slice()};Qu.join=Qu.removeEmpty=function(n){return n};function zm(n,e,t,r,s,o,i){i||(i={}),typeof i.context==\"undefined\"&&(i.context=4);var l=VS(t,r,i);if(!l)return;l.push({value:\"\",lines:[]});function c(x){return x.map(function(M){return\" \"+M})}for(var f=[],d=0,p=0,g=[],_=1,y=1,b=function(M){var W=l[M],S=W.lines||W.value.replace(/\\n$/,\"\").split(`\n`);",
        "Error(\"Unable to decode S3RN\");": "Error(\"无法解码 S3RN\");",
        "Error(\"Not logged in\");": "Error(\"未登录\");",
        "Error(`Failed to upload document: ${t.status} ${t.text}`)}catch(t){console.error(t);return}}async putFolderFiles(e){await e.whenReady(),this.log(\"[putFolderFiles]\",`Uploading ${e.docset.size} items`);": "Error(`上传文档失败: ${t.status} ${t.text}`)}catch(t){console.error(t);return}}async putFolderFiles(e){await e.whenReady(),this.log(\"[putFolderFiles]\",`正在上传 ${e.docset.size} 项`);",
        "Error(\"derived() expects stores as input, got a falsy value\");": "Error(\"derived() 期望输入存储，但得到一个假值\");",
        "Error(\"argument name is invalid\");": "Error(\"参数名称无效\");",
        "Error(\"argument val is invalid\");": "Error(\"参数值无效\");",
        "Error(\"option maxAge is invalid\");": "Error(\"选项 maxAge 无效\");",
        "Error(\"option domain is invalid\");": "Error(\"选项 domain 无效\");",
        "Error(\"option path is invalid\");": "Error(\"选项 path 无效\");",
        "Error(\"option expires is invalid\");": "Error(\"选项 expires 无效\");",
        "Error(\"option priority is invalid\")}if(r.sameSite)switch(typeof r.sameSite==\"string\"?r.sameSite.toLowerCase():r.sameSite){case!0:i+=\"; SameSite=Strict\";break;case\"lax\":i+=\"; SameSite=Lax\";break;case\"strict\":i+=\"; SameSite=Strict\";break;case\"none\":i+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}return i}function pE(n){return n.indexOf(\"%\")!==-1?decodeURIComponent(n):n}function mE(n){return encodeURIComponent(n)}var Xg;function ll(n){if(n)try{let e=decodeURIComponent(Xg(n.split(\".\")[1]).split(\"\").map(function(t){return\"%\"+(\"00\"+t.charCodeAt(0).toString(16)).slice(-2)}).join(\"\"));return JSON.parse(e)||{}}catch(e){}return{}}function Zg(n,e=0){let t=ll(n);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}Xg=typeof atob==\"function\"?atob:n=>{let e=String(n).replace(/=+$/,\"\");": "Error(\"选项 priority 无效\")}if(r.sameSite)switch(typeof r.sameSite==\"string\"?r.sameSite.toLowerCase():r.sameSite){case!0:i+=\"; SameSite=Strict\";break;case\"lax\":i+=\"; SameSite=Lax\";break;case\"strict\":i+=\"; SameSite=Strict\";break;case\"none\":i+=\"; SameSite=None\";break;default:throw new TypeError(\"选项 sameSite 无效\")}return i}function pE(n){return n.indexOf(\"%\")!==-1?decodeURIComponent(n):n}function mE(n){return encodeURIComponent(n)}var Xg;function ll(n){if(n)try{let e=decodeURIComponent(Xg(n.split(\".\")[1]).split(\"\").map(function(t){return\"%\"+(\"00\"+t.charCodeAt(0).toString(16)).slice(-2)}).join(\"\"));return JSON.parse(e)||{}}catch(e){}return{}}function Zg(n,e=0){let t=ll(n);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}Xg=typeof atob==\"function\"?atob:n=>{let e=String(n).replace(/=+$/,\"\");",
        "Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");": "Error(\"'atob' 失败: 要解码的字符串未正确编码。\");",
        "Error(\"topic must be set.\");": "Error(\"必须设置 topic。\");",
        "Error(\"EventSource connect took too long.\"))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl(\"/api/realtime\")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error(\"Failed to establish realtime connection.\"))},this.eventSource.addEventListener(\"PB_CONNECT\",e=>{let t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let r=3;for(;this.hasUnsentSubscriptions()&&r>0;)r--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);let r=this.getSubscriptionsByTopic(\"PB_CONNECT\");": "Error(\"EventSource 连接花费时间过长。\"))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl(\"/api/realtime\")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error(\"未能建立实时连接。\"))},this.eventSource.addEventListener(\"PB_CONNECT\",e=>{let t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let r=3;for(;this.hasUnsentSubscriptions()&&r>0;)r--,await this.submitSubscriptions()}).then(()=>{for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);let r=this.getSubscriptionsByTopic(\"PB_CONNECT\");",
        "Error(\"Missing topic.\");": "Error(\"缺少 topic。\");",
        "Error(\"Missing subscription callback.\");": "Error(\"缺少订阅回调。\");",
        "Error(\"No remote to connect to\"));return}if(!n.loggedIn){r(Error(\"Not logged in\"));return}let c={Authorization:`Bearer ${(f=n.user)==null?void 0:f.token}`};(0,my.requestUrl)({url:\"https://api.system3.md/token\",method:\"POST\",headers:c,body:l}).then(d=>{d.status!==200&&(s(d.status,d.text),r(Error(`从 API 收到状态码 ${d.status}。`)));let p=d.json;t(p)}).catch(d=>{o(d,l),r(d)})}var Cl=class extends Sl{constructor(e,t,r,s=5){super({log:Q(\"[LiveTokenStore]\",\"debug\"),refresh:jE(e,GE),getJwtExpiry:qE,getStorage:function(){return new kl(\"TokenStore/\"+r)},getTimeProvider:()=>t},s)}};var gy=require(\"obsidian\");": "Error(\"没有远程连接目标\"));return}if(!n.loggedIn){r(Error(\"未登录\"));return}let c={Authorization:`Bearer ${(f=n.user)==null?void 0:f.token}`};(0,my.requestUrl)({url:\"https://api.system3.md/token\",method:\"POST\",headers:c,body:l}).then(d=>{d.status!==200&&(s(d.status,d.text),r(Error(`从 API 收到状态码 ${d.status}。`)));let p=d.json;t(p)}).catch(d=>{o(d,l),r(d)})}var Cl=class extends Sl{constructor(e,t,r,s=5){super({log:Q(\"[LiveTokenStore]\",\"debug\"),refresh:jE(e,GE),getJwtExpiry:qE,getStorage:function(){return new kl(\"TokenStore/\"+r)},getTimeProvider:()=>t},s)}};var gy=require(\"obsidian\");",
        "Error(\"invalid remote folder\");": "Error(\"无效的远程文件夹\");",
        "Error(`Unable to find user: ${this.relayRole.user}`);": "Error(`无法找到用户: ${this.relayRole.user}`);",
        "Error(\"invalid role\");": "Error(\"无效的角色\");",
        "Error(\"invalid invitation\");": "Error(\"无效的邀请\");",
        "Error(\"invalid subscription\");": "Error(\"无效的订阅\");",
        "Error(\"Failed to accept invitation\");": "Error(\"未能接受邀请\");",
        "Error(\"Failed to create Relay\");": "Error(\"未能创建 Relay\");",
        "Error(\"Not Logged In\");": "Error(\"未登录\");",
        "Error(\"Failed to update relay\");": "Error(\"未能更新 relay\");",
        "Error(\"Failed to create folder\");": "Error(\"未能创建文件夹\");",
        "\"Join relay\"": "\"加入 relay\"",
        "\"New relay\"": "\"新 relay\"",
        "\"Refresh\"": "\"刷新\"",
        "\"Check\"": "\"检查\"",
        "\"Cancel\"": "\"取消\"",
        "\"Logout\"": "\"注销\"",
        "\"(Untitled Relay)\"": "\"(未命名中继)\"",
        "\"Add to vault\"": "\"添加到保险库\"",
        "\"Confirm\"": "\"确认\"",
        "\"Add to Vault\"": "\"添加到保险库\"",
        "\"Kick\"": "\"踢出\"",
        "\"Leave\"": "\"离开\"",
        "\"Manage\"": "\"管理\"",
        "\"Status: Cancelled\"": "\"状态：已取消\"",
        "\"Destroy\"": "\"销毁\"",
        "\"Delete local\"": "\"删除本地\"",
        "\"Delete metadata\"": "\"删除元数据\"",
        "\"Delete remote\"": "\"删除远程\"",
        "\"Feature Flags\"": "\"功能标志\"",
        "\"Make sure you reload obsidian after changing the flags below.\"": "\"更改下面的标志后，请确保重新加载 Obsidian。\"",
        "\"Add\"": "\"添加\"",
        "\"Back\"": "\"返回\"",
        "\"Upgrade\"": "\"升级\"",
        "\"destroy\"": "\"销毁\"",
        "\"Tracking Changes\"": "\"跟踪更改\"",
        "\"Metadata is required for sharing.\"": "\"共享需要元数据。\"",
        "\"Add shared folder to vault\"": "\"将共享文件夹添加到保险库\"",
        "\"Cancel subscription to destroy relay.\"": "\"取消订阅以销毁relay。\"",
        "\"Select a folder to add to the relay\"": "\"选择一个文件夹以添加到relay\"",
        "\"Thanks for supporting Relay development <3\"": "\"感谢您支持relay开发 <3\"",
        "\"custom fetch can help avoid some network restrictions\"": "\"自定义获取可以帮助避免一些网络限制\"",
        "\"Database Corrupted. Connect to Relay servers to resolve.\"": "\"数据库损坏。请连接到relay服务器以解决问题。\"",
        "\"Enter to create\"": "\"按回车以创建\"",
        "\"Enter share key\"": "\"输入共享密钥\"",
        "\"Login with Google\"": "\"使用Google登录\"",
        "\"Login to enable Live edits\"": "\"登录以启用实时编辑\"",
        "\"login issues? try the \"),r=L(\"a\"),r.textContent=\"debug flow.\"": "\"登录问题？尝试 \"),r=L(\"a\"),r.textContent=\"调试流程。\"",
        "'We&#39;re working on improving the login process. Please <a href=\"https://discord.system3.md\">join our Discord</a> and we will help you.'": "'我们正在改善登录流程。请 <a href=\"https://discord.system3.md\">加入我们的Discord</a>，我们将帮助您。'"
    }
}