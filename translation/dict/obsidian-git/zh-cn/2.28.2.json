{
    "manifest": {
        "translationVersion": 1731497952199,
        "pluginVersion": "2.28.2"
    },
    "description": {
        "original": "Integrate Git version control with automatic backup and other advanced features.",
        "translation": "集成 Git 版本控制,具有自动备份和其他高级功能。"
    },
    "dict": {
        "Notice(\"ObsidianGit: Base path does not exist\")": "Notice(\"ObsidianGit: 基础路径不存在\")",
        "Notice(\"Authentication failed. Please try with different credentials\")": "Notice(\"验证失败。请尝试使用不同的凭据\")",
        "Notice(\"This takes longer: Getting status\",this.noticeLength)": "Notice(\"这需要较长的时间:获取状态\",this.noticeLength)",
        "Notice(\"Initializing pull\")": "Notice(\"初始化拉取\")",
        "Notice(\"Finished pull\",!1)": "Notice(\"完成拉取\",!1)",
        "Notice(\"Initializing push\")": "Notice(\"初始化推送\")",
        "Notice(\"Initializing clone\")": "Notice(\"初始化克隆\")",
        "Notice(\"Initializing fetch\")": "Notice(\"初始化获取\")",
        "Notice(\"Please specify a valid number.\")": "Notice(\"请指定一个有效的数字。\")",
        "Notice(`Automatic ${i} enabled! Every ${$s(r.settings.autoSaveInterval)": "Notice(`自动${i}已启用！每隔${$s(r.settings.autoSaveInterval)",
        "Notice(`Automatic ${i} disabled!`)": "Notice(`自动${i}已禁用！`)",
        "Notice(`Automatic push enabled! Every ${$s(r.settings.autoPushInterval)": "Notice(`自动推送已启用！每隔${$s(r.settings.autoPushInterval)",
        "Notice(\"Automatic push disabled!\")": "Notice(\"自动推送已禁用！\")",
        "Notice(`Automatic pull enabled! Every ${$s(r.settings.autoPullInterval)": "Notice(`自动拉取已启用！每隔${$s(r.settings.autoPullInterval)",
        "Notice(\"Automatic pull disabled!\")": "Notice(\"自动拉取已禁用！\")",
        "Notice(\"Obsidian must be restarted for the changes to take affect.\")": "Notice(\"Obsidian 必须重新启动以使更改生效。\")",
        "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")": "Notice(\"调试信息已复制到剪贴板。可能包含敏感信息！\")",
        "Notice(\"It seems like you are not using GitHub\")": "Notice(\"您似乎没有使用 GitHub\")",
        "Notice(\"Successfully deleted repository. Reloading plugin...\")": "Notice(\"成功删除了仓库。正在重新加载插件...\")",
        "Notice(\"No repository found\")": "Notice(\"未找到仓库\")",
        "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)": "Notice(\"无法找到有效的 Git 仓库。请通过给定的命令创建一个,或克隆一个现有的仓库。\",1e4)",
        "Notice(\"Initialized new repo\")": "Notice(\"初始化新仓库\")",
        "Notice(\"Aborted clone\")": "Notice(\"已终止克隆 clone\")",
        "Notice(\"Invalid depth. Aborting clone.\")": "Notice(\"无效的深度。中止克隆。\")",
        "Notice(`Cloning new repo into \"${a}\"`)": "Notice(`将新的仓库克隆到 \"${a}\"`)",
        "Notice(\"Cloned new repo.\")": "Notice(\"克隆了新的仓库。\")",
        "Notice(\"Please restart Obsidian\")": "Notice(\"请重启 Obsidian\")",
        "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")": "Notice(\"自动备份:请输入自定义提交信息。留空以中止\")",
        "Notice(\"No upstream branch is set. Please select one.\")": "Notice(\"没有设置上游分支。请选择一个。\")",
        "Notice(\"All local changes have been discarded. New files remain untouched.\")": "Notice(\"所有本地更改已被丢弃。新文件保持不变。\")",
        "Notice(\"Aborted\")": "Notice(\"中止\")",
        ".log(`Did not delete ${y} because directory is not empty`)": ".log(`未删除 ${y},因为目录不为空`)",
        ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")": ".log(\"未找到跟踪分支。将忽略主仓库的拉取,仅更新子模块。\")",
        ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")": ".log(\"未找到跟踪分支。将忽略主仓库的推送,仅更新子模块。\")",
        ".log(\"Something weird happened:\")": ".log(\"奇怪的事情发生了:\")",
        ".log(this.plg.manifest.name+\": Enabled line authoring.\")": ".log(this.plg.manifest.name+\": 启用行作者功能。\")",
        ".log(this.plg.manifest.name+\": Disabled line authoring.\")": ".log(this.plg.manifest.name+\": 禁用行作者功能。\")",
        ".log(\"loading \"+this.manifest.name+\" plugin: v\"+this.manifest.version)": ".log(\"加载 \"+this.manifest.name+\" 插件:v\"+this.manifest.version)",
        ".log(\"Reloading settings\")": ".log(\"重新加载设置\")",
        ".log(\"unloading \"+this.manifest.name+\" plugin\")": ".log(\"卸载 \"+this.manifest.name+\" 插件\")",
        ".log(\"Something weird happened. The 'checkRequirements' result is \"+i)": ".log(\"发生了奇怪的事情。“checkRequirements”结果是 \"+i)",
        ".log(\"Pushing....\")": ".log(\"推送中....\")",
        ".log(\"Pulling....\")": ".log(\"拉取中....\")",
        ".log(\"Encountered network error, but already in offline mode\")": ".log(\"遇到网络错误,但已在离线模式\")",
        ".error(\"This browser lacks typed array (Uint8Array)": ".error(\"此浏览器缺少类型化数组 (Uint8Array))",
        ".error(\"Failed to parse lines, starting in 0!\")": ".error(\"解析行失败,从 0 开始！\")",
        ".error(\"Unknown state reached while processing groups of lines\",a,s,o)": ".error(\"未知状态在处理行组时达到\",a,s,o)",
        "name:\"\",email:\"": "name:\"\",邮件:\"",
        "name:\"Source Control\"": "name:\"源代码管理\"",
        "name:\"History\"": "name:\"历史记录\"",
        "name:\"Diff View\"": "name:\"差异视图\"",
        "name:\"Edit .gitignore\"": "name:\"编辑 .gitignore\"",
        "name:\"Open source control view\"": "name:\"打开源代码管理视图\"",
        "name:\"Open history view\"": "name:\"打开历史记录视图\"",
        "name:\"Open diff view\"": "name:\"打开差异视图\"",
        "name:\"Open file on GitHub\"": "name:\"在 GitHub 上打开文件\"",
        "name:\"Open file history on GitHub\"": "name:\"在 GitHub 上查看文件历史\"",
        "name:\"Pull\"": "name:\"拉取\"",
        "name:\"Fetch\"": "name:\"获取\"",
        "name:\"Switch to remote branch\"": "name:\"切换到远程分支\"",
        "name:\"Add file to gitignore\"": "name:\"将文件添加到 .gitignore\"",
        "name:\"Commit-and-sync\"": "name:\"提交并同步\"",
        "name:\"Commit-and-sync and then close Obsidian\"": "name:\"提交并同步，然后关闭 Obsidian\"",
        "name:\"Commit-and-sync with specific message\"": "name:\"提交并同步，使用特定消息\"",
        "name:\"Commit all changes\"": "name:\"提交所有更改\"",
        "name:\"Commit all changes with specific message\"": "name:\"使用特定消息提交所有更改\"",
        "name:\"Commit staged\"": "name:\"提交暂存文件\"",
        "name:\"Amend staged\"": "name:\"修改暂存文件\"",
        "name:\"Commit staged with specific message\"": "name:\"使用特定消息提交暂存文件\"",
        "name:\"Push\"": "name:\"推送\"",
        "name:\"Stage current file\"": "name:\"暂存当前文件\"",
        "name:\"Unstage current file\"": "name:\"取消暂存当前文件\"",
        "name:\"Edit remotes\"": "name:\"编辑远程仓库\"",
        "name:\"Remove remote\"": "name:\"移除远程仓库\"",
        "name:\"Set upstream branch\"": "name:\"设置上游分支\"",
        "name:\"CAUTION: Delete repository\"": "name:\"警告：删除仓库\"",
        "name:\"Initialize a new repo\"": "name:\"初始化新仓库\"",
        "name:\"Clone an existing remote repo\"": "name:\"克隆现有的远程仓库\"",
        "name:\"List changed files\"": "name:\"列出已更改的文件\"",
        "name:\"Switch branch\"": "name:\"切换分支\"",
        "name:\"Create new branch\"": "name:\"创建新分支\"",
        "name:\"Delete branch\"": "name:\"删除分支\"",
        "name:\"CAUTION: Discard all changes\"": "name:\"警告：放弃所有更改\"",
        "name:\"Toggle line author information\"": "name:\"切换行作者信息\"",
        "name:\"fileIcon\"": "name:\"文件图标\"",
        "name:\"fileTag\"": "name:\"文件标签\"",
        "name:\"Commit Amend\"": "name:\"提交修改\"",
        "description:`${st} '${Nr(he)}' of ${C}`": "description:`${st} '${Nr(he)}' 的 ${C}`",
        "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"": "text:\"Git还没有准备好。当所有设置都正确时,您可以配置提交同步等。\"",
        "text:\"Save\"": "text:\"保存\"",
        "text:\"File not found: \"": "text:\"文件未找到:\"",
        "text:\"Cancel\"": "text:\"取消\"",
        ".setText(\"Copy Debug Information\")": ".setText(\"复制调试信息\")",
        ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)": ".setText(`调试和日志记录:\n使用以下命令打开控制台,即可查看本插件和其他所有插件的日志`)",
        ".setText(\"Edit .gitignore\")": ".setText(\"编辑 .gitignore\")",
        ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)": ".setText(`${this.deletion?\"删除\":\"放弃\"} 这个文件？`)",
        ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)": ".setText(`你真的想 ${this.deletion?\"删除\":\"放弃更改\"} \"${this.filename}\" 吗？`)",
        ".setButtonText(\"Preview\")": ".setButtonText(\"预览\")",
        ".setButtonText(\"Reload\")": ".setButtonText(\"重新加载\")",
        ".setName(\"Automatic\")": ".setName(\"自动\")",
        ".setName(\"Split timers for automatic commit and sync\")": ".setName(\"用于自动提交和同步的分割计时器\")",
        ".setName(`Auto ${i} interval (minutes)`)": ".setName(`自动${i}间隔(分钟)`)",
        ".setName(`Auto ${i} after stopping file edits`)": ".setName(`在停止文件编辑后自动 ${i} `)",
        ".setName(`Auto ${i} after latest commit`)": ".setName(`在最新提交后自动 ${i} `)",
        ".setName(\"Auto push interval (minutes)\")": ".setName(\"自动推送间隔(分钟)\")",
        ".setName(\"Auto pull interval (minutes)\")": ".setName(\"自动拉取间隔(分钟)\")",
        ".setName(`Specify custom commit message on auto ${i}`)": ".setName(`在自动 ${i} 中指定自定义提交消息`)",
        ".setName(`Commit message on auto ${i}`)": ".setName(`自动 ${i} 的提交信息`)",
        ".setName(\"Commit message\")": ".setName(\"提交信息\")",
        ".setName(\"Commit message on manual commit\")": ".setName(\"手动提交时的提交信息\")",
        ".setName(\"{{date}} placeholder format\")": ".setName(\"{{date}} 占位符格式\")",
        ".setName(\"{{hostname}} placeholder replacement\")": ".setName(\"{{hostname}} 占位符替换\")",
        ".setName(\"Preview commit message\")": ".setName(\"预览提交信息\")",
        ".setName(\"List filenames affected by commit in the commit body\")": ".setName(\"在提交内容中列出受提交影响的文件名\")",
        ".setName(\"Pull\")": ".setName(\"拉取\")",
        ".setName(\"Merge strategy\")": ".setName(\"合并策略\")",
        ".setName(\"Pull on startup\")": ".setName(\"开机时拉取\")",
        ".setName(\"Commit-and-sync\")": ".setName(\"提交并同步\")",
        ".setName(\"Push on commit-and-sync\")": ".setName(\"提交并同步时推送到远程仓库\")",
        ".setName(\"Pull on commit-and-sync\")": ".setName(\"提交并同步时从远程仓库拉取\")",
        ".setName(\"Line author information\")": ".setName(\"线路作者信息\")",
        ".setName(\"History view\")": ".setName(\"历史视图\")",
        ".setName(\"Show Author\")": ".setName(\"显示作者\")",
        ".setName(\"Show Date\")": ".setName(\"显示日期\")",
        ".setName(\"Source control view\")": ".setName(\"源控制视图\")",
        ".setName(\"Automatically refresh source control view on file changes\")": ".setName(\"自动刷新文件更改的源控制视图\")",
        ".setName(\"Source control view refresh interval\")": ".setName(\"源控制视图刷新间隔\")",
        ".setName(\"Miscellaneous\")": ".setName(\"杂项\")",
        ".setName(\"Disable notifications\")": ".setName(\"禁用通知\")",
        ".setName(\"Hide notifications for no changes\")": ".setName(\"隐藏无更改的通知\")",
        ".setName(\"Show status bar\")": ".setName(\"显示状态栏\")",
        ".setName(\"Show stage/unstage button in file menu\")": ".setName(\"显示文件菜单中的暂存/取消暂存按钮\")",
        ".setName(\"Show branch status bar\")": ".setName(\"显示分支状态栏\")",
        ".setName(\"Show the count of modified files in the status bar\")": ".setName(\"显示状态栏中修改文件的数量\")",
        ".setName(\"Authentication/commit author\")": ".setName(\"身份验证/提交作者\")",
        ".setName(\"Commit author\")": ".setName(\"提交作者\")",
        ".setName(\"Username on your git server. E.g. your username on GitHub\")": ".setName(\"在你的 Git 服务器上的用户名。例如:你在 GitHub 上的用户名\")",
        ".setName(\"Password/Personal access token\")": ".setName(\"密码/个人访问令牌\")",
        ".setName(\"Author name for commit\")": ".setName(\"提交的作者名称\")",
        ".setName(\"Author email for commit\")": ".setName(\"提交作者的电子邮件\")",
        ".setName(\"Advanced\")": ".setName(\"高级\")",
        ".setName(\"Update submodules\")": ".setName(\"更新子模块\")",
        ".setName(\"Submodule recurse checkout/switch\")": ".setName(\"子模块递归检出/切换\")",
        ".setName(\"Custom Git binary path\")": ".setName(\"自定义 Git 二进制文件路径\")",
        ".setName(\"Additional environment variables\")": ".setName(\"额外的环境变量\")",
        ".setName(\"Additional PATH environment variable paths\")": ".setName(\"其他 PATH 环境变量路径\")",
        ".setName(\"Reload with new environment variables\")": ".setName(\"重新加载新的环境变量\")",
        ".setName(\"Custom base path (Git repository path)\")": ".setName(\"自定义基础路径(Git 仓库路径)\")",
        ".setName(\"Custom Git directory path (Instead of '.git')\")": ".setName(\"自定义 Git 目录路径(取代 .git)\")",
        ".setName(\"Disable on this device\")": ".setName(\"在此设备上禁用\")",
        ".setName(\"Support\")": ".setName(\"支持\")",
        ".setName(\"Donate\")": ".setName(\"捐赠\")",
        ".setName(\"Show commit authoring information next to each line\")": ".setName(\"显示每行旁边的提交作者信息\")",
        ".setName(\"Follow movement and copies across files and commits\")": ".setName(\"跟踪移动并跨文件和提交进行复制\")",
        ".setName(\"Show commit hash\")": ".setName(\"显示提交哈希值\")",
        ".setName(\"Author name display\")": ".setName(\"显示作者姓名\")",
        ".setName(\"Authoring date display\")": ".setName(\"显示创建日期\")",
        ".setName(\"Custom authoring date format\")": ".setName(\"自定义作者日期格式\")",
        ".setName(\"Authoring date display timezone\")": ".setName(\"创建日期显示时区:\")",
        ".setName(\"Oldest age in coloring\")": ".setName(\"着色最旧时间\")",
        ".setName(\"Text color\")": ".setName(\"文本颜色\")",
        ".setName(\"Ignore whitespace and newlines in changes\")": ".setName(\"忽略更改中的空格和换行符\")",
        ".setName(\"Split automatic commit and push\")": ".setName(\"自动提交和推送分离\")",
        ".setName(`Vault ${commitOrBackup} interval (minutes)`)": ".setName(`保险库 ${commitOrBackup} 间隔(分钟)`)",
        ".setName(`Auto Backup after stopping file edits`)": ".setName(`停止文件编辑后自动备份`)",
        ".setName(`Auto ${commitOrBackup} after latest commit`)": ".setName(`在最新提交后自动 ${commitOrBackup}`)",
        ".setName(`Vault push interval (minutes)`)": ".setName(`仓库推送间隔(分钟)`)",
        ".setName(\"Specify custom commit message on auto backup\")": ".setName(\"在自动备份时指定自定义提交信息\")",
        ".setName(\"Commit message on auto backup/commit\")": ".setName(\"自动备份/提交的提交信息\")",
        ".setName(\"Commit message on manual backup/commit\")": ".setName(\"手动备份/提交的提交信息\")",
        ".setName(\"Backup\")": ".setName(\"备份\")",
        ".setName(\"Sync Method\")": ".setName(\"同步方法\")",
        ".setName(\"Pull updates on startup\")": ".setName(\"启动时检查更新\")",
        ".setName(\"Push on backup\")": ".setName(\"备份推送\")",
        ".setName(\"Pull changes before push\")": ".setName(\"在推送前拉取变更\")",
        ".setDesc(\"Enable to use one interval for commit and another for sync.\")": ".setDesc(\"允许使用一个间隔进行提交,另一个间隔进行同步。\")",
        ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)": ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"提交\":\"提交并同步\"}每 X 分钟变更。设置为 0(默认)以禁用。(请参见下面的设置以进行进一步配置！)`)",
        ".setDesc(`Requires the ${i} interval not to be 0.\n                        If turned on, do auto ${i} every ${$s(r.settings.autoSaveInterval)} after stopping file edits.\n                        This also prevents auto ${i} while editing a file. If turned off, it's independent from the last file edit.`)": ".setDesc(`需要 ${i} 间隔不为 0。\n                        如果开启,则在停止文件编辑后每隔 ${$s(r.settings.autoSaveInterval)} 自动 ${i}。\n                        这也会防止在编辑文件时自动 ${i}。如果关闭,则与上次文件编辑无关。`)",
        ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)": ".setDesc(`如果启用,将最后一次自动 ${i} 时间戳设置为最新的提交时间戳。这减少了在进行手动提交时自动 ${i} 的频率。`)",
        ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"每X分钟推送提交。设置为0(默认)以禁用。\")",
        ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"每 X 分钟拉取更改。设置为 0(默认)以禁用。\")",
        ".setDesc(\"You will get a pop up to specify your message.\")": ".setDesc(\"您将收到一个弹出窗口以指定您的消息。\")",
        ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")": ".setDesc(\"可用占位符:{{date}}(见下文)、{{hostname}}(见下文)、{{numFiles}}(提交中更改的文件数量)和{{files}}(提交信息中的更改文件)。\")",
        ".setDesc(\"Specify custom hostname for every device.\")": ".setDesc(\"为每个设备指定自定义主机名。\")",
        ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")": ".setDesc(\"决定如何将远程分支中的提交集成到本地分支中。\")",
        ".setDesc(\"Automatically pull commits when Obsidian starts.\")": ".setDesc(\"自动在 Obsidian 启动时拉取提交。\")",
        ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")": ".setDesc(\"使用默认设置的 提交和同步 意味着暂存所有内容 -> 提交 -> 拉取 -> 推送。理想情况下,这是一个你定期执行的单一操作,用于保持本地和远程仓库的同步。\")",
        ".setDesc(`Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit ${r.settings.pullBeforePush?\"and pull \":\"\"}only. It will still be called commit-and-sync.`)": ".setDesc(`大多数情况下,您希望在提交后推送。关闭此选项会将提交并同步操作变为仅提交${r.settings.pullBeforePush?\"和拉取\":\"\"}操作。它仍然会被称为提交并同步。`)",
        ".setDesc(`On commit-and-sync, pull commits as well. Turning this off turns a commit-and-sync action into commit ${r.settings.disablePush?\"\":\"and push \"}only.`)": ".setDesc(`在提交并同步时,同时拉取提交。关闭此选项会将提交并同步操作变为仅提交${r.settings.disablePush?\"\":\"和推送\"}操作。`)",
        ".setDesc(\"Show the author of the commit in the history view.\")": ".setDesc(\"在历史视图中显示提交的作者。\")",
        ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")": ".setDesc(\"在历史视图中显示提交的日期。使用 {{date}} 占位符格式来显示日期。\")",
        ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")": ".setDesc(\"在较慢的机器上,这可能会导致延迟。如果是这样,请禁用此选项。\")",
        ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")": ".setDesc(\"在文件更改后等待的毫秒数,然后刷新源控制视图。\")",
        ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")": ".setDesc(\"禁用 Git 操作的通知以减少干扰(请参阅状态栏以获取更新)。即使您启用此设置,错误仍会作为通知显示。\")",
        ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")": ".setDesc(\"当没有需要提交或推送的更改时,不显示通知。\")",
        ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")": ".setDesc(\"Obsidian必须重启以使更改生效。\")",
        ".setDesc(\"Type in your password. You won't be able to see it again.\")": ".setDesc(\"输入您的密码。您将无法再次看到它。\")",
        ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")": ".setDesc(\"这些设置通常无需更改,但在特殊配置中可能需要。\")",
        ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')": ".setDesc('\"提交和同步\"以及\"拉取\"处理子模块。缺失的功能:冲突文件、拉取/推送/提交文件的数量。每个子模块需要设置跟踪分支。')",
        ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")": ".setDesc(\"每当根仓库发生检出时,递归检出子模块(如果分支存在)。\")",
        ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")": ".setDesc(\"使用每一行作为新环境变量,格式为 KEY=VALUE 。\")",
        ".setDesc(\"Use each line for one path\")": ".setDesc(\"每行使用一个路径\")",
        ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")": ".setDesc(\"移除之前添加的环境变量直到 Obsidian 重启才生效。\")",
        ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)": ".setDesc(`\n            设置 Git 二进制文件应从哪个存储库执行的相对路径。主要用于设置 Git 仓库的路径,只有当 Git 仓库位于分库根目录之下时才需要。在 Windows 下使用\"\\\\\"代替\"/\"。\n            `)",
        ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')": ".setDesc('需要重启 Obsidian 才能生效。在 Windows 上使用\"\\\\\"而不是\"/\"。')",
        ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")": ".setDesc(\"禁用此设备上的插件。此设置不会同步。\")",
        ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")": ".setDesc(\"如果您喜欢这个插件,请考虑捐赠以支持持续开发。\")",
        ".setDesc(\"Only available on desktop currently.\")": ".setDesc(\"目前仅在桌面版可用。\")",
        ".setDesc(\"If and how the author is displayed\")": ".setDesc(\"作者的显示方式(如果有)\")",
        ".setDesc(\"If and how the date and time of authoring the line is displayed\")": ".setDesc(\"如果以及如何显示该行的创作日期和时间\")",
        ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")": ".setDesc(\"大多数情况下,您希望在提交后进行推送。关闭此选项会将提交和同步操作变为仅提交。它仍将被称为提交和同步。\")",
        ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")": ".setDesc(\"在提交和同步时,在推送之前拉取提交。关闭此选项会将提交和同步操作变为仅提交和推送。\")",
        ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )": ".setDesc(\n          \"选择处理远程 Git 仓库中新变更的方法。\"\n        )",
        ".setDesc(\"Automatically pull updates when Obsidian starts\")": ".setDesc(\"启动 Obsidian 时自动拉取更新\")",
        ".setDesc(\"Disable to only commit changes\")": ".setDesc(\"禁用以仅提交更改\")",
        ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")": ".setDesc(\"提交 -> 拉取 -> 推送(仅当启用推送时)\")",
        ".setDesc(\"Show the author of the commit in the history view\")": ".setDesc(\"在历史视图中显示提交的作者\")",
        ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )": ".setDesc(\n      \"在历史视图中显示提交的日期。使用 {{date}} 占位符格式来显示日期。\"\n    )",
        ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )": ".setDesc(\n      \"在较慢的机器上,这可能会导致延迟。如果出现这种情况,请禁用此选项。\"\n    )",
        ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )": ".setDesc(\n      \"在文件更改后等待的毫秒数,之后刷新源代码控制视图\"\n    )",
        ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )": ".setDesc(\n      \"禁用 Git 操作的通知以减少干扰(请参阅状态栏以获取更新)。即使启用此设置,错误仍会以通知形式显示。\"\n    )",
        ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )": ".setDesc(\n        \"当没有更改要提交/推送时,不显示通知\"\n      )",
        ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )": ".setDesc(\n      \"Obsidian 必须重启以使更改生效\"\n    )",
        ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )": ".setDesc(\n        \"输入你的密码。你将无法再次查看它。\"\n      )",
        ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )": ".setDesc(\n        '创建备份”和“拉取”会处理子模块。缺失的功能:冲突文件,已拉取/推送/提交的文件数量。每个子模块需要设置跟踪分支。'\n      )",
        ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )": ".setDesc(\n          \"每当在根仓库上进行检出时,对子模块递归进行检出(如果分支存在)。\"\n        )",
        ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )": ".setDesc(\n        \"使用每行来表示一个新的环境变量,格式为 KEY=VALUE\"\n      )",
        ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )": ".setDesc(\n      `需要重启 Obsidian 才能生效。在 Windows 上使用 \"\\\\\" 代替 \"/\".`\n    )",
        ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )": ".setDesc(\n      \"在该设备上禁用插件。此设置不会同步。\"\n    )",
        ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )": ".setDesc(\n      \"如果你喜欢这个插件,考虑捐款支持持续开发。\"\n    )",
        ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )": ".setDesc(\n        \"作者编写行的日期和时间的显示方式(如果有的话)\"\n      )",
        ".setPlaceholder(\"vault backup: {{date}}\")": ".setPlaceholder(\"保险库备份:{{date}}\")",
        ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")": ".setPlaceholder(\"GIT_DIR=/path/to/git/目录\")",
        ".setPlaceholder(\"directory/directory-with-git-repo\")": ".setPlaceholder(\"目录/带 Git 仓库的目录\")",
        ".setPlaceholder(\"Type your message and select optional the version with the added date.\")": ".setPlaceholder(\"输入您的消息并可选择添加日期的版本。\")",
        ".setPlaceholder(\"Not supported files will be opened by default app!\")": ".setPlaceholder(\"不支持的文件将由默认应用程序打开！\")",
        ".setPlaceholder(\"Select branch to checkout\")": ".setPlaceholder(\"选择要检出的分支\")",
        ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )": ".setPlaceholder(\n      \"不支持的文件将默认由默认应用程序打开！\"\n    )",
        ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )": ".setPlaceholder(\n      \"输入您的信息并可选地选择带有添加日期的版本。\"\n    )",
        ".setTitle(\"Copy commit hash\")": ".setTitle(\"复制提交哈希\")",
        ".setTitle(\"Git: Stage\")": ".setTitle(\"Git: 暂存\")",
        ".setTitle(\"Git: Unstage\")": ".setTitle(\"Git: 撤销暂存\")",
        ".setTitle(\"Git: Add to .gitignore\")": ".setTitle(\"Git: 添加到 .gitignore\")",
        ".innerText=`Color for ${i} commits`": ".innerText=`${i} 提交的颜色`",
        "super(`Modifying the index is not possible because you have unmerged files: ${e.toString}. Fix them up in the work tree, and then use 'git add/rm as appropriate to mark resolution and make a commit.`)": "super(`无法修改索引，因为您有未合并的文件: ${e.toString}。请在工作树中修复它们，然后使用 'git add/rm' 标记解决并提交.`)",
        "super(`An internal error caused this command to fail. Please file a bug report at https://github.com/isomorphic-git/isomorphic-git/issues with this error message: ${e}`)": "super(`内部错误导致此命令失败。请在 https://github.com/isomorphic-git/isomorphic-git/issues 提交错误报告，附上此错误信息: ${e}`)",
        "super(`The filepath \"${e}\" contains unsafe character sequences`)": "super(`文件路径 \"${e}\" 包含不安全的字符序列`)",
        "super(`Could not find ${e}.`)": "super(`无法找到 ${e}.`)",
        "super(`Object ${e} ${i?`at ${i}`:\"\"}was anticipated to be a ${r} but it is a ${n}.`)": "super(`对象 ${e} ${i?`位于 ${i}`:\"\"} 预计是 ${r}，但它是 ${n}.`)",
        "super(`Expected a 40-char hex object id but saw \"${e}\".`)": "super(`预期是一个 40 字符的十六进制对象 ID，但看到的是 \"${e}\".`)",
        "super(`Could not find a fetch refspec for remote \"${e}\". Make sure the config file has an entry like the following:\n[remote \"${e}\"]\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n`)": "super(`找不到远程 \"${e}\" 的 fetch refspec。请确保配置文件中有如下条目：\n[remote \"${e}\"]\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n`) ",
        "super(`Failed to create ${e} at ${n} because it already exists.${r?` (Hint: use 'force: true' parameter to overwrite existing ${e}.)`:\"\"}`)": "super(`创建 ${e} 在 ${n} 时失败，因为它已存在。${r?`（提示: 使用 'force: true' 参数覆盖现有的 ${e}。）`:\"\"}`)",
        "super(`Found multiple ${e} matching \"${n}\" (${r.join(\", \")}). Use a longer abbreviation length to disambiguate them.`)": "super(`找到多个匹配 \"${n}\" 的 ${e} (${r.join(\", \")})。请使用更长的缩写长度以消除歧义。`)",
        "super(`Your local changes to the following files would be overwritten by checkout: ${e.join(\", \")}`)": "super(`以下文件的本地更改将在检出时被覆盖：${e.join(\", \")}`)",
        "super(`Failed to checkout \"${e}\" because commit ${n} is not available locally. Do a git fetch to make the branch available locally.`)": "super(`无法检出 \"${e}\"，因为提交 ${n} 在本地不可用。请执行 git fetch 使该分支在本地可用.`)",
        "super(\"Empty response from git server.\")": "super(\"从 git 服务器收到空响应.\")",
        "super(\"A simple fast-forward merge was not possible.\")": "super(\"无法进行简单的快进合并.\")",
        "super(`One or more branches were not updated: ${e}`)": "super(`一个或多个分支未更新: ${e}`)",
        "super(`HTTP Error: ${e} ${n}`)": "super(`HTTP 错误: ${e} ${n}`)",
        "super(`\"${e}\" would be an invalid git reference. (Hint: a valid alternative would be \"${n}\".)`)": "super(`\"${e}\" 将是一个无效的 Git 引用。 (提示: 一个有效的替代方案是 \"${n}\".)`)",
        "super(`Maximum search depth of ${e} exceeded.`)": "super(`超出了最大搜索深度 ${e}.`)",
        "super(\"Merges with conflicts are not supported yet.\")": "super(\"尚不支持带有冲突的合并.\")",
        "super(`Automatic merge failed with one or more merge conflicts in the following files: ${e.toString()}. Fix conflicts then commit the result.`)": "super(`自动合并失败，以下文件存在一个或多个合并冲突: ${e.toString()}。解决冲突后提交结果。`)",
        "super(`No name was provided for ${e} in the argument or in the .git/config file.`)": "super(`在参数或 .git/config 文件中未提供 ${e} 的名称.`)",
        "super(`The function requires a \"${e}\" parameter but none was provided.`)": "super(`该函数需要一个 \"${e}\" 参数，但未提供.`)",
        "super('There are multiple errors that were thrown by the method. Please refer to the \"errors\" property to see more')": "super('该方法抛出了多个错误。请参阅 \"errors\" 属性查看更多')",
        "super(`Expected \"${e}\" but received \"${n}\".`)": "super(`预期是 \"${e}\"，但接收到的是 \"${n}\".`)",
        "super(`Push rejected${n}. Use \"force: true\" to override.`)": "super(`推送被拒绝${n}。使用 \"force: true\" 覆盖.`)",
        "super(`Remote does not support the \"${e}\" so the \"${n}\" parameter cannot be used.`)": "super(`远程不支持 \"${e}\"，因此无法使用 \"${n}\" 参数.`)",
        "super(`Remote did not reply using the \"smart\" HTTP protocol. Expected \"001e# service=git-upload-pack\" but received: ${e}`)": "super(`远程未使用 \"智能\" HTTP 协议回复。预期收到 \"001e# service=git-upload-pack\"，但收到: ${e}`)",
        "super(`Git remote \"${e}\" uses an unrecognized transport protocol: \"${n}\"`)": "super(`Git 远程 \"${e}\" 使用了一个无法识别的传输协议: \"${n}\"`)",
        "super(`Cannot parse remote URL: \"${e}\"`)": "super(`无法解析远程 URL: \"${e}\"`)",
        "super(\"The operation was canceled.\")": "super(\"操作已取消.\")",
        "super(`Could not merge index: Entry for '${e}' is not up to date. Either reset the index entry to HEAD, or stage your unstaged changes.`)": "super(`无法合并索引: '${e}' 的条目未更新。请重置索引条目为 HEAD，或暂存您的未暂存更改.`)",
        "super(`\"${e}\" does not point to any commit. You're maybe working on a repository with no commits yet. `)": "super(`\"${e}\" 没有指向任何提交。您可能正在一个尚未有提交的仓库中工作.`)",
        "super(\"No network connection available\")": "super(\"没有可用的网络连接\")",
        "ue(\"invalid type passed to GitIndex.from\")": "ue(\"传递给 GitIndex.from 的类型无效\")",
        "ue(\"Index file is empty (.git/index)\")": "ue(\"索引文件为空 (.git/index)\")",
        "ue(`Invalid dircache magic file number: ${i}`)": "ue(`无效的 dircache 魔术文件编号: ${i}`)",
        "ue(`Invalid checksum in GitIndex buffer: expected ${s} but saw ${a}`)": "ue(`GitIndex 缓冲区中的校验和无效: 预期 ${s} 但看到 ${a}`)",
        "ue(`Unsupported dircache version: ${o}`)": "ue(`不支持的 dircache 版本: ${o}`)",
        "ue(`Got a path length of: ${h}`)": "ue(`路径长度为: ${h}`)",
        "ue(`Expected 1-8 null characters but got '${p}' after ${u.path}`)": "ue(`预期 1-8 个空字符，但在 ${u.path} 后得到了 '${p}'`)",
        "ue(\"Unexpected end of file\")": "ue(\"文件意外结束\")",
        "ue(`Unexpected GitTree entry mode: ${t.toString(8)`)": "ue(`意外的 GitTree 条目模式: ${t.toString(8)`) ",
        "ue(\"Invalid refspec\")": "ue(\"无效的引用规范\")",
        "ue(`Unexpected GitTree entry mode: ${t}`)": "ue(`意外的 GitTree 条目模式: ${t}`)",
        "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next space character.`)": "ue(`GitTree: 解析缓冲区时出错，字节位置 ${n}: 找不到下一个空格字符.`)",
        "ue(`GitTree: Error parsing buffer at byte location ${n}: Could not find the next null character.`)": "ue(`GitTree: 解析缓冲区时出错，字节位置 ${n}: 找不到下一个空字符.`)",
        "ue(`Could not understand file mode: ${t}`)": "ue(`无法理解文件模式: ${t}`)",
        "ue(\"invalid type passed to GitTree constructor\")": "ue(\"传递给 GitTree 构造函数的类型无效\")",
        "ue(`Length mismatch: expected ${a} bytes but got ${s} instead.`)": "ue(`长度不匹配: 预期 ${a} 字节，但实际得到 ${s} 字节.`)",
        "ue(`applyDelta expected source buffer to be ${r} bytes but the provided buffer was ${e.length} bytes`)": "ue(`applyDelta 预期源缓冲区为 ${r} 字节，但提供的缓冲区为 ${e.length} 字节`) ",
        "ue(`applyDelta expected target buffer to be ${i} bytes but the resulting buffer was ${l} bytes`)": "ue(`applyDelta 预期目标缓冲区为 ${i} 字节，但结果缓冲区为 ${l} 字节`) ",
        "ue(`Invalid PACK header '${r}'`)": "ue(`无效的 PACK 头部 '${r}'`) ",
        "ue(`Invalid packfile version: ${i}`)": "ue(`无效的 packfile 版本: ${i}`) ",
        "ue(`Pako error: ${f.msg}`)": "ue(`Pako 错误: ${f.msg}`)",
        "ue(\"Inflated object size is different from that stated in packfile.\")": "ue(\"膨胀后的对象大小与 packfile 中声明的不同.\")",
        "ue(`Unable to read version ${a} packfile IDX. (Only version 2 supported)`)": "ue(`无法读取版本 ${a} 的 packfile IDX. (只支持版本 2)`) ",
        "ue(\"To keep implementation simple, I haven't implemented the layer 5 feature needed to support packfiles > 2GB in size.\")": "ue(\"为了简化实现，我没有实现支持大于 2GB 的 packfile 所需的第五层功能.\")",
        "ue(`Could not read object ${e} from packfile`)": "ue(`无法从 packfile 中读取对象 ${e}`)",
        "ue(\"Tried to read from a GitPackIndex with no packfile loaded into memory\")": "ue(\"尝试从未加载 packfile 到内存中的 GitPackIndex 中读取\")",
        "ue(\"Unrecognized type: 0b\"+s.toString(2))": "ue(\"无法识别的类型: 0b\"+s.toString(2))",
        "ue(`Packfile told us object would have length ${c} but it had length ${h.byteLength}`)": "ue(`Packfile 告诉我们对象的长度为 ${c}，但它的长度为 ${h.byteLength}`)",
        "ue(`SHA check failed! Expected ${r}, computed ${o}`)": "ue(`SHA 校验失败! 预期 ${r}, 计算得出 ${o}`)",
        "ue(`invalid requested format \"${i}\"`)": "ue(`无效的请求格式 \"${i}\"`) ",
        "ue(\"invalid type passed to GitAnnotatedTag constructor\")": "ue(\"传递给 GitAnnotatedTag 构造函数的类型无效\")",
        "ue(\"invalid type passed to GitCommit constructor\")": "ue(\"传递给 GitCommit 构造函数的类型无效\")",
        "ue(\"commit 'parent' property should be an array\")": "ue(\"commit 的 'parent' 属性应该是一个数组\")",
        "ue(\"GitObjectStoreLoose expects objects to write to be in deflated format\")": "ue(\"GitObjectStoreLoose 期望写入的对象应为压缩格式\")",
        "ue(`Invalid mode 0o${_.toString(8)`)": "ue(`无效的模式 0o${_.toString(8)`) ",
        ".displayMessage(`Staged ${r.path}`)": ".displayMessage(`已暂存 ${r.path}`)",
        ".displayMessage(`Unstaged ${r.path}`)": ".displayMessage(`未暂存 ${r.path}`)",
        ".displayMessage(\"Everything is up-to-date\")": ".displayMessage(\"一切都是最新的\")",
        ".displayMessage(\"No commits to push\")": ".displayMessage(\"没有提交可以推送\")",
        ".displayMessage(`Committed${d?\" approx.\":\"\"} ${h} ${h==1?\"file\":\"files\"}`)": ".displayMessage(`已提交${d?\" 约\":\"\"} ${h} ${h==1?\"个文件\":\"个文件\"}`)",
        ".displayMessage(\"No changes to commit\")": ".displayMessage(\"没有更改可以提交\")",
        ".displayMessage(`Pushed ${i} ${i==1?\"file\":\"files\"} to remote`)": ".displayMessage(`已推送 ${i} ${i==1?\"个文件\":\"个文件\"} 到远程`) ",
        ".displayMessage(`Pulled ${n.length} ${n.length==1?\"file\":\"files\"} from remote`)": ".displayMessage(`已从远程拉取 ${n.length} ${n.length==1?\"个文件\":\"个文件\"}`)",
        ".displayMessage(\"Fetched from remote\")": ".displayMessage(\"已从远程获取\")",
        ".displayMessage(`Staged ${n.path}`)": ".displayMessage(`已暂存 ${n.path}`)",
        ".displayMessage(`Unstaged ${n.path}`)": ".displayMessage(`未暂存 ${n.path}`)",
        ".displayMessage(`Switched to ${r}`)": ".displayMessage(`已切换到 ${r}`)",
        ".displayMessage(`Switched to ${n}`)": ".displayMessage(`已切换到 ${n}`)",
        ".displayMessage(`Created new branch ${n}`)": ".displayMessage(`已创建新分支 ${n}`)",
        ".displayMessage(`Deleted branch ${r}`)": ".displayMessage(`已删除分支 ${r}`)",
        ".displayMessage(`Set upstream branch to ${n}`)": ".displayMessage(`已设置上游分支为 ${n}`)",
        ".displayMessage(\"Fetching remote branches\")": ".displayMessage(\"正在获取远程分支\")",
        ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)": ".displayError(`无法运行git命令。尝试运行: '${this.localStorage.getGitPath()||\"git\"}' .`)",
        ".displayError(\"Aborted. No upstream-branch is set!\",1e4)": ".displayError(\"操作已中止。未设置上游分支！\",1e4)",
        ".displayError(\"Too many changes to display\")": ".displayError(\"更改过多,无法显示\")",
        ".displayError(`Did not commit, because following files are too big: ${a.map(s=>s.vault_path).join(` `)}. Please remove them.`)": ".displayError(`未提交,因为以下文件太大:${a.map(s=>s.vault_path).join(` `)}。请移除它们。`)",
        ".displayError(`You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)": ".displayError(`您在${r.conflicted.length}个${r.conflicted.length==1?\"文件\":\"文件\"}中有冲突`)",
        ".displayError(`Did not commit, because you have conflicts in ${c.conflicted.length} ${c.conflicted.length==1?\"file\":\"files\"}. Please resolve them and commit per command.`)": ".displayError(`未提交,因为您在${c.conflicted.length}个${c.conflicted.length==1?\"文件\":\"文件\"}中有冲突。请解决这些冲突后通过命令提交。`)",
        ".displayError(\"Did not commit, because you have conflicts. Please resolve them and commit per command.\")": ".displayError(\"未提交,因为您有冲突。请解决冲突后通过命令提交。\")",
        ".displayError(`Cannot push. You have conflicts in ${r.conflicted.length} ${r.conflicted.length==1?\"file\":\"files\"}`)": ".displayError(`无法推送。您在${r.conflicted.length}个${r.conflicted.length==1?\"文件\":\"文件\"}中有冲突`)",
        ".displayError(\"Cannot push. You have conflicts\")": ".displayError(\"无法推送。您有冲突\")",
        ".displayError(\"Git: Going into offline mode. Future network errors will no longer be displayed.\",2e3)": ".displayError(\"Git:进入离线模式。未来的网络错误将不再显示。\",2e3)",
        ".displayError(`Pull failed (${this.plugin.settings.syncMethod})": ".displayError(`拉取失败(${this.plugin.settings.syncMethod})",
        ".displayError(`Sync failed (${this.plugin.settings.syncMethod})": ".displayError(`同步失败(${this.plugin.settings.syncMethod})",
        "\"aria-label\",\"Open File\"": "\"aria-label\",\"打开文件\"",
        "\"aria-label\",\"Change Layout\"": "\"aria-label\",\"更改布局\"",
        "\"aria-label\",\"Refresh\"": "\"aria-label\",\"刷新\"",
        "\"aria-label\",\"Discard\"": "\"aria-label\",\"丢弃\"",
        "\"aria-label\",\"Stage\"": "\"aria-label\",\"暂存\"",
        "\"aria-label\",\"Unstage\"": "\"aria-label\",\"取消暂存\"",
        "\"aria-label\",\"Commit-and-sync\"": "\"aria-label\",\"提交并同步\"",
        "\"aria-label\",\"Commit\"": "\"aria-label\",\"提交\"",
        "\"aria-label\",\"Stage all\"": "\"aria-label\",\"暂存所有\"",
        "\"aria-label\",\"Unstage all\"": "\"aria-label\",\"取消暂存所有\"",
        "\"aria-label\",\"Push\"": "\"aria-label\",\"推送\"",
        "\"aria-label\",\"Pull\"": "\"aria-label\",\"拉取\"",
        "\"aria-label\",s=\"And \"+(t[0].length-500)+\" more files\"": "\"aria-label\",s=\"添加 \"+(t[0].length-500)+\" 更多文件\"",
        "\"aria-label\",n=\"Clear\"": "\"aria-label\",n=\"清除\"",
        ".ariaLabel=\"You have merge conflicts. Resolve them and commit afterwards.\"": ".ariaLabel=\"您有合并冲突。请解决冲突后再提交。\"",
        ".ariaLabel=\"Checking repository status...\"": ".ariaLabel=\"正在检查仓库状态...\"",
        ".ariaLabel=\"Adding files...\"": ".ariaLabel=\"正在添加文件...\"",
        ".ariaLabel=\"Committing changes...\"": ".ariaLabel=\"正在提交更改...\"",
        ".ariaLabel=\"Pushing changes...\"": ".ariaLabel=\"正在推送更改...\"",
        ".ariaLabel=\"Pulling changes...\"": ".ariaLabel=\"正在拉取更改...\"",
        ".ariaLabel=\"Failed on initialization!\"": ".ariaLabel=\"初始化失败！\"",
        ".ariaLabel=`${n?\"Offline: \":\"\"}Last Commit: ${i}`": ".ariaLabel=`${n?\"离线：\":\"\"}上次提交：${i}`",
        ".ariaLabel=n?\"Git is offline\":\"Git is ready\"": ".ariaLabel=n?\"Git离线\":\"Git准备就绪\"",
        "placeholder:\"Specify your username\"": "placeholder:\"指定您的用户名\"",
        "placeholder:\"Specify your password/personal access token\"": "placeholder:\"指定您的密码/个人访问令牌\"",
        "placeholder:\"Do you really want to delete the repository (.git directory)? plugin action cannot be undone.\"": "placeholder:\"您确定要删除该仓库(.git目录)吗？此插件操作无法撤销。\"",
        "placeholder:\"Do you want to discard all changes to tracked files? plugin action cannot be undone.\"": "placeholder:\"您想放弃所有跟踪文件的更改吗？此插件操作无法撤销。\"",
        "placeholder:\"Enter remote URL\"": "placeholder:\"输入远程URL\"",
        "placeholder:\"Enter directory for clone. It needs to be empty or not existent.\"": "placeholder:\"输入克隆目录。目录必须为空或不存在。\"",
        "placeholder:\"Specify depth of clone. Leave empty for full clone.\"": "placeholder:\"指定克隆的深度。留空则为完整克隆。\"",
        "placeholder:\"Create new branch\"": "placeholder:\"创建新分支\"",
        "placeholder:\"Delete branch\"": "placeholder:\"删除分支\"",
        "placeholder:\"This branch isn't merged into HEAD. Force delete?\"": "placeholder:\"此分支尚未合并到HEAD中。强制删除？\"",
        "placeholder:\"Select or create a new remote by typing its name and selecting it\"": "placeholder:\"通过输入名称并选择来选择或创建新的远程\"",
        "placeholder:\"Select or create a new remote branch by typing its name and selecting it\"": "placeholder:\"通过输入名称并选择来选择或创建新的远程分支\"",
        "placeholder:\"Select a remote\"": "placeholder:\"选择一个远程\"",
        "reason:\"Failed to get remote url of submodule\"": "reason:\"无法获取子模块的远程 URL\"",
        "reason:\"Remote branch is not configured\"": "reason:\"远程分支未配置\"",
        "reason:\"Failed to get current branch name\"": "reason:\"无法获取当前分支名称\"",
        "reason:\"Failed to get remote url\"": "reason:\"无法获取远程 URL\"",
        "reason:\"Could not parse remote url\"": "reason:\"无法解析远程 URL\"",
        "-------------------------下拉列表-------------------------": "-------------------------下拉列表-------------------------",
        "hide:\"Hide\",full:\"Full\",initials:\"Initials\"": "hide:\"隐藏\",full:\"完整\",initials:\"首字母\"",
        "\"viewer-local\":\"My local (default)\",\"author-local\":\"Author's local\",utc0000:\"UTC+0000/Z\"": "\"viewer-local\":\"我的本地 (默认)\",\"author-local\":\"作者的本地\",utc0000:\"UTC+0000/Z\"",
        "merge:\"Merge\",rebase:\"Rebase\",reset:\"Other sync service (Only updates the HEAD without touching the working directory)\"": "merge:\"合并\",rebase:\"变基\",reset:\"其他同步服务 (仅更新 HEAD,不触及工作目录)\"",
        "hide:\"Hide\",initials:\"Initials (default)\",\"first name\":\"First name\",\"last name\":\"Last name\",full:\"Full name\"": "hide:\"隐藏\",initials:\"首字母 (默认)\",\"first name\":\"名\",\"last name\":\"姓\",full:\"全名\"",
        "hide:\"Hide\",date:\"Date (default)\",datetime:\"Date and time\",\"natural language\":\"Natural language\",custom:\"Custom\"": "hide:\"隐藏\",date:\"日期 (默认)\",datetime:\"日期和时间\",\"natural language\":\"自然语言\",custom:\"自定义\"",
        "inactive:\"Do not follow (default)\",\"same-commit\":\"Follow within same commit\",\"all-commits\":\"Follow within all commits (maybe slow)\"": "inactive:\"不跟踪 (默认)\",\"same-commit\":\"仅在当前提交中跟踪\",\"all-commits\":\"在所有提交中跟踪 (可能较慢)\"",
        "---------------------------------------------------------": "---------------------------------------------------------",
        ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)": ".log(\"奇怪的事情发生了。'checkRequirements'的结果是\"+r)",
        ".createEl(\"button\", {\n      text: \"Cancel\"\n    })": ".createEl(\"按钮\", {\n      text: \"Cancel\"\n    })",
        ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"": ".addRibbonIcon(\"git-pull-request\",\"打开Git源代码管理\"",
        "i=\"commit\"": "i=\" 提交 \"",
        "\"commit-and-sync\"": "\" 提交并同步 \"",
        "\"Changes\"": "\"更改\"",
        "\"Staged Changes\"": "\"已暂存更改\"",
        "\"Recently Pulled Files\"": "\"最近拉取的文件\"",
        "`\n            Specify custom date format. E.g. \"${Dh}. See <a href=\"https://momentjs.com\">Moment.js</a> for more formats.`": "`\n            指定自定义日期格式。例如:\"${Dh}。更多格式请参见 <a href=\"https://momentjs.com\">Moment.js</a>。`",
        "`\n            <a href=\"${cL}\">Feature guide and quick examples</a></br>\n            The commit hash, author name and authoring date can all be individually toggled.</br>Hide everything, to only show the age-colored sidebar.`": "`\n            <a href=\"${cL}\">功能指南和快速示例</a></br>\n            提交哈希、作者姓名和创作日期都可以单独切换。</br>隐藏所有内容,仅显示着色时间的侧边栏。`",
        "`\n                By default (deactivated), each line only shows the newest commit where it was changed.\n                <br/>\n                With <i>same commit</i>, cut-copy-paste-ing of text is followed within the same commit and the original commit of authoring will be shown.\n                <br/>\n                With <i>all commits</i>, cut-copy-paste-ing text inbetween multiple commits will be detected.\n                <br/>\n                It uses <a href=\"https://git-scm.com/docs/git-blame\">git-blame</a> and\n                for matches (at least ${Sl} characters) within the same (or all) commit(s), <em>the originating</em> commit's information is shown.`": "`\n                默认情况下(未激活),每行只显示最新的更改提交。\n                <br/>\n                使用 <i>同一提交</i>,剪切、复制和粘贴文本会在同一提交内进行,显示原始提交的作者信息。\n                <br/>\n                使用 <i>所有提交</i>,剪切、复制和粘贴文本将跨多个提交进行检测。\n                <br/>\n                它使用 <a href=\"https://git-scm.com/docs/git-blame\">git-blame</a>,并且对于在同一(或所有)提交中匹配的内容(至少 ${Sl} 个字符),显示<em>来源</em>提交的信息。`",
        "`\n                    The time-zone in which the authoring date should be shown.\n                    Either your local time-zone (default),\n                    the author's time-zone during commit creation or\n                    <a href=\"https://en.wikipedia.org/wiki/UTC%C2%B100:00\">UTC\\xB100:00</a>.\n            `": "`\n                    显示创作日期的时区。\n                    可以是您的本地时区(默认),\n                    提交时作者的时区,或者\n                    <a href=\"https://en.wikipedia.org/wiki/UTC%C2%B100:00\">UTC\\xB100:00</a>.\n            `",
        "`\n                    Whitespace and newlines are interpreted as\n                    part of the document and in changes\n                    by default (hence not ignored).\n                    This makes the last line being shown as 'changed'\n                    when a new subsequent line is added,\n                    even if the previously last line's text is the same.\n                    <br>\n                    If you don't care about purely-whitespace changes\n                    (e.g. list nesting / quote indentation changes),\n                    then activating this will provide more meaningful change detection.\n                `": "`\n                    空格和换行符默认被解释为\n                    文档的一部分并且在更改中被识别(因此不会被忽略)。\n                    这使得当添加新行时,最后一行仍然显示为“已更改”,\n                    即使之前的最后一行文本相同。\n                    <br>\n                    如果您不关心纯空白的更改\n                    (例如列表嵌套/引用缩进的变化),\n                    那么启用此功能将提供更有意义的更改检测。\n                `",
        "'Unhandled error in \"FileSystem.exists()\" function'": "'\"FileSystem.exists()\"函数中出现未经处理的错误'",
        "` (${this.unPushedCommits} unpushed commits)`": "` (${this.unPushedCommits} 个未推送的提交)`",
        "            File without changes": "            文件没有更改",
        "<a href=\"${lL}\">Format string</a> to display the authoring date.</br>Currently: ${r}": "<a href=\"${lL}\">格式字符串</a> 用于显示作者日期。</br>当前: ${r}",
        "`The oldest age in the line author coloring. Everything older will have the same color.\n            </br>Smallest valid age is \"1d\". Currently: ${r!==void 0?`${r.asDays()} days`:\"invalid!\"}`": "`行作者着色中的最旧时间。所有更旧的将共享相同的颜色。\n</br>最小有效时间为 \"1d\"。当前：${r!==void 0?`${r.asDays()} 天`:\"无效!\"}`",
        "The CSS color of the gutter text": "垂直线文本的 CSS 颜色",
        "It is higly recommended to use": "强烈推荐使用",
        "CSS variables</a>": "CSS 变量</a>",
        "defined by themes": "由主题定义",
        "</pre> or": "</pre> 或",
        "because they automatically adapt to theme changes.<br/>": "因为它们会自动适应主题变化.<br/>",
        "See: <a href": "参见: <a href",
        "List of available CSS variables in Obsidian": "Obsidian 可用的 CSS 变量列表",
        "`abcdef Author Name ${s}`": "`abcdef 作者姓名 ${s}`",
        "Supports 'rgb(r,g,b)', 'hsl(h,s,l)', hex (#) and": "支持 'rgb(r,g,b)', 'hsl(h,s,l)', hex (#) 和",
        "named colors (e.g. 'black', 'purple'). Color preview:": "颜色命名 (例如: 'black', 'purple'). 颜色预览:",
        "oldest (${this.settings.lineAuthor.coloringMaxAge} or older)": "最旧 (${this.settings.lineAuthor.coloringMaxAge} 或更旧)",
        ":\"newest\"": ":\"最新\"",
        "Too many files to list": "文件数量过多，无法列出",
        "Affected files:": "受影响的文件:",
        "\"1 minute\":`${t} minutes`": "\" 1 分钟\":`${t} 分钟`"
    }
}