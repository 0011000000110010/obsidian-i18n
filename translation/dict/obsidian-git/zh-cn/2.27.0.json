{
    "manifest": {
        "translationVersion": 1730968983970,
        "pluginVersion": "2.27.0"
    },
    "description": {
        "original": "Integrate Git version control with automatic backup and other advanced features.",
        "translation": "集成 Git 版本控制，具有自动备份和其他高级功能。"
    },
    "dict": {
        "Notice(\"ObsidianGit: Base path does not exist\")": "Notice(\"ObsidianGit: 基础路径不存在\")",
        "Notice(\"Authentication failed. Please try with different credentials\")": "Notice(\"验证失败。请尝试使用不同的凭据\")",
        "Notice(\"This takes longer: Getting status\",this.noticeLength)": "Notice(\"这需要较长的时间：获取状态\",this.noticeLength)",
        "Notice(\"Initializing pull\")": "Notice(\"初始化拉取\")",
        "Notice(\"Finished pull\",!1)": "Notice(\"完成拉取\",!1)",
        "Notice(\"Initializing push\")": "Notice(\"初始化推送\")",
        "Notice(\"Initializing clone\")": "Notice(\"初始化克隆\")",
        "Notice(\"Please specify a valid number.\")": "Notice(\"请指定一个有效的数字。\")",
        "Notice(\"Automatic push disabled!\")": "Notice(\"自动推送已禁用！\")",
        "Notice(\"Obsidian must be restarted for the changes to take affect.\")": "Notice(\"Obsidian 必须重新启动以使更改生效。\")",
        "Notice(\"Debug information copied to clipboard. May contain sensitive information!\")": "Notice(\"调试信息已复制到剪贴板。可能包含敏感信息！\")",
        "Notice(\"It seems like you are not using GitHub\")": "Notice(\"您似乎没有使用 GitHub\")",
        "Notice(\"Successfully deleted repository. Reloading plugin...\")": "Notice(\"成功删除了仓库。正在重新加载插件...\")",
        "Notice(\"No repository found\")": "Notice(\"未找到仓库\")",
        "Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\",1e4)": "Notice(\"无法找到有效的 Git 仓库。请通过给定的命令创建一个，或克隆一个现有的仓库。\",1e4)",
        "Notice(\"Initialized new repo\")": "Notice(\"初始化新仓库\")",
        "Notice(\"Aborted clone\")": "Notice(\"已终止克隆 clone\")",
        "Notice(\"Invalid depth. Aborting clone.\")": "Notice(\"无效的深度。中止克隆。\")",
        "Notice(`Cloning new repo into \"${a}\"`)": "Notice(`将新的仓库克隆到 \"${a}\"`)",
        "Notice(\"Cloned new repo.\")": "Notice(\"克隆了新的仓库。\")",
        "Notice(\"Please restart Obsidian\")": "Notice(\"请重启 Obsidian\")",
        "Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\")": "Notice(\"自动备份：请输入自定义提交信息。留空以中止\")",
        "Notice(\"No upstream branch is set. Please select one.\")": "Notice(\"没有设置上游分支。请选择一个。\")",
        "Notice(\"All local changes have been discarded. New files remain untouched.\")": "Notice(\"所有本地更改已被丢弃。新文件保持不变。\")",
        ".log(`Did not delete ${y} because directory is not empty`)": ".log(`未删除 ${y}，因为目录不为空`)",
        ".log(\"No tracking branch found. Ignoring pull of main repo and updating submodules only.\")": ".log(\"未找到跟踪分支。将忽略主仓库的拉取，仅更新子模块。\")",
        ".log(\"No tracking branch found. Ignoring push of main repo and updating submodules only.\")": ".log(\"未找到跟踪分支。将忽略主仓库的推送，仅更新子模块。\")",
        ".log(\"Something weird happened:\")": ".log(\"奇怪的事情发生了：\")",
        ".log(this.plg.manifest.name+\": Enabled line authoring.\")": ".log(this.plg.manifest.name+\": 启用行作者功能。\")",
        ".log(this.plg.manifest.name+\": Disabled line authoring.\")": ".log(this.plg.manifest.name+\": 禁用行作者功能。\")",
        ".log(\"Something weird happened. The 'checkRequirements' result is \"+r)": ".log(\"奇怪的事情发生了。'checkRequirements'的结果是\"+r)",
        ".error(\"Failed to parse lines, starting in 0!\")": ".error(\"解析行失败，从 0 开始！\")",
        ".error(\"Unknown state reached while processing groups of lines\",a,s,o)": ".error(\"未知状态在处理行组时达到\",a,s,o)",
        "name:\"History\"": "name:\"历史\"",
        "name:\"Open history view\"": "name:\"打开历史视图\"",
        "name:\"Open diff view\"": "name:\"打开差异视图\"",
        "name:\"Open file on GitHub\"": "name:\"在 GitHub 上打开文件\"",
        "name:\"Commit-and-sync\"": "name:\"提交并同步\"",
        "name:\"Commit all changes\"": "name:\"提交所有更改\"",
        "name:\"Commit Amend\"": "name:\"提交修改\"",
        "name:\"Stage current file\"": "name:\"暂存当前文件\"",
        "name:\"Set upstream branch\"": "name:\"设置上游分支\"",
        "name:\"Initialize a new repo\"": "name:\"初始化新仓库\"",
        "name:\"Clone an existing remote repo\"": "name:\"克隆现有的远程仓库\"",
        "name:\"List changed files\"": "name:\"列出已更改的文件\"",
        "name:\"Create new branch\"": "name:\"创建新分支\"",
        "name:\"Delete branch\"": "name:\"删除分支\"",
        "name:\"Toggle line author information\"": "name:\"切换行作者信息\"",
        "text:\"Save\"": "text:\"保存\"",
        "text:\"File not found: \"": "text:\"文件未找到：\"",
        "text:\"Cancel\"": "text:\"取消\"",
        ".setText(\"Copy Debug Information\")": ".setText(\"复制调试信息\")",
        ".setText(`Debugging and logging:\nYou can always see the logs of this and every other plugin by opening the console with`)": ".setText(`调试和日志记录：\n使用以下命令打开控制台，即可查看本插件和其他所有插件的日志`)",
        ".setText(\"Edit .gitignore\")": ".setText(\"编辑 .gitignore\")",
        ".setText(`${this.deletion?\"Delete\":\"Discard\"} this file?`)": ".setText(`${this.deletion?\"删除\":\"放弃\"} 这个文件？`)",
        ".setText(`Do you really want to ${this.deletion?\"delete\":\"discard the changes of\"} \"${this.filename}\"`)": ".setText(`你真的想 ${this.deletion?\"删除\":\"放弃更改\"} \"${this.filename}\" 吗？`)",
        ".setName(\"Automatic\")": ".setName(\"自动\")",
        ".setName(\"Split timers for automatic commit and sync\")": ".setName(\"用于自动提交和同步的分割计时器\")",
        ".setName(`Auto ${i} after stopping file edits`)": ".setName(`在停止文件编辑后自动 ${i} `)",
        ".setName(`Auto ${i} after latest commit`)": ".setName(`在最新提交后自动 ${i} `)",
        ".setName(\"Auto push interval (minutes)\")": ".setName(\"自动推送间隔（分钟）\")",
        ".setName(\"Auto pull interval (minutes)\")": ".setName(\"自动拉取间隔（分钟）\")",
        ".setName(`Specify custom commit message on auto ${i}`)": ".setName(`在自动 ${i} 中指定自定义提交消息`)",
        ".setName(`Commit message on auto ${i}`)": ".setName(`自动 ${i} 的提交信息`)",
        ".setName(\"Commit message\")": ".setName(\"提交信息\")",
        ".setName(\"Commit message on manual commit\")": ".setName(\"手动提交时的提交信息\")",
        ".setName(\"{{date}} placeholder format\")": ".setName(\"{{date}} 占位符格式\")",
        ".setName(\"{{hostname}} placeholder replacement\")": ".setName(\"{{hostname}} 占位符替换\")",
        ".setName(\"Merge strategy\")": ".setName(\"合并策略\")",
        ".setName(\"Pull on startup\")": ".setName(\"开机时拉取\")",
        ".setName(\"Line author information\")": ".setName(\"线路作者信息\")",
        ".setName(\"Commit-and-sync\")": ".setName(\"提交并同步\")",
        ".setName(\"Push on commit-and-sync\")": ".setName(\"提交并同步时推送到远程仓库\")",
        ".setName(\"Pull on commit-and-sync\")": ".setName(\"提交并同步时从远程仓库拉取\")",
        ".setName(\"History view\")": ".setName(\"历史视图\")",
        ".setName(\"Show Author\")": ".setName(\"显示作者\")",
        ".setName(\"Show Date\")": ".setName(\"显示日期\")",
        ".setName(\"Source control view\")": ".setName(\"源控制视图\")",
        ".setName(\"Automatically refresh source control view on file changes\")": ".setName(\"自动刷新文件更改的源控制视图\")",
        ".setName(\"Source control view refresh interval\")": ".setName(\"源控制视图刷新间隔\")",
        ".setName(\"Miscellaneous\")": ".setName(\"杂项\")",
        ".setName(\"Disable notifications\")": ".setName(\"禁用通知\")",
        ".setName(\"Hide notifications for no changes\")": ".setName(\"隐藏无更改的通知\")",
        ".setName(\"Show status bar\")": ".setName(\"显示状态栏\")",
        ".setName(\"Show stage/unstage button in file menu\")": ".setName(\"显示文件菜单中的暂存/取消暂存按钮\")",
        ".setName(\"Show branch status bar\")": ".setName(\"显示分支状态栏\")",
        ".setName(\"Show the count of modified files in the status bar\")": ".setName(\"显示状态栏中修改文件的数量\")",
        ".setName(\"Authentication/commit author\")": ".setName(\"身份验证/提交作者\")",
        ".setName(\"Commit author\")": ".setName(\"提交作者\")",
        ".setName(\"Username on your git server. E.g. your username on GitHub\")": ".setName(\"在你的 Git 服务器上的用户名。例如：你在 GitHub 上的用户名\")",
        ".setName(\"Password/Personal access token\")": ".setName(\"密码/个人访问令牌\")",
        ".setName(\"Author name for commit\")": ".setName(\"提交的作者名称\")",
        ".setName(\"Author email for commit\")": ".setName(\"提交作者的电子邮件\")",
        ".setName(\"Advanced\")": ".setName(\"高级\")",
        ".setName(\"Update submodules\")": ".setName(\"更新子模块\")",
        ".setName(\"Submodule recurse checkout/switch\")": ".setName(\"子模块递归检出/切换\")",
        ".setName(\"Custom Git binary path\")": ".setName(\"自定义 Git 二进制文件路径\")",
        ".setName(\"Additional environment variables\")": ".setName(\"额外的环境变量\")",
        ".setName(\"Additional PATH environment variable paths\")": ".setName(\"其他 PATH 环境变量路径\")",
        ".setName(\"Reload with new environment variables\")": ".setName(\"重新加载新的环境变量\")",
        ".setName(\"Custom base path (Git repository path)\")": ".setName(\"自定义基础路径（Git 仓库路径）\")",
        ".setName(\"Custom Git directory path (Instead of '.git')\")": ".setName(\"自定义 Git 目录路径（取代 .git）\")",
        ".setName(\"Disable on this device\")": ".setName(\"在此设备上禁用\")",
        ".setName(\"Support\")": ".setName(\"支持\")",
        ".setName(\"Show commit authoring information next to each line\")": ".setName(\"显示每行旁边的提交作者信息\")",
        ".setName(\"Follow movement and copies across files and commits\")": ".setName(\"跟踪移动并跨文件和提交进行复制\")",
        ".setName(\"Show commit hash\")": ".setName(\"显示提交哈希值\")",
        ".setName(\"Author name display\")": ".setName(\"显示作者姓名\")",
        ".setName(\"Authoring date display\")": ".setName(\"显示创建日期\")",
        ".setName(\"Custom authoring date format\")": ".setName(\"自定义作者日期格式\")",
        ".setName(\"Authoring date display timezone\")": ".setName(\"创建日期显示时区：\")",
        ".setName(\"Oldest age in coloring\")": ".setName(\"着色年龄最大\")",
        ".setName(\"Text color\")": ".setName(\"文本颜色\")",
        ".setName(\"Ignore whitespace and newlines in changes\")": ".setName(\"忽略更改中的空格和换行符\")",
        ".setDesc(\"Enable to use one interval for commit and another for sync.\")": ".setDesc(\"允许使用一个间隔进行提交，另一个间隔进行同步。\")",
        ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"Commit\":\"Commit and sync\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`)": ".setDesc(`${r.settings.differentIntervalCommitAndPush?\"提交\":\"提交并同步\"}每 X 分钟变更。设置为 0（默认）以禁用。（请参见下面的设置以进行进一步配置！）`)",
        ".setDesc(`If turned on, sets last auto ${i} timestamp to the latest commit timestamp. This reduces the frequency of auto ${i} when doing manual commits.`)": ".setDesc(`如果启用，将最后一次自动 ${i} 时间戳设置为最新的提交时间戳。这减少了在进行手动提交时自动 ${i} 的频率。`)",
        ".setDesc(\"Push commits every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"每X分钟推送提交。设置为0（默认）以禁用。\")",
        ".setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\")": ".setDesc(\"每 X 分钟拉取更改。设置为 0（默认）以禁用。\")",
        ".setDesc(\"You will get a pop up to specify your message.\")": ".setDesc(\"您将收到一个弹出窗口以指定您的消息。\")",
        ".setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below), {{numFiles}} (number of changed files in the commit) and {{files}} (changed files in commit message).\")": ".setDesc(\"可用占位符：{{date}}（见下文）、{{hostname}}（见下文）、{{numFiles}}（提交中更改的文件数量）和{{files}}（提交信息中的更改文件）。\")",
        ".setDesc(\"Specify custom hostname for every device.\")": ".setDesc(\"为每个设备指定自定义主机名。\")",
        ".setDesc(\"Decide how to integrate commits from your remote branch into your local branch.\")": ".setDesc(\"决定如何将远程分支中的提交集成到本地分支中。\")",
        ".setDesc(\"Automatically pull commits when Obsidian starts.\")": ".setDesc(\"自动在 Obsidian 启动时拉取提交。\")",
        ".setDesc(\"Commit-and-sync with default settings means staging everything -> committing -> pulling -> pushing. Ideally this is a single action that you do regularly to keep your local and remote repository in sync.\")": ".setDesc(\"Commit-and-sync with default settings 意味着暂存所有内容 -> 提交 -> 拉取 -> 推送。理想情况下，这是一个你定期执行的单一操作，用于保持本地和远程仓库的同步。\")",
        ".setDesc(\"Most of the time you want to push after committing. Turning this off turns a commit-and-sync action into commit only. It will still be called commit-and-sync.\")": ".setDesc(\"大多数情况下，您希望在提交后进行推送。关闭此选项会将提交和同步操作变为仅提交。它仍将被称为提交和同步。\")",
        ".setDesc(\"On commit-and-sync, pull commits before pushing. Turning this off turns a commit-and-sync action into commit and push only.\")": ".setDesc(\"在提交和同步时，在推送之前拉取提交。关闭此选项会将提交和同步操作变为仅提交和推送。\")",
        ".setDesc(\"Show the author of the commit in the history view.\")": ".setDesc(\"在历史视图中显示提交的作者。\")",
        ".setDesc(\"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\")": ".setDesc(\"在历史视图中显示提交的日期。使用 {{date}} 占位符格式来显示日期。\")",
        ".setDesc(\"On slower machines this may cause lags. If so, just disable this option.\")": ".setDesc(\"在较慢的机器上，这可能会导致延迟。如果是这样，请禁用此选项。\")",
        ".setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View.\")": ".setDesc(\"在文件更改后等待的毫秒数，然后刷新源控制视图。\")",
        ".setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting.\")": ".setDesc(\"禁用 Git 操作的通知以减少干扰（请参阅状态栏以获取更新）。即使您启用此设置，错误仍会作为通知显示。\")",
        ".setDesc(\"Don't show notifications when there are no changes to commit or push.\")": ".setDesc(\"当没有需要提交或推送的更改时，不显示通知。\")",
        ".setDesc(\"Obsidian must be restarted for the changes to take affect.\")": ".setDesc(\"Obsidian必须重启以使更改生效。\")",
        ".setDesc(\"Type in your password. You won't be able to see it again.\")": ".setDesc(\"输入您的密码。您将无法再次看到它。\")",
        ".setDesc(\"These settings usually don't need to be changed, but may be requried for special setups.\")": ".setDesc(\"这些设置通常无需更改，但在特殊配置中可能需要。\")",
        ".setDesc('\"Commit-and-sync\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule.')": ".setDesc('\"提交和同步\"以及\"拉取\"处理子模块。缺失的功能：冲突文件、拉取/推送/提交文件的数量。每个子模块需要设置跟踪分支。')",
        ".setDesc(\"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\")": ".setDesc(\"每当根仓库发生检出时，递归检出子模块（如果分支存在）。\")",
        ".setDesc(\"Use each line for a new environment variable in the format KEY=VALUE .\")": ".setDesc(\"使用每一行作为新环境变量，格式为 KEY=VALUE 。\")",
        ".setDesc(\"Removing previously added environment variables will not take effect until Obsidian is restarted.\")": ".setDesc(\"移除之前添加的环境变量直到 Obsidian 重启才生效。\")",
        ".setDesc(`\n            Sets the relative path to the vault from which the Git binary should be executed.\n             Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.\n            `)": ".setDesc(`\n            设置 Git 二进制文件应从哪个存储库执行的相对路径。主要用于设置 Git 仓库的路径，只有当 Git 仓库位于分库根目录之下时才需要。在 Windows 下使用\"\\\\\"代替\"/\"。\n            `)",
        ".setDesc('Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.')": ".setDesc('需要重启 Obsidian 才能生效。在 Windows 上使用\"\\\\\"而不是\"/\"。')",
        ".setDesc(\"Disables the plugin on this device. This setting is not synced.\")": ".setDesc(\"禁用此设备上的插件。此设置不会同步。\")",
        ".setDesc(\"If you like this Plugin, consider donating to support continued development.\")": ".setDesc(\"如果您喜欢这个插件，请考虑捐赠以支持持续开发。\")",
        ".setDesc(\"If and how the date and time of authoring the line is displayed\")": ".setDesc(\"如果以及如何显示该行的创作日期和时间\")",
        ".setPlaceholder(\"Type your message and select optional the version with the added date.\")": ".setPlaceholder(\"输入您的消息并可选择添加日期的版本。\")",
        ".setPlaceholder(\"Not supported files will be opened by default app!\")": ".setPlaceholder(\"不支持的文件将由默认应用程序打开！\")",
        ".setPlaceholder(\"Select branch to checkout\")": ".setPlaceholder(\"选择要检出的分支\")",
        ".setTitle(\"Copy commit hash\")": ".setTitle(\"复制提交哈希\")",
        ".setTitle(\"Git: Stage\")": ".setTitle(\"Git: 暂存\")",
        ".setTitle(\"Git: Unstage\")": ".setTitle(\"Git: 撤销暂存\")",
        ".setTitle(\"Git: Add to .gitignore\")": ".setTitle(\"Git: 添加到 .gitignore\")",
        ".innerText=`Color for ${i} commits`": ".innerText=`${i} 提交的颜色`",
        "name:\"Source Control\"": "name:\"源代码管理\"",
        "name:\"Diff View\"": "name:\"差异视图\"",
        "name:\"Edit .gitignore\"": "name:\"编辑.gitignore\"",
        "name:\"Open source control view\"": "name:\"开源控制视图\"",
        "name:\"Open file history on GitHub\"": "name:\"GitHub 上的打开文件历史记录\"",
        "name:\"Pull\"": "name:\"拉取\"",
        "name:\"Fetch\"": "name:\"取回\"",
        "name:\"Switch to remote branch\"": "name:\"切换到远程分支\"",
        "name:\"Add file to gitignore\"": "name:\"将文件添加到 gitignore\"",
        "name:\"Commit-and-sync and then close Obsidian\"": "name:\"提交并同步，然后关闭 Obsidian\"",
        "name:\"Commit-and-sync with specific message\"": "name:\"提交并同步特定消息\"",
        "name:\"Commit all changes with specific message\"": "name:\"用特定消息提交所有更改\"",
        "name:\"Commit staged\"": "name:\"提交阶段\"",
        "name:\"Commit staged with specific message\"": "name:\"提交阶段带有特定消息\"",
        "name:\"Push\"": "name:\"推送\"",
        "name:\"Unstage current file\"": "name:\"取消当前文件的暂存\"",
        "name:\"Edit remotes\"": "name:\"编辑遥控器\"",
        "name:\"Remove remote\"": "name:\"删除遥控器\"",
        "name:\"CAUTION: Delete repository\"": "name:\"小心:删除存储库\"",
        "name:\"Switch branch\"": "name:\"交换机分支\"",
        "name:\"CAUTION: Discard all changes\"": "name:\"小心:放弃所有更改\"",
        "name:\"fileIcon\"": "name:\"文件图标\"",
        "name:\"fileTag\"": "name:\"文件标签\"",
        "text:\"Git is not ready. When all settings are correct you can configure commit-sync, etc.\"": "text:\"Git还没有准备好。当所有设置都正确时，您可以配置提交同步等。\"",
        ".setButtonText(\"Preview\")": ".setButtonText(\"预览\")",
        ".setButtonText(\"Reload\")": ".setButtonText(\"重新加载\")",
        ".setName(\"Preview commit message\")": ".setName(\"预览提交信息\")",
        ".setName(\"List filenames affected by commit in the commit body\")": ".setName(\"在提交内容中列出受提交影响的文件名\")",
        ".setName(\"Donate\")": ".setName(\"捐赠\")",
        ".setDesc(\"Use each line for one path\")": ".setDesc(\"每行使用一个路径\")",
        ".setDesc(\"Only available on desktop currently.\")": ".setDesc(\"目前仅在桌面版可用。\")",
        ".setDesc(\"If and how the author is displayed\")": ".setDesc(\"作者的显示方式（如果有）\")",
        ".setPlaceholder(\"vault backup: {{date}}\")": ".setPlaceholder(\"保险库备份：{{date}}\")",
        ".setPlaceholder(\"GIT_DIR=/path/to/git/dir\")": ".setPlaceholder(\"GIT_DIR=/path/to/git/目录\")",
        ".setPlaceholder(\"directory/directory-with-git-repo\")": ".setPlaceholder(\"目录/带 Git 仓库的目录\")",
        ".setName(\"Split automatic commit and push\")": ".setName(\"自动提交和推送分离\")",
        ".setName(`Vault ${commitOrBackup} interval (minutes)`)": ".setName(`保险库 ${commitOrBackup} 间隔（分钟）`)",
        ".setName(`Auto Backup after stopping file edits`)": ".setName(`停止文件编辑后自动备份`)",
        ".setName(`Auto ${commitOrBackup} after latest commit`)": ".setName(`在最新提交后自动 ${commitOrBackup}`)",
        ".setName(`Vault push interval (minutes)`)": ".setName(`仓库推送间隔（分钟）`)",
        ".setName(\"Specify custom commit message on auto backup\")": ".setName(\"在自动备份时指定自定义提交信息\")",
        ".setName(\"Commit message on auto backup/commit\")": ".setName(\"自动备份/提交的提交信息\")",
        ".setName(\"Commit message on manual backup/commit\")": ".setName(\"手动备份/提交的提交信息\")",
        ".setName(\"Backup\")": ".setName(\"备份\")",
        ".setName(\"Sync Method\")": ".setName(\"同步方法\")",
        ".setName(\"Pull updates on startup\")": ".setName(\"启动时检查更新\")",
        ".setName(\"Push on backup\")": ".setName(\"备份推送\")",
        ".setName(\"Pull changes before push\")": ".setName(\"在推送前拉取变更\")",
        ".setDesc(\n          \"Selects the method used for handling new changes found in your remote git repository.\"\n        )": ".setDesc(\n          \"选择处理远程 Git 仓库中新变更的方法。\"\n        )",
        ".setDesc(\"Automatically pull updates when Obsidian starts\")": ".setDesc(\"启动 Obsidian 时自动拉取更新\")",
        ".setDesc(\"Disable to only commit changes\")": ".setDesc(\"禁用以仅提交更改\")",
        ".setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\")": ".setDesc(\"提交 -> 拉取 -> 推送（仅当启用推送时）\")",
        ".setDesc(\"Show the author of the commit in the history view\")": ".setDesc(\"在历史视图中显示提交的作者\")",
        ".setDesc(\n      \"Show the date of the commit in the history view. The {{date}} placeholder format is used to display the date.\"\n    )": ".setDesc(\n      \"在历史视图中显示提交的日期。使用 {{date}} 占位符格式来显示日期。\"\n    )",
        ".setDesc(\n      \"On slower machines this may cause lags. If so, just disable this option\"\n    )": ".setDesc(\n      \"在较慢的机器上，这可能会导致延迟。如果出现这种情况，请禁用此选项。\"\n    )",
        ".setDesc(\n      \"Milliseconds to wait after file change before refreshing the Source Control View\"\n    )": ".setDesc(\n      \"在文件更改后等待的毫秒数，之后刷新源代码控制视图\"\n    )",
        ".setDesc(\n      \"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\"\n    )": ".setDesc(\n      \"禁用 Git 操作的通知以减少干扰（请参阅状态栏以获取更新）。即使启用此设置，错误仍会以通知形式显示。\"\n    )",
        ".setDesc(\n        \"Don't show notifications when there are no changes to commit/push\"\n      )": ".setDesc(\n        \"当没有更改要提交/推送时，不显示通知\"\n      )",
        ".setDesc(\n      \"Obsidian must be restarted for the changes to take affect\"\n    )": ".setDesc(\n      \"Obsidian 必须重启以使更改生效\"\n    )",
        ".setDesc(\n        \"Type in your password. You won't be able to see it again.\"\n      )": ".setDesc(\n        \"输入你的密码。你将无法再次查看它。\"\n      )",
        ".setDesc(\n        '\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule'\n      )": ".setDesc(\n        '创建备份”和“拉取”会处理子模块。缺失的功能：冲突文件，已拉取/推送/提交的文件数量。每个子模块需要设置跟踪分支。'\n      )",
        ".setDesc(\n          \"Whenever a checkout happens on the root repository, recurse the checkout on the submodules (if the branches exist).\"\n        )": ".setDesc(\n          \"每当在根仓库上进行检出时，对子模块递归进行检出（如果分支存在）。\"\n        )",
        ".setDesc(\n        \"Use each line for a new environment variable in the format KEY=VALUE\"\n      )": ".setDesc(\n        \"使用每行来表示一个新的环境变量，格式为 KEY=VALUE\"\n      )",
        ".setDesc(\n      `Requires restart of Obsidian to take effect. Use \"\\\\\" instead of \"/\" on Windows.`\n    )": ".setDesc(\n      `需要重启 Obsidian 才能生效。在 Windows 上使用 \"\\\\\" 代替 \"/\".`\n    )",
        ".setDesc(\n      \"Disables the plugin on this device. This setting is not synced.\"\n    )": ".setDesc(\n      \"在该设备上禁用插件。此设置不会同步。\"\n    )",
        ".setDesc(\n      \"If you like this Plugin, consider donating to support continued development.\"\n    )": ".setDesc(\n      \"如果你喜欢这个插件，考虑捐款支持持续开发。\"\n    )",
        ".setDesc(\n        \"If and how the date and time of authoring the line is displayed\"\n      )": ".setDesc(\n        \"作者编写行的日期和时间的显示方式（如果有的话）\"\n      )",
        ".setPlaceholder(\n      \"Not supported files will be opened by default app!\"\n    )": ".setPlaceholder(\n      \"不支持的文件将默认由默认应用程序打开！\"\n    )",
        ".setPlaceholder(\n      \"Type your message and select optional the version with the added date.\"\n    )": ".setPlaceholder(\n      \"输入您的信息并可选地选择带有添加日期的版本。\"\n    )",
        ".createEl(\"button\", {\n      text: \"Cancel\"\n    })": ".createEl(\"按钮\", {\n      text: \"Cancel\"\n    })",
        "name:\"Amend staged\"": "name:\"修改阶段\"",
        ".addRibbonIcon(\"git-pull-request\",\"Open Git source control\"": ".addRibbonIcon(\"git-pull-request\",\"打开Git源代码管理\"",
        "T(s,\"aria-label\",\"Commit\")": "T(s,\"aria-label\",\"提交\")",
        "T(b,\"aria-label\",\"Refresh\")": "T(b,\"aria-label\",\"刷新\")",
        "T(p,\"aria-label\",\"Pull\")": "T(p,\"aria-label\",\"拉取\")",
        "T(h,\"aria-label\",\"Push\")": "T(h,\"aria-label\",\"推送\")",
        "T(m,\"aria-label\",\"Change Layout\")": "T(m,\"aria-label\",\"更改布局\")",
        "T(u,\"aria-label\",\"Unstage all\")": "T(u,\"aria-label\",\"取消所有\")",
        "T(d,\"aria-label\",\"Stage\")": "T(d,\"aria-label\",\"暂存\")",
        "T(i,\"aria-label\",\"Commit-and-sync\")": "T(i,\"aria-label\",\"提交并同步\")",
        "T(l,\"aria-label\",\"Stage all\")": "T(l,\"aria-label\",\"暂存所有\")",
        ".displayError(`Cannot run git command. Trying to run: '${this.localStorage.getGitPath()||\"git\"}' .`)": ".displayError(`无法运行git命令。尝试运行: '${this.localStorage.getGitPath()||\"git\"}' .`)"
    }
}