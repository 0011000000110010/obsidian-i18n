{
    "manifest": {
        "translationVersion": 1729685941376,
        "pluginVersion": "0.2.5"
    },
    "description": {
        "original": "This is a enhancing mindmap plugin for Obsidian. You can edit mindmap on markdown.",
        "translation": "This is a enhancing mindmap plugin for Obsidian. You can edit mindmap on markdown."
    },
    "dict": {
        "Notice('Parse xmind error')": "Notice('Parse x1mind error')",
        "Notice(`${n} %`)": "Notice(`${n}1 %`)",
        "Notice(p + 'html')": "Notice(p + 'ht1ml')",
        "Notice(err)": "Notice(err)1",
        "Notice(`${t(\"Save success\")": "Notice(1`${t(\"Save success\")",
        "Notice(`${t(\"Save fail\")": "Notice(`$11{t(\"Save fail\")",
        "Notice( state.type)": "Notice( sta111te.type)",
        "Notice(cache.frontmatter[frontMatterKey])": "Notice(1111cache.frontmatter[frontMatterKey])",
        ".log(t)": ".log(t)1",
        ".log(md)": ".log(m11d)",
        ".log(_t)": ".log(_1)",
        ".log(r,'induce')": ".log(r,'ind11111e')",
        ".log(this._nodeNum,this._tempNum)": ".log(this._no1de1Num,this._tempNum)",
        ".log(this.view)": ".log(this.view)",
        ".log(b.x,b.y)": ".log(b.x,b11.y)",
        ".log(err)": ".log(err)11",
        ".log(arg.reverse()": ".log(arg.re1verse()",
        ".log(tok, context.macros.get(name)": ".log(tok, c1ontext.macros.get(name)",
        ".log('Error while reading CSS rules from ' + sheet.href, e.toString()": ".log('Error11w11hile reading CSS rules from ' + sheet.href, e.toString()",
        ".log(err, 'stroke array is error')": ".log(err, 'str1oke array is error')",
        ".log(this.mindmap.path)": ".log(this.mindmap.path)",
        ".log(id)": ".log(id)",
        ".log(targetFolder,this.plugin.app.fileManager)": ".log(targ11etFolder,this.plugin.app.fileManager)",
        ".error(\"Error: kanban locale not found\", obsidian.moment.locale()": ".error(\"Er11ror: kanban locale not found\", obsidian.moment.locale()",
        ".error(e)": ".error(e1)1",
        ".error(this.generatedError)": ".error(this1.ge1neratedError)",
        ".error(arg.reverse()": ".error(a1rg1re1verse()",
        ".error(message)": ".error(m11essage)",
        ".error(\"Error creating mindmap board:\", e)": ".error(\"Error11creating mindmap board:\", e)",
        "name: 'latin'": "name: 'latin'111",
        "name: 'cyrillic'": "name: 'cyr1illic'",
        "name: 'armenian'": "name: 'armenian'",
        "name: 'brahmic'": "name: 'b1ahmic'",
        "name: 'georgian'": "name: 'georgian'",
        "name: \"cjk\"": "name: \"cj1\"",
        "name: 'hangul'": "name: '1'",
        "name : \"\"), token);\n    } else if (this.mode === \"": "name : \"\"), 1token);\n    } else if (thi11s.mode === \"",
        "name: `${t('Create new mindmap')}`": "name: `${t('Cr11eate new mindmap')}`",
        "name: `${t('Toggle markdown/mindmap')}`": "name: `${t('To1g1gle markdown/mindmap')}`",
        "name: `${t('Copy node')}`": "name: `${t('Cop111y node')}`",
        "name: `${t('Paste node')}`": "name: `${t('111P1aste node')}`",
        "name: `${t('Export to html')}`": "name: `${t('1Export to html')}`",
        "text: '',\r\n                nodeType: '": "text: '',1odeType: '",
        "text: \"\\\\Vert\"": "text: \"\\\\Vert1\"",
        "text: \" \"": "text: \" \"1",
        "text: \"\\\\prime\"": "text: \"\\\\prime\"",
        "text: \"---\"": "text: \"---\"11",
        "text: \"--\"": "text: \"--\"",
        ".setName(`${t('Canvas size')}`)": ".setName(`${t('1Canvas size')}`)",
        ".setName(`${t('Canvas background')}`)": ".setName(`${t('1Canvas background')}`)",
        ".setName(`${t('Max level of node to markdown head')}`)": ".setName(`${t('Max level of node to markdown head')}`)",
        ".setName(`${t('Font size')}`)": ".setName(`${t('1o1nt size')}`)",
        ".setName(`${t('Mind map layout direct')}`)": ".setName(`${11Mind map layout direct')}`)",
        ".setName(`${t('Stroke Array')}`)": ".setName(`${t('Stroke Array')}`)",
        ".setDesc(`${t('Canvas size desc')}`)": ".setDesc(`${t1('C1nvas size desc')}`)",
        ".setDesc(`${t('Canvas background desc')}`)": ".setDesc(`${t('C11nvas background desc')}`)",
        ".setDesc(`${t('Max level of node to markdown head desc')}`)": ".setDesc(`${t('Max level 111f node to markdown head desc')}`)",
        ".setDesc(`${t('Font size desc')}`)": ".setDesc(`${t('Font 1size1 desc')}`)",
        ".setDesc(`${t('Mind map layout direct desc')}`)": ".setDesc(`${t('Mind1111map 1yout direct desc')}`)",
        ".setDesc(`${t('Stroke Array Desc')}`)": ".setDesc(`${t('Stroke1Array Desc')}`)",
        ".setPlaceholder('Example: black|white|#ccc')": ".setPlaceholder('Exa11mple: black|white|#ccc')",
        ".setPlaceholder('Example: 16')": ".setPlaceholder('1x1mple: 16')",
        ".setPlaceholder('Example: red,orange,blue ...')": ".setPlaceholder('1Example: red,orange,blue ...')",
        ".setTitle(`${t(\"Open as markdown\")}`)": ".setTitle(`${t(\"Op1en as1 markdown\")}`)",
        ".setTitle(`${t(\"Export to opml\")}`)": ".setTitle(`${t(\"Expo11rt1 to opml\")}`)",
        ".setTitle(`${t('New mindmap board')}`)": ".setTitle(`${t('New1111 mindmap board')}`)",
        ".setTitle(`${t('Open as mindmap board')}`)": ".setTitle(`${t('Open1 as mindmap board')}`)",
        ".innerText = \"\"": ".innerText = 1\"",
        ".innerText = ''": ".innerTex1t1= ''"
    }
}