{
    "manifest": {
        "translationVersion": 1732291313351,
        "pluginVersion": "1.1.0"
    },
    "description": {
        "original": "Automatically sets a featured image property in your notes based on the first image, YouTube link, or Auto Card Link image found in your document. This allows you to create rich note galleries using Folder Notes and Dataview.",
        "translation": "根据文档中找到的第一个图片、YouTube 链接或 Auto Card Link 图片,自动设置笔记中的特色图片属性。这允许您使用 Folder Notes 和 Dataview 创建丰富的笔记画廊。"
    },
    "dict": {
        "Notice(newFeature ? `Dry run: Would change featured image to: ${newFeature}` : `Dry run: Would remove featured image`)": "Notice(newFeature ? `模拟运行: 会将特色图片更改为: ${newFeature}` : `模拟运行: 会移除特色图片`)",
        "Notice(newFeature ? `Featured image set to ${newFeature}` : \"Featured image removed\")": "Notice(newFeature ? `特色图片设置为 ${newFeature}` : \"特色图片已移除\")",
        "Notice(\"No file is currently active\")": "Notice(\"当前没有活跃的文件\")",
        "Notice(`Starting ${this.settings.dryRun ? \"dry run of \" : \"\"}${operationName}...`)": "Notice(`开始 ${this.settings.dryRun ? \"模拟运行 \" : \"\"}${operationName}...`)",
        "Notice(`Starting ${this.settings.dryRun ? \"dry run of \" : \"\"}removal of featured images from all files...`)": "Notice(`开始 ${this.settings.dryRun ? \"dry run of \" : \"\"}从所有文件中移除特色图片...`)",
        "Notice(`Finished ${this.settings.dryRun ? \"dry run of \" : \"\"}removing featured images from ${removedCount} files.`)": "Notice(`完成 ${this.settings.dryRun ? \"dry run of \" : \"\"}从 ${removedCount} 个文件中移除特色图片。`)",
        "name: \"Set featured images in all files\"": "name: \"在所有文件中设置特色图片\"",
        "name: \"Set featured images in current folder\"": "name: \"在当前文件夹中设置特色图片\"",
        "name: \"Remove featured images in all files\"": "name: \"从所有文件中移除特色图片\"",
        "text: \"Note: The original modification dates of all files will be preserved.\"": "text: \"注意：所有文件的原始修改日期将被保留。\"",
        ".setButtonText(\"Cancel\")": ".setButtonText(\"取消\")",
        ".setButtonText(\"Proceed\")": ".setButtonText(\"继续\")",
        ".setName(\"Show notifications\")": ".setName(\"显示通知\")",
        ".setName(\"Excluded folders\")": ".setName(\"排除的文件夹\")",
        ".setName(\"Frontmatter\")": ".setName(\"前置事项\")",
        ".setName(\"Frontmatter property\")": ".setName(\"前置事项属性\")",
        ".setName(\"Only update if frontmatter property exists\")": ".setName(\"仅在前置事项属性存在时更新\")",
        ".setName(\"Use media links\")": ".setName(\"使用媒体链接\")",
        ".setName(\"Require exclamation mark for YouTube thumbnails\")": ".setName(\"要求 YouTube 缩略图前缀感叹号\")",
        ".setName(\"Download WebP\")": ".setName(\"下载 WebP 格式\")",
        ".setName(\"Local media\")": ".setName(\"本地媒体\")",
        ".setName(\"Thumbnail download folder\")": ".setName(\"缩略图下载文件夹\")",
        ".setName(\"Local image extensions\")": ".setName(\"本地图片扩展名\")",
        ".setName(\"Developer\")": ".setName(\"开发者\")",
        ".setName(\"Debug mode\")": ".setName(\"调试模式\")",
        ".setName(\"Dry run\")": ".setName(\"模拟运行\")",
        ".setDesc(\"Show notifications when the featured image is set, updated or removed.\")": ".setDesc(\"在设置、更新或移除特色图片时显示通知。\")",
        ".setDesc(\"Comma separated list of folders to exclude from the featured image plugin.\")": ".setDesc(\"以逗号分隔的要从特色图片插件中排除的文件夹列表。\")",
        ".setDesc(\"The name of the frontmatter property to update with the featured image\")": ".setDesc(\"要更新为特色图片的前置事项属性名称\")",
        ".setDesc(\"Enable this to only update the frontmatter property if it already exists.\")": ".setDesc(\"启用此选项仅在前置事项属性已存在时进行更新。\")",
        ".setDesc(\"Use Obsidian media links (e.g. ![[image.png]]) instead of plain text (e.g. image.png) for the featured image property.\")": ".setDesc(\"使用 Obsidian 媒体链接(例如 ![[image.png]])而不是纯文本(例如 image.png)作为特色图片属性。\")",
        ".setDesc(\"If enabled, only YouTube links prefixed with an exclamation mark will be considered for thumbnail download.\")": ".setDesc(\"如果启用,只有前缀为感叹号的 YouTube 链接才会被考虑用于缩略图下载。\")",
        ".setDesc(\"Download WebP versions of images from YouTube if available, otherwise download JPG.\")": ".setDesc(\"如果可用,下载来自 YouTube 的 WebP 版本图片,否则下载 JPG。\")",
        ".setDesc(\"YouTube thumbnails and external Auto Card Link images will be downloaded to this folder.\")": ".setDesc(\"YouTube 缩略图和外部 Auto Card Link 图片将下载到此文件夹中。\")",
        ".setDesc(\"Comma-separated list of image file extensions to search for in documents.\")": ".setDesc(\"以逗号分隔的要在文档中搜索的图片文件扩展名列表。\")",
        ".setDesc(\"Enable debug mode to log detailed information to the console.\")": ".setDesc(\"启用调试模式以记录详细的控制台信息。\")",
        ".setDesc(\"Enable dry run to prevent any changes from being made to your files.\")": ".setDesc(\"启用模拟运行以防止对文件进行任何更改。\")",
        "Log(\"Plugin loaded, debug mode:\", this.settings.debugMode, \"dry run:\", this.settings.dryRun)": "Log(\"插件加载完成,调试模式:\", this.settings.debugMode, \"模拟运行:\", this.settings.dryRun)",
        "Log(`FEATURE UPDATED\n- File: ${file.path}\n- Current feature: ${currentFeature}\n- New feature: ${newFeature}`)": "Log(`功能已更新\n- 文件: ${file.path}\n- 当前功能: ${currentFeature}\n- 新功能: ${newFeature}`)",
        "Log(\"Auto Card Link image found:\", match.groups.autoCardImage)": "Log(\"找到 Auto Card Link 图片:\", match.groups.autoCardImage)",
        "Log(\"Invalid Auto Card Link URL:\", imagePath)": "Log(\"无效的 Auto Card Link URL:\", imagePath)",
        "Log(\"Failed to generate hashed filename for:\", imagePath)": "Log(\"生成哈希文件名失败:\", imagePath)",
        "Log(\"Dry run: Skipping Auto Card Link image download, using mock path\")": "Log(\"模拟运行: 跳过 Auto Card Link 图片下载,使用模拟路径\")",
        "Log(\"Auto Card Link image already exists, skipping download\")": "Log(\"Auto Card Link 图片已存在,跳过下载\")",
        "Log(\"Unknown Content-Type for image:\", contentType)": "Log(\"未知的图片 Content-Type:\", contentType)",
        "Log(\"Failed to download Auto Card Link image, error:\", error)": "Log(\"下载 Auto Card Link 图片失败,错误:\", error)",
        "Log(\"Dry run: Skipping frontmatter update\")": "Log(\"模拟运行: 跳过前置事项更新\")",
        "Log(\"Dry run: Skipping thumbnail download, using mock path\")": "Log(\"模拟运行: 跳过缩略图下载,使用模拟路径\")",
        "Log(\"Failed to download WebP thumbnail\")": "Log(\"下载 WebP 缩略图失败\")",
        "Log(\"Failed to download maxresdefault.jpg\")": "Log(\"下载 maxresdefault.jpg 失败\")",
        "Log(\"Failed to download hqdefault.jpg:\")": "Log(\"下载 hqdefault.jpg 失败:\")",
        "Log(`Thumbnail for video ${videoId} could not be downloaded`)": "Log(`视频 ${videoId} 的缩略图无法下载`)",
        "Log(\"Invalid YouTube URL:\", url)": "Log(\"无效的 YouTube URL:\", url)",
        "Log(`Error processing file ${file.path}:`, error)": "Log(`处理文件 ${file.path} 时出错:`, error)",
        "Log(\"FEATURE REMOVED\\n- File: \", file.path)": "Log(\"功能已被移除\\n- 文件: \", file.path)",
        "\"Update all featured images\"": "\"更新所有特色图片\"",
        "\"This will scan all markdown files in your vault and update or add featured images based on the first image, YouTube link, or Auto Card Link image found in each file. Proceed?\"": "\"这将扫描您仓库中的所有 Markdown 文件,并根据每个文件中找到的第一个图片、YouTube 链接或 Auto Card Link 图片来更新或添加特色图片。继续吗？\"",
        "\"bulk update of featured images\"": "\"批量更新特色图片\"",
        "\"updating featured images\"": "\"正在更新特色图片\"",
        "\"Update folder featured images\"": "\"更新文件夹中的特色图片\"",
        "`This will scan all markdown files in \"${currentFolder}\" and its subfolders, and update or add featured images based on the first image, YouTube link, or Auto Card Link image found in each file. Proceed?`": "`这将扫描 \"${currentFolder}\" 及其子文件夹中的所有 Markdown 文件,并根据每个文件中找到的第一个图片、YouTube 链接或 Auto Card Link 图片来更新或添加特色图片。继续吗？`",
        "\"bulk update of featured images in folder\"": "\"批量更新文件夹中的特色图片\"",
        "\"Remove all featured images\"": "\"移除所有特色图片\"",
        "`This will remove the \"${this.settings.frontmatterProperty}\" property from the frontmatter of all markdown files in your vault. Proceed?`": "`这将从您仓库中所有 Markdown 文件的前置事项中移除 \"${this.settings.frontmatterProperty}\" 属性。继续吗？`",
        "`Processed ${i + 1} of ${totalFiles} files. Updated ${updatedCount} featured images${errorCount > 0 ? `. Errors: ${errorCount}` : \"\"}`": "`已处理 ${i + 1} 个文件,共 ${totalFiles} 个。更新了 ${updatedCount} 个特色图片${errorCount > 0 ? `. 错误: ${errorCount}` : \"\"}`",
        "`Finished ${this.settings.dryRun ? \"dry run of \" : \"\"}${progressText}. Updated: ${updatedCount} files${errorCount > 0 ? `. Errors: ${errorCount}` : \"\"}`": "`完成 ${this.settings.dryRun ? \"模拟运行 \" : \"\"}${progressText}。更新了 ${updatedCount} 个文件${errorCount > 0 ? `. 错误: ${errorCount}` : \"\"}`"
    }
}