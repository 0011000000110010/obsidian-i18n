{
    "manifest": {
        "translationVersion": 1730799385649,
        "pluginVersion": "3.2.0"
    },
    "description": {
        "original": "This plugin provides advanced auto-completion functionality for LaTeX, Frontmatter and standard writing.",
        "translation": "此插件为LaTeX、Frontmatter和标准写作提供了高级自动补全功能。"
    },
    "dict": {
        "Notice(\"Failed to parse latex commands file \" + path + \". Using default commands.\", 3e3)": "Notice(\"无法解析latex命令文件 \" + path + \". 使用默认命令.\", 3e3)",
        "Notice(`${e.message}. Using default callout types.`, 3e3)": "Notice(`${e.message}. 使用默认的提示类型.`, 3e3)",
        "Notice(\"Unable to import \" + file.name + \" because it already exists!\")": "Notice(\"无法导入 \" + file.name + \" 因为它已经存在!\")",
        "Notice(\"Error while importing \" + file.name)": "Notice(\"导入 \" + file.name + \" 时出错\")",
        "Notice(`Loaded ${count} words`)": "Notice(`已加载 ${count} 个单词`) ",
        ".log(prober.getCharsetName() + \" not active\\n\")": ".log(prober.getCharsetName() + \" 未激活\\n\")",
        ".log(prober.getCharsetName() + \" confidence = \" + cf + \"\\n\")": ".log(prober.getCharsetName() + \" 置信度 = \" + cf + \"\\n\")",
        ".log(this.getCharsetName() + \" prober hit error at byte \" + i + \"\\n\")": ".log(this.getCharsetName() + \" 探测器在字节 \" + i + \" 处出错\\n\")",
        ".log(this._mModel.charsetName + \" confidence = \" + cf + \", we have a winner\\n\")": ".log(this._mModel.charsetName + \" 置信度 = \" + cf + \", 我们有一个赢家\\n\")",
        ".log(this._mModel.charsetName + \" confidence = \" + cf + \", below negative shortcut threshhold \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\")": ".log(this._mModel.charsetName + \" 置信度 = \" + cf + \", 低于负快捷阈值 \" + NEGATIVE_SHORTCUT_THRESHOLD + \"\\n\")",
        ".log(\"no data received!\\n\")": ".log(\"未接收到数据！\\n\")",
        ".log(\"pure ascii\")": ".log(\"纯 ASCII\")",
        ".log(prober.getCharsetName() + \" confidence \" + prober.getConfidence())": ".log(prober.getCharsetName() + \" 置信度 \" + prober.getConfidence())",
        ".log(\"no probers hit minimum threshhold\\n\")": ".log(\"没有探测器达到最小阈值\\n\")",
        ".log(prober.getCharsetName() + \" confidence = \" + prober.getConfidence() + \"\\n\")": ".log(prober.getCharsetName() + \" 置信度 = \" + prober.getConfidence() + \"\\n\")",
        ".log(\"Completr: No colors left for snippet, using random color\")": ".log(\"Completr: 剩余颜色不足以用于代码片段，使用随机颜色\")",
        ".log(\"Completr latex commands parse error:\", e.message)": ".log(\"Completr latex命令解析错误:\", e.message)",
        ".log(\"Completr: Unable to read \" + fileName)": ".log(\"Completr: 无法读取 \" + fileName)",
        ".log(\"Completr callout types parse error:\", e.message)": ".log(\"Completr 提示类型解析错误:\", e.message)",
        ".log(\"Completr: Please enable Live Preview mode to use snippets\")": ".log(\"Completr: 请启用实时预览模式以使用代码片段\")",
        ".log(\"Completr: Without Live Preview enabled, most features of Completr will not work properly!\")": ".log(\"Completr: 如果未启用实时预览，Completr的大多数功能将无法正常工作!\")",
        "name: \"Open suggestion popup\"": "name: \"打开建议弹窗\"",
        "name: \"Select next suggestion\"": "name: \"选择下一个建议\"",
        "name: \"Select previous suggestion\"": "name: \"选择上一个建议\"",
        "name: \"Insert selected suggestion\"": "name: \"插入所选建议\"",
        "name: \"Bypass the popup and press Enter\"": "name: \"绕过弹窗并按回车\"",
        "name: \"Bypass the popup and press Tab\"": "name: \"绕过弹窗并按Tab\"",
        "name: \"Add the currently selected word to the blacklist\"": "name: \"将当前选定的单词添加到黑名单\"",
        "name: \"Close suggestion popup\"": "name: \"关闭建议弹窗\"",
        "name: \"Jump to next snippet placeholder\"": "name: \"跳到下一个代码片段占位符\"",
        "name: \"(internal)\"": "name: \"(内部)\"",
        ".setButtonText(\"Scan\")": ".setButtonText(\"扫描\")",
        ".setButtonText(\"Delete\")": ".setButtonText(\"删除\")",
        ".setButtonText(\"Cancel\")": ".setButtonText(\"取消\")",
        ".setName(\"Word character regex\")": ".setName(\"单词字符正则表达式\")",
        ".setName(\"Auto focus\")": ".setName(\"自动聚焦\")",
        ".setName(\"Auto trigger\")": ".setName(\"自动触发\")",
        ".setName(\"Minimum word length\")": ".setName(\"最小单词长度\")",
        ".setName(\"Minimum word trigger length\")": ".setName(\"最小单词触发长度\")",
        ".setName(\"Word insertion mode\")": ".setName(\"单词插入模式\")",
        ".setName(\"Ignore diacritics when filtering\")": ".setName(\"过滤时忽略变音符号\")",
        ".setName(\"Latex provider\")": ".setName(\"LaTeX 提供者\")",
        ".setName(\"Trigger in code blocks\")": ".setName(\"在代码块中触发\")",
        ".setName(\"Ignore case\")": ".setName(\"忽略大小写\")",
        ".setName(\"Front matter provider\")": ".setName(\"前置信息提供者\")",
        ".setName(\"Add suffix to tag completion\")": ".setName(\"为标签补全添加后缀\")",
        ".setName(\"File scanner provider\")": ".setName(\"文件扫描器提供者\")",
        ".setName(\"Scan active file\")": ".setName(\"扫描当前文件\")",
        ".setName(\"Word list provider\")": ".setName(\"单词列表提供者\")",
        ".setName(\"Word list files\")": ".setName(\"单词列表文件\")",
        ".setName(\"Callout provider\")": ".setName(\"提示提供者\")",
        ".setName(\"Source\")": ".setName(\"来源\")",
        ".setName(\"Enabled\")": ".setName(\"启用\")",
        ".setDesc(\"A regular expression which matches a character of a word. Used by during completion to find the word to the left of the cursor and used by the file scanner to find valid words.\")": ".setDesc(\"一个匹配单词字符的正则表达式。在补全时用于查找光标左侧的单词，文件扫描器用于查找有效单词。\")",
        ".setDesc(\"Whether the popup is automatically focused once it opens.\")": ".setDesc(\"弹窗打开后是否自动聚焦。\")",
        ".setDesc(\"Whether the popup opens automatically when typing.\")": ".setDesc(\"输入时弹窗是否自动打开。\")",
        ".setDesc(\"The minimum length a word has to be, to count as a valid suggestion. This value is used by the file scanner and word list provider.\")": ".setDesc(\"单词必须达到的最小长度才能算作有效建议。该值由文件扫描器和单词列表提供者使用。\")",
        ".setDesc(\"The minimum length a word has to be, to trigger suggestions. The LaTeX provider has its own separate setting.\")": ".setDesc(\"单词必须达到的最小长度才能触发建议。LaTeX 提供者有自己单独的设置。\")",
        ".setDesc(\"The insertion mode that is used. Ignore-case would suggest 'Hello' if the typed text is 'hello', match-case would not. Append would complete 'Hell' with 'Hello' while replace would complete it with 'hello' instead (if only 'hello' was a known word). Only used by the file scanner and word list provider.\")": ".setDesc(\"使用的插入模式。如果是忽略大小写，则输入 'hello' 会建议 'Hello'，匹配大小写则不会。追加模式会将 'Hell' 补全为 'Hello'，而替换模式则会补全为 'hello'（如果 'hello' 是已知单词）。仅由文件扫描器和单词列表提供者使用。\")",
        ".setDesc(\"When enabled, the query 'Hello' can suggest 'H\\xE8ll\\xF2', meaning diacritics will be ignored when filtering the suggestions. Only used by the file scanner and word list provider.\")": ".setDesc(\"启用时，查询 'Hello' 可以建议 'H\\xE8ll\\xF2'，这意味着过滤建议时将忽略变音符号。仅由文件扫描器和单词列表提供者使用。\")",
        ".setDesc(\"Whether the LaTeX provider should trigger after dollar signs which are enclosed in code blocks (for example ```$\\\\fr```).\")": ".setDesc(\"LaTeX 提供者是否应在被包含在代码块中的美元符号后触发（例如 ```$\\\\fr``）。\")",
        ".setDesc(\"Whether the LaTeX provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")": ".setDesc(\"LaTeX 提供者是否应忽略输入文本的大小写。如果是，输入 'MaThbb' 可能会建议 'mathbb'。\")",
        ".setDesc(\"The minimum length a query has to be, to trigger suggestions.\")": ".setDesc(\"查询必须达到的最小长度才能触发建议。\")",
        ".setDesc(\"Whether the Front matter provider should ignore the casing of the typed text. If so, the input 'MaThbb' could suggest 'mathbb'.\")": ".setDesc(\"前置信息提供者是否应忽略输入文本的大小写。如果是，输入 'MaThbb' 可能会建议 'mathbb'。\")",
        ".setDesc(\"Whether each completed tag should be suffixed with a comma or a newline (when typing in a multi-line list). Allows faster insertion of multiple tags.\")": ".setDesc(\"每个已完成的标签是否应以逗号或换行符为后缀（在多行列表中输入时）。允许更快地插入多个标签。\")",
        ".setDesc(\"If this setting is enabled, the currently opened file will be scanned to find new words.\")": ".setDesc(\"如果启用此设置，当前打开的文件将被扫描以查找新单词。\")",
        ".setDesc(\"A list of files which contain words to be used as suggestions. Each word should be on its own line.\")": ".setDesc(\"包含用于建议的单词的文件列表。每个单词应在单独的一行上。\")",
        ".setDesc(\"Where callout suggestions come from.\")": ".setDesc(\"提示建议的来源。\")",
        ".setTooltip(\"Obsidian Front-Matter wiki\")": ".setTooltip(\"Obsidian 前置信息 wiki\")",
        ".setTooltip(\"Immediately scan all .md files currently in your vault.\")": ".setTooltip(\"立即扫描当前保险库中的所有 .md 文件。\")",
        ".setTooltip(\"Delete all known words.\")": ".setTooltip(\"删除所有已知单词。\")",
        ".setTooltip(\"Reload\")": ".setTooltip(\"重新加载\")",
        ".setTooltip(\"Remove\")": ".setTooltip(\"移除\")",
        "Error(\"Display name cannot contain a newline: \" + invalidCommand.displayName);": "Error(\"显示名称不能包含换行符: \" + invalidCommand.displayName);",
        "Error(\"Display name cannot contain a newline: \" + invalidsuggestion.displayName);": "Error(\"显示名称不能包含换行符: \" + invalidsuggestion.displayName);",
        "Error(`Failed to parse file ${file}.`);": "Error(`无法解析文件 ${file}。`);",
        "Error(`Invalid suggestions file ${file}: JSON root must be array.`);": "Error(`无效的建议文件 ${file}:JSON 根必须是数组。`);",
        "Whether or not the latex provider is enabled": "是否启用LaTeX提供者",
        "Whether the front matter provider is enabled": "是否启用前置数据提供者",
        "Whether or not the file scanner provider is enabled.": "是否启用文件扫描提供者。",
        "Whether or not the word list provider is enabled": "是否启用词汇列表提供者",
        "Whether or not the callout provider is enabled": "是否启用标注提供者",
        "Start scanning?": "开始扫描吗？",
        "Depending on the size of your vault and computer, this may take a while.": "根据你的存储库和计算机的大小，这可能需要一段时间。",
        "Delete all known words?": "删除所有已知词汇吗？",
        "This will delete all words that have been scanned. No suggestions from this provider will show up anymore until new files are scanned.": "这将删除所有已扫描的词汇。此提供者将不再显示任何建议，直到扫描新文件。",
        "\"Delete \" + name + \"?\"": "\"删除 \" + name + \"吗？\"",
        "The file will be removed and the words inside of it won't show up as suggestions anymore.": "该文件将被移除，里面的词汇将不再显示为建议。"
    }
}