{
    "manifest": {
        "author": "zero",
        "version": "1.0.0"
    },
    "dict": {
        "createElement(\"h2\", null, \"Copilot Settings\")":"createElement(\"h2\", null, \"Copilot 设置\")",
        "\"Save and Reload\"":"\"保存并重新加载\"",
        "Reset to Default Settings":"重置为默认设置",
        "Please Save and Reload the plugin when you change any setting below!":"更改以下任何设置时，请保存并重新加载插件！",
        "name: \"Default Model\"":"name: \"默认模式\"",
        "name: \"Default Conversation Folder Name\"":"name: \"默认对话文件夹名称\"",
        "description: \"The default folder name where chat conversations will be saved. Default is 'copilot-conversations'\"":"description: \"保存聊天对话的默认文件夹名称。默认为 'copilot-conversations'\"",
        "Please be mindful of the number of tokens and context conversation turns you set here, as they will affect the cost of your API requests.":"请注意您在此处设置的令牌数和上下文对话轮数，因为它们将影响您的API请求的成本。",
        "name: \"Temperature\"":"name: \"温度系数\"",
        "description: \"Default is 0.1. Higher values will result in more creativeness, but also more mistakes. Set to 0 for no randomness.\"":"description: \"默认值是0.1。更高的值将导致更有创造性，但也可能导致更多错误。设置为0则无随机性。\"",
        "name: \"Token limit\"":"name: \"令牌限制\"",
        "The maximum number of ":"生成的最大",
        "output tokens":"输出令牌",
        " to generate. Default is 1000.":"数量。默认值为1000。",
        ".createElement(\"em\", null, \"This number plus the length of your prompt (input tokens) must be smaller than the context window of the model.\"))":".createElement(\"em\", null, \"此数字加上您的提示（输入令牌）的长度必须小于模型的上下文窗口。\"))",
        "name: \"Conversation turns in context\"":"name: \"上下文对话轮数\"",
        "description: \"The number of previous conversation turns to include in the context. Default is 15 turns, i.e. 30 messages.\"":"description: \"要包含在上下文中的先前对话轮数。默认是15轮，即30条消息。\"",
        
        "\"API Settings\"":"\"API 设置\"",
        "All your API keys are stored locally.":"您的所有API密钥都存储在本地。",
        "Make sure you have access to the model and the correct API key.":"请确保您有权访问模型和正确的API密钥。",
        "If errors occur, please re-enter the API key, save and reload the plugin to see if it resolves the issue.":"如果出现错误，请重新输入API密钥，保存并重新加载插件，看看它是否解决了问题。",
        "title: \"OpenAI API Key\"":"title: \"OpenAI API 密钥\"",
        "Enter OpenAI API Key":"输入 OpenAI API 密钥",
        "You can find your API key at":"您可以在以下位置找到您的API密钥",
        "If you are a new user, try":"如果您是新用户，请尝试",
        "to see if you have correct API access first.":"查看您是否首先拥有正确的API访问权限。",
        "Google API Settings": "Google API 设置",
        "title: \"Google API Key\"":"title: \"Google API 密钥\"",
        "Enter Google API Key":"输入 Google API 密钥",
        "If you have Google Cloud, you can get Gemini API key ":"如果您有Google Cloud，则可以获取Gemini API密钥",
        "Your API key is stored locally and is only used to make requests to Google's services.":"您的API密钥存储在本地，仅用于向Google的服务发出请求。",
        "OpenRouter.ai API Settings":"OpenRouter.ai API 设置",
        "title: \"OpenRouter AI API Key\"":"title: \"OpenRouter AI API 密钥\"",
        "Enter OpenRouter API Key":"输入 OpenRouter API 密钥",
        "title: \"OpenRouter Model\"":"title: \"OpenRouter 模型\"",
        "You can get your OpenRouterAI key ":"您可以获取您的OpenRouterAI密钥",
        "Find models":"查找模型",
        "Azure OpenAI API Settings":"Azure OpenAI API 设置",
        "title: \"Azure OpenAI API Key\"":"title: \"Azure OpenAI API 密钥\"",
        "Enter Azure OpenAI API Key":"输入 Azure OpenAI API 密钥",
        "title: \"Azure OpenAI API Instance Name\"":"title: \"Azure OpenAI API 实例名称\"",
        "Enter Azure OpenAI API Instance Name":"输入 Azure OpenAI API 实例名称",
        "title: \"Azure OpenAI API Deployment Name\"":"title: \"Azure OpenAI API 部署名称\"",
        "This is your actual model, no need to pass a model name separately.":"这是您的实际模型，无需单独传递模型名称。",
        "Enter Azure OpenAI API Deployment Name":"输入 Azure OpenAI API 部署名称",
        "title: \"Azure OpenAI API Version\"":"title: \"Azure OpenAI API 版本\"",
        "Enter Azure OpenAI API Version":"输入 Azure OpenAI API 版本",
        "title: \"Azure OpenAI API Embedding Deployment Name\"":"title: \"Azure OpenAI API 嵌入部署名称\"",
        "(Optional) For embedding provider Azure OpenAI":"（可选）对于嵌入提供程序Azure OpenAI",
        "Enter Azure OpenAI API Embedding Deployment Name":"输入 Azure OpenAI API 嵌入部署名称",

        "QA Settings": "QA 设置",
        "YOU MUST REBUILD YOUR INDEX AFTER SWITCHING EMBEDDING PROVIDERS!":"切换嵌入提供程序后，必须重新生成索引！",
        "QA mode relies a ":"QA模式依赖于", 
        "vector index (experimental)":"向量索引（实验性）", 
        "OpenAI embeddings currently has the best retrieval quality. CohereAI embeddings are free during trial and are decent. With Huggingface Inference API, your mileage may vary.":"目前OpenAI嵌入的检索质量最好。在试用期间，CohereAI嵌入是免费的，并且还不错。使用Huggingface推理API时，结果可能会有所不同。", 
        "Embedding Provider":"嵌入提供程序", 
        "The embedding API to call":"要调用的嵌入API", 
        "OpenAI Embedding Model":"OpenAI嵌入模型", 
        "(for when embedding provider is OpenAI)":"（当嵌入提供程序为OpenAI时）", 
        "TTL Days":"TTL天数", 
        "The number of days to keep embeddings in the index":"在索引中保留嵌入的天数", 
        "Cohere API Settings":"Cohere API 设置",
        "Cohere API Key":"Cohere API密钥",
        "Enter Cohere API Key":"输入Cohere API密钥",
        "Get your free Cohere API key":"获取您的免费Cohere API密钥",
        "Huggingface Inference API Settings":"Huggingface Inference API 设置",
        "Huggingface Inference API Key":"Huggingface Inference API 密钥",
        "Enter Huggingface Inference API key":"输入Huggingface Inference API 密钥",
        "Get your Huggingface Inference API key":"获取您的Huggingface Inference API密钥",

        "Advanced Settings":"高级选项",
        "OpenAI Proxy settings override the default OpenAI parameters, meaning now your OpenAI models are routed to this provider instead! Clear these fields to use OpenAI again.":"OpenAI代理设置覆盖默认的OpenAI参数，这意味着现在您的OpenAI模型被路由到此提供商！清除这些字段以再次使用OpenAI。",
        "OpenAI Proxy Base URL":"OpenAI代理基础URL",
        "For providers that share the same API as OpenAI.":"对于与OpenAI使用相同API的提供商。",
        "OpenAI Proxy Model Name":"OpenAI代理模型名称",
        "The actual model name you want to use with your provider. Overrides the OpenAI model name you pick in the Copilot Chat model selection. Note: non-OpenAI models picked will not be overridden!":"您希望与提供商一起使用的实际模型名称。这会覆盖您在Copilot Chat模型选择中选择的OpenAI模型名称。注意：选择的非OpenAI模型将不会被覆盖！",
        "OpenAI Embedding Proxy Base URL":"OpenAI嵌入代理基础URL",
        "For embedding providers that share the same API as OpenAI.":"对于与OpenAI使用相同API的嵌入提供商。",
        "OpenAI Embedding Proxy Model Name":"OpenAI嵌入代理模型名称",
        "The actual embedding model name you want to use with your provider. Overrides the OpenAI embedding model name you pick above. Note: non-OpenAI models picked will not be overridden!":"您希望与提供商一起使用的实际嵌入模型名称。这会覆盖您在上面选择的OpenAI嵌入模型名称。注意：选择的非OpenAI模型将不会被覆盖！",
        "User System Prompt":"用户系统提示",
        "Warning: It will override the default system prompt for all messages!":"警告：这将覆盖所有消息的默认系统提示！",
        "Enter your custom system prompt here":"在此处输入您的自定义系统提示",
        
        "Local Copilot (No Internet Required!)":"本地Copilot（无需互联网！）",
        "Please check the doc to set up LM Studio or Ollama server on your device.":"请检查文档以在您的设备上设置LM Studio或Ollama服务器。",
        "Local models can be limited in capabilities and may not work for some use cases at this time. Keep in mind that it is still in early experimental phase. But some 13B even 7B models are already quite capable!":"本地模型的功能可能有所限制，并且目前可能不适用于某些用例。请记住，它仍处于早期实验阶段。但是，一些13B甚至7B的模型已经相当有能力了！",
        "To use Local Copilot with LM Studio:":"要在LM Studio中使用本地Copilot：",
        "1. Start LM Studio server with CORS on. Default port is 1234 but if you change it, you can provide it below.":"1. 启动带有CORS的LM Studio服务器。默认端口是1234，但如果您更改了端口，可以在下面提供。",
        "2. Pick LM Studio in the Copilot Chat model selection dropdown to chat with it!":"2. 在Copilot Chat模型选择下拉菜单中选择LM Studio与其聊天！",
        "LM Studio Server Base URL":"LM Studio服务器基础URL：",
        "To use Local Copilot with Ollama, pick Ollama in the Copilot Chat model selection dropdown.":"要在Ollama中使用本地Copilot，请在Copilot Chat模型选择下拉菜单中选择Ollama。",
        "Run the local Ollama server by running this in your terminal:":"通过在终端中运行以下命令来运行本地Ollama服务器：",
        "Ollama model":"Ollama模型",
        "Default is llama2 (7b).":"默认是llama2（7b）",
        "Ollama Base URL":"Ollama基础URL",
        "Default is http://localhost:11434. If you'd like to use a remote server, provide the URL here.":"默认是http://localhost:11434。如果您想使用远程服务器，请在此处提供URL。",
        
        ".createEl(\"h1\", { text: \"Additional Settings\" })": ".createEl(\"h1\", { text: \"附加设置\" })",
        ".setName(\"Enable Encryption\")": ".setName(\"启用加密\")",
        ".appendText(\"Enable encryption for the API keys.\")": ".appendText(\"启用 API 密钥加密。\")",
        ".setName(\"Debug mode\")": ".setName(\"调试模式\")",
        ".appendText(\"Debug mode will log all API requests and prompts to the console.\")": ".appendText(\"调试模式会将所有 API 请求和提示记录到控制台。\")",

        "(\"span\", { className: \"tooltip-text\" }, \"Stop Generating\"))":"(\"span\", { className: \"tooltip-text\" }, \"停止生成\"))",
        "(\"span\", { className: \"tooltip-text\" }, \"New Chat\"":"(\"span\", { className: \"tooltip-text\" }, \"新建对话\"",
        "(\"span\", { className: \"tooltip-text\" }, \"Save as Note\"))":"(\"span\", { className: \"tooltip-text\" }, \"保存为笔记\"))",
        "Send Note(s) to Prompt":"将笔记发送到提示",
        "(Set with Copilot command: ":"(使用Copilot命令设置：",
        "set note context ":"设置笔记上下文",
        "in Chat mode.":"在聊天模式下",
        "Default is active note)":"默认是当前活动笔记)",
        "Model Selection":"模型选择",
        "(unsaved history will be lost)":"（未保存的历史记录将丢失）",
        "Enter your message here...":"在这里输入您的消息…",
        ".createElement(\"button\", { onClick: handleSendMessage }, \"Send\"))":".createElement(\"button\", { onClick: handleSendMessage }, \"发送\"))",

        "Notice(`Error creating model: ${modelDisplayName}`)": "Notice(`创建模型出错: ${modelDisplayName}`)",
        "Notice(\"Error creating chain:\", error)": "Notice(\"创建链时出错:\", error)",
        "Notice(\"No note content provided\")": "Notice(\"未提供说明内容\")",
        "Notice(`LangChain error: ${errorCode}`)": "Notice(`语言链错误: ${errorCode}`)",
        "Notice(\"Vector store created successfully.\")": "Notice(\"成功创建矢量存储。\")",
        "Notice(\"Failed to create vector store, please try again:\", error)": "Notice(\"创建矢量存储失败,请重试:\", error)",
        "Notice(\"Please fill in both fields: Title and Prompt.\")": "Notice(\"请填写两个字段: 标题和提示。\")",
        "Notice(\"No active note found.\")": "Notice(\"未找到有效注释.\")",
        "Notice(\n          `Warning: No valid notes found for the provided path '${variableName}'.`\n        )": "Notice(\n`警告: 所提供路径未找到有效注释 '${variableName}'。`\n)",
        "Notice(\"Model request failed:\", error)": "Notice(\"模型请求失败:\", error)",
        "Notice(\"No valid Chat context provided. Defaulting to the active note.\")": "Notice(\"未提供有效的聊天上下文。默认为活动备注。\")",
        "Notice(\"No note content found.\")": "Notice(\"未找到注释内容.\")",
        "Notice(\"Settings have been saved and the plugin has been reloaded.\")": "Notice(\"已保存设置并重新加载插件。\")",
        "Notice(\"Settings have been reset to their default values.\")": "Notice(\"设置已重置为默认值。\")",
        "Notice(\"Plugin reloaded successfully.\")": "Notice(\"插件重新加载成功。\")",
        "Notice(\"Failed to reload the plugin. Please reload manually.\")": "Notice(\"重新加载插件失败。请手动重新加载。\")",
        "Notice(\"Please select a language.\")": "Notice(\"请选择语言。\")",
        "Notice(\"Please select a tone.\")": "Notice(\"请选择音调。\")",
        "Notice(\"Custom prompt saved successfully.\")": "Notice(\"自定义提示已成功保存。\")",
        "Notice(\"Error saving custom prompt. Please check if the title already exists.\")": "Notice(\"保存自定义提示出错。请检查标题是否已存在。\")",
        "Notice(\"Please select a prompt title.\")": "Notice(\"请选择提示标题。\")",
        "Notice(`No prompt found with the title \"${promptTitle}\".`)": "Notice(`未找到标题提示 \"${promptTitle}\".`)",
        "Notice(\"An error occurred.\")": "Notice(\"出现错误。\")",
        "Notice(`Prompt \"${promptTitle}\" has been deleted.`)": "Notice(`提示 \"${promptTitle}\" 已被删除。`)",
        "Notice(`Failed to delete prompt \"${promptTitle}\": No revision found.`)": "Notice(`删除提示失败 \"${promptTitle}\": 未找到修订版。`)",
        "Notice(\"An error occurred while deleting the prompt.\")": "Notice(\"删除提示时发生错误。\")",
        "Notice(`Prompt \"${title}\" has been updated.`)": "Notice(`提示 \"${title}\" 已更新。`)",
        "Notice(\"Local vector store cleared successfully.\")": "Notice(\"本地矢量存储已成功清除。\")",
        "Notice(\"An error occurred while clearing the local vector store.\")": "Notice(\"清除本地矢量存储时发生错误。\")",
        ".appendText(\"Tip: turn on debug mode to show the processed prompt in the chat window.\")": ".appendText(\"提示：打开调试模式，在聊天窗口中显示已处理的提示。\")",
        ".appendText(\"Save the prompt to the local prompt library. You can then use it with the Copilot command: \")": ".appendText(\"将提示保存到本地提示库。然后就可以在 Copilot 命令中使用它了： \")",
        ".appendText(\"Check out the \")": ".appendText(\"查看\")",
        ".appendText(\" for inspiration.\")": ".appendText(\"灵感\")",
        ".appendText(\"All notes under the path will be sent to the prompt when the \")": ".appendText(\"当时，该路径下的所有笔记都会被发送到提示符。\")",
        ".appendText(\" button is clicked in Chat mode. \")": ".appendText(\"在聊天模式下单击按钮。\")",
        ".appendText(\"If none provided, \")": ".appendText(\"如果没有提供，\")",
        ".appendText(\" any note that matches one of the tags will be sent to the prompt when button is clicked in Chat mode.\")": ".appendText(\"在聊天模式下单击按钮时，任何与其中一个标签匹配的注释都将发送到提示。\")",
        ".createEl(\"h2\", { text: \"User Custom Prompt\" })": ".createEl(\"h2\", { text: \"用户自定义提示\" })",
        ".createEl(\n      \"h3\",\n      { text: \"Title\", cls: \"copilot-command-header\" }\n    )": ".createEl(\n      \"h3\",\n      { text: \"标题\", cls: \"copilot-command-header\" }\n    )",
        ".createEl(\n      \"p\",\n      {\n        text: \"The title of the prompt, must be unique.\",\n        cls: \"copilot-command-input-description\"\n      }\n    )": ".createEl(\n      \"p\",\n      {\n        text: \"提示的标题必须是唯一的。\",\n        cls: \"copilot-command-input-description\"\n      }\n    )",
        ".createEl(\n      \"h3\",\n      { text: \"Prompt\", cls: \"copilot-command-header\" }\n    )": ".createEl(\n      \"h3\",\n      { text: \"提示\", cls: \"copilot-command-header\" }\n    )",
        ".createEl(\n        \"strong\",\n        { text: \"- {} represents the selected text (not required)": ".createEl(\n        \"strong\",\n        { text: \"- {} 代表所选文本（非必填）",
        ".createEl(\n        \"strong\",\n        { text: \"- {[[Note Title]]} represents a note. \" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"- {[[Note Title]]} 代表一个注释。 \" }\n      )",
        ".createEl(\n        \"strong\",\n        { text: \"- {FolderPath} represents a folder of notes. \" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"- {FolderPath} 代表一个笔记文件夹。 \" }\n      )",
        ".createEl(\"textarea\")": ".createEl(\"文本区域\")",
        ".createEl(\n        \"strong\",\n        { text: \"Apply custom prompt to selection.\" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"对选择应用自定义提示。\" }\n      )",
        ".createEl(\"a\", {\n        href: \"https://github.com/f/awesome-chatgpt-prompts\",\n        text: \"awesome chatGPT prompts\"\n      })": ".createEl(\"a\", {\n        href: \"https://github.com/f/awesome-chatgpt-prompts\",\n        text: \"chatGPT 提示\"\n      })",
        ".createEl(\n      \"button\",\n      { text: \"Save\", cls: \"copilot-command-save-btn\" }\n    )": ".createEl(\n      \"button\",\n      { text: \"保存\", cls: \"copilot-command-save-btn\" }\n    )",
        ".createEl(\"h3\", { text: \"Filter by Folder Path\", cls: \"copilot-command-header\" })": ".createEl(\"h3\", { text: \"按文件夹路径筛选\", cls: \"copilot-command-header\" })",
        ".createEl(\n        \"strong\",\n        { text: \"default context is the active note\" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"默认上下文为活动注释\" }\n      )",
        ".createEl(\"h3\", { text: \"Filter by Tags\", cls: \"copilot-command-header\" })": ".createEl(\"h3\", { text: \"按标签筛选\", cls: \"copilot-command-header\" })",
        ".createEl(\n        \"strong\",\n        { text: \"Only tags in note property are used, tags in note content are not used.\" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"只使用注释属性中的标记，不使用注释内容中的标记。\" }\n      )",
        ".createEl(\"p\", { text: \"All notes under the path above are further filtered by the specified tags. If no path is provided, only tags are used. Multiple tags should be separated by commas. \" })": ".createEl(\"p\", { text: \"上述路径下的所有笔记都会根据指定的标记进一步筛选。如果没有提供路径，则只使用标记。多个标记应用逗号分隔。\" })",
        ".createEl(\n        \"strong\",\n        { text: \"Tags function as an OR filter, \" }\n      )": ".createEl(\n        \"strong\",\n        { text: \"标签具有 OR 过滤器的功能、\" }\n      )",
        ".createEl(\"button\", { text: \"Submit\", cls: \"copilot-command-save-btn\" })": ".createEl(\"button\", { text: \"提交\", cls: \"copilot-command-save-btn\" })"
        
    }
}