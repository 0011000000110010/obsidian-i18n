{
    "manifest": {
        "author": "Fendi",
        "version": "1.0.0"
    },
    "dict": {
        "throw new Error(\"Invalid string. Length must be a multiple of 4\");": "throw new Error(\"无效字符串，长度必须是4的倍数。\");",
        "console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");": "console.error(\"这个浏览器缺乏对类型化数组（Uint8Array）的支持，这是`buffer`v5.x所要求的。如果你需要旧的浏览器支持，请使用`buffer`v4.x。\");",
        "throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');": "throw new RangeError('选项\"size\"的值\"' + length + '\"无效');",
        "throw new TypeError('The \"string\" argument must be of type string. Received type number');": "throw new TypeError('参数 \"string \"必须是字符串类型，接收的类型为数字。');",
        "throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value);": "throw new TypeError(\"第一个参数必须是字符串、Buffer、ArrayBuffer、Array或类Array对象的类型。接收的类型 \" + typeof value);",
        "throw new TypeError('The \"value\" argument must not be of type number. Received type number');": "throw new TypeError('参数 \"value \"不能是数字类型。接收的类型为数字');",
        "throw new RangeError('\"offset\" is outside of buffer bounds');": "throw new RangeError('\"偏移量 \"超出了缓冲区的范围');",
        "throw new RangeError('\"length\" is outside of buffer bounds');": "throw new RangeError('\"长度 \"超出了缓冲区范围');",
        "type: \"file\",": "type: \" 份文件\",",
        "isFile: () => stat.type === \"file\",": "isFile: () => stat.type === \" 份文件\",",
        "const commands = [\"reset\"];": "const commands = [\"重置\"];",
        "excludeOptions2[excludeOptions2[\"file\"] = 4] = \"file\";": "excludeOptions2[excludeOptions2[\" 份文件\"] = 4] = \" 份文件\";",
        "} else if (this.plugin.settings.syncMethod === \"reset\") {": "} else if (this.plugin.settings.syncMethod === \"重置\") {",
        "const commitOrBackup = plugin.settings.differentIntervalCommitAndPush ? \"commit\" : \"backup\";": "const commitOrBackup = plugin.settings.differentIntervalCommitAndPush ? \"commit\" : \"备份\";",
        "containerEl.createEl(\"h2\", { text: \"Git Backup settings\" });": "containerEl.createEl(\"h2\", { text: \"Git 备份设置\" });",
        "containerEl.createEl(\"p\", { text: \"Git is not ready. When all settings are correct you can configure auto backup, etc.\" });": "containerEl.createEl(\"p\", { text: \"Git 还没有准备好，当所有设置都正确时，你可以配置自动备份等功能。\" });",
        "containerEl.createEl(\"h3\", { text: \"Automatic\" });": "containerEl.createEl(\"h3\", { text: \"自动化\" });",
        "new import_obsidian7.Setting(containerEl).setName(\"Split automatic commit and push\").setDesc(\"Enable to use separate timer for commit and push\").addToggle((toggle) => toggle.setValue(plugin.settings.differentIntervalCommitAndPush).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"分别自动提交和推送\").setDesc(\"启用提交和推送的不同时段计划任务\").addToggle((toggle) => toggle.setValue(plugin.settings.differentIntervalCommitAndPush).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(`Vault ${commitOrBackup} interval (minutes)`).setDesc(`${plugin.settings.differentIntervalCommitAndPush ? \"Commit\" : \"Commit and push\"} changes every X minutes. Set to 0 (default) to disable. (See below setting for further configuration!)`).addText((text2) => text2.setValue(String(plugin.settings.autoSaveInterval)).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(`存储库 ${commitOrBackup} 间隔时间（分钟）`).setDesc(`${plugin.settings.differentIntervalCommitAndPush ? \"提交\" : \"提交并推送\"} 每隔 X 分钟进行一次。设为0（默认值）则禁用。(请参阅下面的设置以获取更多配置！)`).addText((text2) => text2.setValue(String(plugin.settings.autoSaveInterval)).onChange((value) => {",
        "new import_obsidian7.Notice(`Automatic ${commitOrBackup} enabled! Every ${plugin.settings.autoSaveInterval} minutes.`);": "new import_obsidian7.Notice(`自动${commitOrBackup}已启用！每隔${plugin.settings.autoSaveInterval}分钟。`);",
        "plugin.clearAutoBackup() && new import_obsidian7.Notice(`Automatic ${commitOrBackup} disabled!`);": "plugin.clearAutoBackup() && new import_obsidian7.Notice(`自动${commitOrBackup}已禁用！`);",
        "new import_obsidian7.Notice(\"Please specify a valid number.\");": "new import_obsidian7.Notice(\"请指定一个有效的数字\");",
        "new import_obsidian7.Setting(containerEl).setName(`If turned on, do auto ${commitOrBackup} every X minutes after last change. Prevents auto ${commitOrBackup} while editing a file. If turned off, do auto ${commitOrBackup} every X minutes. It's independent from last change.`).addToggle((toggle) => toggle.setValue(plugin.settings.autoBackupAfterFileChange).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(`如果开启，在最后一次修改后，每隔 X 分钟自动进行${commitOrBackup}，不会在编辑文件时自动${commitOrBackup}；如果关闭，则每隔 X 分钟自动进行${commitOrBackup}，这是独立于上次设置更改的。`).addToggle((toggle) => toggle.setValue(plugin.settings.autoBackupAfterFileChange).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(`Vault push interval (minutes)`).setDesc(\"Push changes every X minutes. Set to 0 (default) to disable.\").addText((text2) => text2.setValue(String(plugin.settings.autoPushInterval)).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(`Vault push interval (minutes)`).setDesc(\"每隔 X 分钟推送一次更改，设置为 0（默认值）禁用。\").addText((text2) => text2.setValue(String(plugin.settings.autoPushInterval)).onChange((value) => {",
        "plugin.clearAutoPush() && new import_obsidian7.Notice(\"Automatic push disabled!\");": "plugin.clearAutoPush() && new import_obsidian7.Notice(\"自动推送已禁用!\");",
        "new import_obsidian7.Setting(containerEl).setName(\"Auto pull interval (minutes)\").setDesc(\"Pull changes every X minutes. Set to 0 (default) to disable.\").addText((text2) => text2.setValue(String(plugin.settings.autoPullInterval)).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"自动拉取间隔时间（分钟）\").setDesc(\"每隔 X 分钟拉取一次更改，设置为 0（默认值）禁用。\").addText((text2) => text2.setValue(String(plugin.settings.autoPullInterval)).onChange((value) => {",
        "plugin.clearAutoPull() && new import_obsidian7.Notice(\"Automatic pull disabled!\");": "plugin.clearAutoPull() && new import_obsidian7.Notice(\"自动拉取已禁用!\");",
        "new import_obsidian7.Setting(containerEl).setName(\"Commit message on manual backup/commit\").setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below) and {{numFiles}} (number of changed files in the commit)\").addText((text2) => text2.setPlaceholder(\"vault backup: {{date}}\").setValue(plugin.settings.commitMessage ? plugin.settings.commitMessage : \"\").onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"手动备份/提交时的提交消息\").setDesc(\"可用格式：{{date}}（见下文）、{{hostname}}（见下文）和 {{numFiles}}（提交中更改的文件数）\").addText((text2) => text2.setPlaceholder(\"存储库备份: {{date}}\").setValue(plugin.settings.commitMessage ? plugin.settings.commitMessage : \"\").onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Specify custom commit message on auto backup\").setDesc(\"You will get a pop up to specify your message\").addToggle((toggle) => toggle.setValue(plugin.settings.customMessageOnAutoBackup).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"指定自动备份时的自定义提交消息\").setDesc(\"将弹出一个窗口以确定你的消息\").addToggle((toggle) => toggle.setValue(plugin.settings.customMessageOnAutoBackup).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Commit message on auto backup/commit\").setDesc(\"Available placeholders: {{date}} (see below), {{hostname}} (see below) and {{numFiles}} (number of changed files in the commit)\").addText((text2) => text2.setPlaceholder(\"vault backup: {{date}}\").setValue(plugin.settings.autoCommitMessage).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"自动备份/提交时的提交消息\").setDesc(\"可用占位符：{{date}}（见下文）、{{hostname}}（见下文）和 {{numFiles}}（提交中更改的文件数)\").addText((text2) => text2.setPlaceholder(\"存储库备份: {{date}}\").setValue(plugin.settings.autoCommitMessage).onChange((value) => {",
        "containerEl.createEl(\"h3\", { text: \"Commit message\" });": "containerEl.createEl(\"h3\", { text: \"提交消息\" });",
        "new import_obsidian7.Setting(containerEl).setName(\"{{date}} placeholder format\").setDesc('Specify custom date format. E.g. \"YYYY-MM-DD HH:mm:ss\"').addText((text2) => text2.setPlaceholder(plugin.settings.commitDateFormat).setValue(plugin.settings.commitDateFormat).onChange(async (value) => {": "new import_obsidian7.Setting(containerEl).setName(\"日期格式 {{date}}\").setDesc('指定自定义的日期格式，例如 \" YYYY-MM-DD HH:mm:ss \"').addText((text2) => text2.setPlaceholder(plugin.settings.commitDateFormat).setValue(plugin.settings.commitDateFormat).onChange(async (value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"{{hostname}} placeholder replacement\").setDesc(\"Specify custom hostname for every device.\").addText((text2) => {": "new import_obsidian7.Setting(containerEl).setName(\"主机格式 {{hostname}}\").setDesc(\"为每个设备指定自定义主机名。\").addText((text2) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Preview commit message\").addButton((button) => button.setButtonText(\"Preview\").onClick(async () => {": "new import_obsidian7.Setting(containerEl).setName(\"预览提交消息\").addButton((button) => button.setButtonText(\"预览\").onClick(async () => {",
        "new import_obsidian7.Setting(containerEl).setName(\"List filenames affected by commit in the commit body\").addToggle((toggle) => toggle.setValue(plugin.settings.listChangedFilesInMessageBody).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"在提交消息中列出受提交影响的文件名\").addToggle((toggle) => toggle.setValue(plugin.settings.listChangedFilesInMessageBody).onChange((value) => {",
        "containerEl.createEl(\"h3\", { text: \"Backup\" });": "containerEl.createEl(\"h3\", { text: \"备份\" });",
        "new import_obsidian7.Setting(containerEl).setName(\"Sync Method\").setDesc(\"Selects the method used for handling new changes found in your remote git repository.\").addDropdown((dropdown) => {": "new import_obsidian7.Setting(containerEl).setName(\"同步方式\").setDesc(\"选择用于处理在远程 Git 存储库中发现新更改的方法。\").addDropdown((dropdown) => {",
        "\"merge\": \"Merge\",": "\"merge\": \"合并\",",
        "\"rebase\": \"Rebase\",": "\"rebase\": \"重置\",",
        "\"reset\": \"Other sync service (Only updates the HEAD without touching the working directory)\"": "\"重置\": \"其他同步服务（只更新HEAD，不更改工作目录）\"",
        "new import_obsidian7.Setting(containerEl).setName(\"Pull updates on startup\").setDesc(\"Automatically pull updates when Obsidian starts\").addToggle((toggle) => toggle.setValue(plugin.settings.autoPullOnBoot).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"启动时拉取更改\").setDesc(\"Obsidian 启动时自动拉取更改\").addToggle((toggle) => toggle.setValue(plugin.settings.autoPullOnBoot).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Push on backup\").setDesc(\"Disable to only commit changes\").addToggle((toggle) => toggle.setValue(!plugin.settings.disablePush).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"推送备份\").setDesc(\"禁用，只提交更改。\").addToggle((toggle) => toggle.setValue(!plugin.settings.disablePush).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Pull changes before push\").setDesc(\"Commit -> pull -> push (Only if pushing is enabled)\").addToggle((toggle) => toggle.setValue(plugin.settings.pullBeforePush).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"推送前拉取更改\").setDesc(\"提交 -> 拉取 -> 推送（仅在推送功能启用时）。\").addToggle((toggle) => toggle.setValue(plugin.settings.pullBeforePush).onChange((value) => {",
        "containerEl.createEl(\"h3\", { text: \"Miscellaneous\" });": "containerEl.createEl(\"h3\", { text: \"杂项\" });",
        "new import_obsidian7.Setting(containerEl).setName(\"Automatically refresh Source Control View on file changes\").setDesc(\"On slower machines this may cause lags. If so, just disable this option\").addToggle((toggle) => toggle.setValue(plugin.settings.refreshSourceControl).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"在文件变化时自动刷新源代码控制视图\").setDesc(\"在较低性能的机器上，这可能会导致运行效率下降，可禁用选项。\").addToggle((toggle) => toggle.setValue(plugin.settings.refreshSourceControl).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Source Control View refresh interval\").setDesc(\"Milliseconds to wait after file change before refreshing the Source Control View\").addText((toggle) => toggle.setValue(plugin.settings.refreshSourceControlTimer.toString()).setPlaceholder(\"7000\").onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"源代码控制视图的刷新时间间隔\").setDesc(\"文件更改后在刷新源代码控制视图之前要等待的毫秒数。\").addText((toggle) => toggle.setValue(plugin.settings.refreshSourceControlTimer.toString()).setPlaceholder(\"7000\").onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Disable notifications\").setDesc(\"Disable notifications for git operations to minimize distraction (refer to status bar for updates). Errors are still shown as notifications even if you enable this setting\").addToggle((toggle) => toggle.setValue(plugin.settings.disablePopups).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"禁用通知\").setDesc(\"禁用 Git 操作通知以最大程度地减少干扰（请参阅状态栏以获取更新），但即使你启用此设置，错误仍会显示为通知。\").addToggle((toggle) => toggle.setValue(plugin.settings.disablePopups).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Show status bar\").setDesc(\"Obsidian must be restarted for the changes to take affect\").addToggle((toggle) => toggle.setValue(plugin.settings.showStatusBar).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"显示状态栏\").setDesc(\"必须重新启动 Obsidian 才能使更改生效\").addToggle((toggle) => toggle.setValue(plugin.settings.showStatusBar).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Show branch status bar\").setDesc(\"Obsidian must be restarted for the changes to take affect\").addToggle((toggle) => toggle.setValue(plugin.settings.showBranchStatusBar).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"显示分支状态栏\").setDesc(\"必须重新启动 Obsidian 才能使更改生效\").addToggle((toggle) => toggle.setValue(plugin.settings.showBranchStatusBar).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Show changes files count in status bar\").addToggle((toggle) => toggle.setValue(plugin.settings.changedFilesInStatusBar).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"在状态栏中显示更改的文件数\").addToggle((toggle) => toggle.setValue(plugin.settings.changedFilesInStatusBar).onChange((value) => {",
        "containerEl.createEl(\"h3\", { text: \"Advanced\" });": "containerEl.createEl(\"h3\", { text: \"高级设置\" });",
        "new import_obsidian7.Setting(containerEl).setName(\"Update submodules\").setDesc('\"Create backup\" and \"pull\" takes care of submodules. Missing features: Conflicted files, count of pulled/pushed/committed files. Tracking branch needs to be set for each submodule').addToggle((toggle) => toggle.setValue(plugin.settings.updateSubmodules).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"更新子模块\").setDesc('“创建备份” 和 “拉取” 负责子模块。缺失的特性:冲突文件，拉取/推送/提交文件的计数，需要为每个子模块设置跟踪分支').addToggle((toggle) => toggle.setValue(plugin.settings.updateSubmodules).onChange((value) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Custom Git binary path\").addText((cb) => {": "new import_obsidian7.Setting(containerEl).setName(\"自定义 Git 二进制路径\").addText((cb) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Username on your git server. E.g. your username on GitHub\").addText((cb) => {": "new import_obsidian7.Setting(containerEl).setName(\"你的Git服务器上的用户名，例如，你在GitHub上的用户名。\").addText((cb) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Password/Personal access token\").setDesc(\"Type in your password. You won't be able to see it again.\").addText((cb) => {": "new import_obsidian7.Setting(containerEl).setName(\"密码/个人访问令牌\").setDesc(\"输入你的密码，你将无法再次看到它。\").addText((cb) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Author name for commit\").addText(async (cb) => {": "new import_obsidian7.Setting(containerEl).setName(\"提交的作者姓名\").addText(async (cb) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Author email for commit\").addText(async (cb) => {": "new import_obsidian7.Setting(containerEl).setName(\"提交的作者电子邮箱\").addText(async (cb) => {",
        "new import_obsidian7.Setting(containerEl).setName(\"Custom base path (Git repository path)\").setDesc(`": "new import_obsidian7.Setting(containerEl).setName(\"自定义基本路径（Git 存储库路径）\").setDesc(`",
        "Sets the relative path to the vault from which the Git binary should be executed.": "设置执行 Git 二进制文件存储库的相对路径，",
        "Mostly used to set the path to the Git repository, which is only required if the Git repository is below the vault root directory. Use \"\\\\\" instead of \"/\" on Windows.": "主要用于设置 Git 存储库的路径，只有当 Git 存储库在存储库根目录之下时才需要。在Windows上使用\"\\\\\"而不是\"/\"。",
        "new import_obsidian7.Setting(containerEl).setName(\"Disable on this device\").addToggle((toggle) => toggle.setValue(plugin.localStorage.getPluginDisabled()).onChange((value) => {": "new import_obsidian7.Setting(containerEl).setName(\"在此设备上禁用\").addToggle((toggle) => toggle.setValue(plugin.localStorage.getPluginDisabled()).onChange((value) => {",
        "new import_obsidian7.Notice(\"Obsidian must be restarted for the changes to take affect\");": "new import_obsidian7.Notice(\"必须重新启动 Obsidian 才能使更改生效\");",
        "new import_obsidian7.Setting(containerEl).setName(\"Donate\").setDesc(\"If you like this Plugin, consider donating to support continued development.\").addButton((bt) => {": "new import_obsidian7.Setting(containerEl).setName(\"捐赠\").setDesc(\"如果你喜欢这个插件，请考虑捐赠以支持作者继续开发。\").addButton((bt) => {",
        "bt.buttonEl.outerHTML = \"<a href='https://ko-fi.com/F1F195IQ5' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://cdn.ko-fi.com/cdn/kofi3.png?v=3' border='0' alt='Buy Me a Coffee at ko-fi.com' /></a>\";": "bt.buttonEl.outerHTML = \"<a href='https://ko-fi.com/F1F195IQ5' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://cdn.ko-fi.com/cdn/kofi3.png?v=3' border='0' alt='在 ko-fi.com 上给我买杯咖啡' /></a>\";",
        "info.setText(\"Debugging and logging:\\nYou can always see the logs of this and every other plugin by opening the console with\");": "info.setText(\"调试和日志记录：\\n你始终可以通过打开控制台查看此插件和所有其他插件的日志\");",
        "this.statusBarEl.ariaLabel = \"Checking repository status...\";": "this.statusBarEl.ariaLabel = \"正在检查存储库状态...\";",
        "this.statusBarEl.addClass(this.base + \"status\");": "this.statusBarEl.addClass(this.base + \"状态\");",
        "this.statusBarEl.ariaLabel = \"Adding files...\";": "this.statusBarEl.ariaLabel = \"添加文件...\";",
        "this.statusBarEl.addClass(this.base + \"add\");": "this.statusBarEl.addClass(this.base + \"添加\");",
        "this.statusBarEl.ariaLabel = \"Committing changes...\";": "this.statusBarEl.ariaLabel = \"提交更改...\";",
        "this.statusBarEl.addClass(this.base + \"commit\");": "this.statusBarEl.addClass(this.base + \"提交\");",
        "this.statusBarEl.ariaLabel = \"Pushing changes...\";": "this.statusBarEl.ariaLabel = \"推送更改...\";",
        "this.statusBarEl.addClass(this.base + \"push\");": "this.statusBarEl.addClass(this.base + \"推送\");",
        "this.statusBarEl.ariaLabel = \"Pulling changes...\";": "this.statusBarEl.ariaLabel = \"拉取更改...\";",
        "this.statusBarEl.addClass(this.base + \"pull\");": "this.statusBarEl.addClass(this.base + \"拉取\");",
        "this.statusBarEl.ariaLabel = \"You have conflict files...\";": "this.statusBarEl.ariaLabel = \"你有冲突的文件...\";",
        "this.statusBarEl.addClass(this.base + \"conflict\");": "this.statusBarEl.addClass(this.base + \"冲突\");",
        "this.statusBarEl.ariaLabel = \"Failed on initialization!\";": "this.statusBarEl.ariaLabel = \"初始化失败！\";",
        "this.statusBarEl.addClass(this.base + \"failed-init\");": "this.statusBarEl.addClass(this.base + \"初始化失败\");",
        "this.statusBarEl.ariaLabel = `${this.plugin.offlineMode ? \"Offline: \" : \"\"}Last Git update: ${fromNow}`;": "this.statusBarEl.ariaLabel = `${this.plugin.offlineMode ? \"离线: \" : \"\"}Last Git update: ${fromNow}`;",
        "this.statusBarEl.ariaLabel = this.plugin.offlineMode ? \"Git is offline\" : \"Git is ready\";": "this.statusBarEl.ariaLabel = this.plugin.offlineMode ? \"Git 离线\" : \"Git已经准备就绪\";",
        "(0, import_obsidian8.setIcon)(this.iconEl, \"globe\");": "(0, import_obsidian8.setIcon)(this.iconEl, \"全球\");",
        "(0, import_obsidian8.setIcon)(this.iconEl, \"check\");": "(0, import_obsidian8.setIcon)(this.iconEl, \"检查\");",
        "this.statusBarEl.addClass(this.base + \"idle\");": "this.statusBarEl.addClass(this.base + \"闲置\");",
        "this.setPlaceholder(\"Not supported files will be opened by default app!\");": "this.setPlaceholder(\"不支持的文件将被默认应用程序打开！\");",
        "this.setPlaceholder(\"Type your message and select optional the version with the added date.\");": "this.setPlaceholder(\"输入你的消息，并选择添加日期的版本。\");",
        "commitMessage: \"vault backup: {{date}}\",": "commitMessage: \"存储库备份: {{date}}\",",
        "syncMethod: \"merge\",": "syncMethod: \"合并\",",
        "name: \"Source Control\",": "name: \"源代码控制\",",
        "name: \"Diff View\",": "name: \"差异视图\",",
        "new import_obsidian12.Notice(\"It seems like you are not using GitHub\");": "new import_obsidian12.Notice(\"好像你没有使用 GitHub\");",
        "var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath2, \"file\");": "var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath2, \" 份文件\");",
        "var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath3, \"file\");": "var fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath3, \" 份文件\");",
        "titleEl.setText(`${this.deletion ? \"Delete\" : \"Discard\"} this file?`);": "titleEl.setText(`${this.deletion ? \"Delete\" : \"丢弃\"} this file?`);",
        "contentEl.createEl(\"h4\").setText(`Do you really want to ${this.deletion ? \"delete\" : \"discard the changes of\"} \"${this.filename}\"`);": "contentEl.createEl(\"h4\").setText(`Do you really want to ${this.deletion ? \"delete\" : \"丢弃的更改\"} \"${this.filename}\"`);",
        "text: \"Cancel\",": "text: \"撤消\",",
        "text: \"Confirm\",": "text: \"确认\",",
        "attr(div, \"aria-label\", \"Open File\");": "attr(div, \"aria-label\", \"打开文件\");",
        "attr(div1, \"aria-label\", \"Discard\");": "attr(div1, \"aria-label\", \"丢弃\");",
        "attr(div2, \"aria-label\", \"Stage\");": "attr(div2, \"aria-label\", \"暂存\");",
        "attr(div1, \"aria-label\", \"Unstage\");": "attr(div1, \"aria-label\", \"取消\");",
        "div0.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svg-icon lucide-undo\"><path d=\"M3 7v6h6\"></path><path d=\"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\"></path></svg>`;": "div0.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svg-icon lucide-skip-back\"><polygon points=\"19 20 9 12 19 4 19 20\"></polygon><line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line></svg>`;",
        "attr(div0, \"data-icon\", \"undo\");": "attr(div0, \"data-icon\", \"skip-back\");",
        "attr(div0, \"aria-label\", \"Discard\");": "attr(div0, \"aria-label\", \"丢弃\");",
        "attr(div1, \"aria-label\", \"Stage\");": "attr(div1, \"aria-label\", \"丢弃\");",
        "return ctx[13](ctx[17]);": "return ctx[12](ctx[16]);",
        "attr(div, \"aria-label\", \"Unstage\");": "attr(div, \"aria-label\", \"取消\");",
        "attr(div, \"aria-label\", div_aria_label_value = \"Clear\");": "attr(div, \"aria-label\", div_aria_label_value = \"取消\");",
        "div1.textContent = \"Staged Changes\";": "div1.textContent = \"暂存\";",
        "div9.textContent = \"Changes\";": "div9.textContent = \"更改\";",
        "div10.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svg-icon lucide-undo\"><path d=\"M3 7v6h6\"></path><path d=\"M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13\"></path></svg>`;": "div10.innerHTML = `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"svg-icon lucide-skip-back\"><polygon points=\"19 20 9 12 19 4 19 20\"></polygon><line x1=\"5\" y1=\"19\" x2=\"5\" y2=\"5\"></line></svg>`;",
        "attr(div2, \"aria-label\", \"Unstage\");": "attr(div2, \"aria-label\", \"取消暂存\");",
        "attr(div10, \"aria-label\", \"Discard\");": "attr(div10, \"aria-label\", \"丢弃\");",
        "attr(div11, \"aria-label\", \"Stage\");": "attr(div11, \"aria-label\", \"暂存\");",
        "attr(div0, \"aria-label\", \"Commit\");": "attr(div0, \"aria-label\", \"提交\");",
        "attr(div1, \"aria-label\", \"Stage all\");": "attr(div1, \"aria-label\", \"暂存全部\");",
        "attr(div2, \"aria-label\", \"Unstage all\");": "attr(div2, \"aria-label\", \"取消暂存\");",
        "attr(div3, \"aria-label\", \"Push\");": "attr(div3, \"aria-label\", \"推送\");",
        "attr(div4, \"aria-label\", \"Pull\");": "attr(div4, \"aria-label\", \"拉取\");",
        "attr(div5, \"aria-label\", \"Change Layout\");": "attr(div5, \"aria-label\", \"文件列表显示\");",
        "attr(div6, \"aria-label\", \"Refresh\");": "attr(div6, \"aria-label\", \"刷新\");",
        "name: \"Edit .gitignore\",": "name: \"编辑.gitignore\",",
        "name: \"Open source control view\",": "name: \"打开源代码控制视图\",",
        "name: \"Open diff view\",": "name: \"打开差异视图\",",
        "name: \"Open file on GitHub\",": "name: \"在 GitHub 上打开文件\",",
        "name: \"Open file history on GitHub\",": "name: \"在 GitHub 上打开文件历史记录\",",
        "name: \"Pull\",": "name: \"拉取\",",
        "name: \"Add file to gitignore\",": "name: \"将文件添加到 gitignore\",",
        "name: \"Create backup\",": "name: \"创建备份\",",
        "name: \"Create backup and close\",": "name: \"创建备份并关闭\",",
        "name: \"Create backup with specific message\",": "name: \"创建带有具体消息的备份\",",
        "name: \"Commit all changes\",": "name: \"提交所有更改\",",
        "name: \"Commit all changes with specific message\",": "name: \"提交所有修改，并附上具体消息\",",
        "name: \"Commit staged\",": "name: \"提交所有暂存\",",
        "name: \"Commit staged with specific message\",": "name: \"提交带有具体消息的暂存\",",
        "name: \"Push\",": "name: \"推送\",",
        "name: \"Stage current file\",": "name: \"暂存当前文件\",",
        "name: \"Unstage current file\",": "name: \"取消暂存当前文件\",",
        "name: \"Edit remotes\",": "name: \"编辑远程设备\",",
        "name: \"Remove remote\",": "name: \"移除远程设备\",",
        "name: \"CAUTION: Delete repository\",": "name: \"注意：删除存储库\",",
        "const modal = new GeneralModal({ options: [\"NO\", \"YES\"], placeholder: \"Do you really want to delete the repository (.git directory)? This action cannot be undone.\", onlySelection: true });": "const modal = new GeneralModal({ options: [\"取消\", \"确定\"], placeholder: \"你真的要删除存储库（.git 目录）吗？此操作无法撤消。\", onlySelection: true });",
        "const shouldDelete = await modal.open() === \"YES\";": "const shouldDelete = await modal.open() === \"确定\";",
        "new import_obsidian23.Notice(\"Successfully deleted repository. Reloading plugin...\");": "new import_obsidian23.Notice(\"已成功删除存储库，正在重新加载插件...\");",
        "new import_obsidian23.Notice(\"No repository found\");": "new import_obsidian23.Notice(\"未找到存储库\");",
        "name: \"Initialize a new repo\",": "name: \"初始化一个新的存储库\",",
        "name: \"Clone an existing remote repo\",": "name: \"克隆现有的存储库\",",
        "name: \"List changed files\",": "name: \"列出已更改的文件\",",
        "this.displayError(\"Too many changes to display\");": "this.displayError(\"更多的更改无法显示\");",
        "name: \"Switch branch\",": "name: \"切换分支\",",
        "name: \"Create new branch\",": "name: \"创建新分支\",",
        "name: \"Delete branch\",": "name: \"删除分支\",",
        "this.registerEvent(this.app.workspace.on(\"file-menu\", (menu, file, source) => {": "this.registerEvent(this.app.workspace.on(\"文件列表\", (menu, file, source) => {",
        "new import_obsidian23.Notice(\"Obsidian Git is now available on mobile! Please read the plugin's README for more information.\", length);": "new import_obsidian23.Notice(\"Obsidian Git 现在可以在移动设备上使用！请阅读插件的自述文件以获取更多消息。\", length);",
        "new import_obsidian23.Notice(\"Obsidian Git Mobile is now deprecated. Please uninstall it and install Obsidian Git instead.\", length);": "new import_obsidian23.Notice(\"Obsidian Git Mobile 现已弃用，请卸载它并安装 Obsidian Git。\", length);",
        "this.displayError(\"Cannot run git command\");": "this.displayError(\"无法运行 Git 命令\");",
        "new import_obsidian23.Notice(\"Can't find a valid git repository. Please create one via the given command or clone an existing repo.\");": "new import_obsidian23.Notice(\"找不到一个有效的 Git 存储库。请通过特定的命令创建或克隆一个现有的存储库。\");",
        "console.log(\"Something weird happened. The 'checkRequirements' result is \" + result);": "console.log(\"发生了一些奇怪的事情，检查需求的结果是\" + result);",
        "new import_obsidian23.Notice(\"Initialized new repo\");": "new import_obsidian23.Notice(\"初始化新存储库\");",
        "const modal = new GeneralModal({ placeholder: \"Enter remote URL\" });": "const modal = new GeneralModal({ placeholder: \"输入远程 URL\" });",
        "const confirmOption = \"Vault Root\";": "const confirmOption = \"存储库根目录\";",
        "placeholder: \"Enter directory for clone. It needs to be empty or not existent.\",": "placeholder: \"输入目录进行克隆，它必须为空或不存在。\",",
        "const modal2 = new GeneralModal({ options: [\"NO\", \"YES\"], placeholder: `Does your remote repo contain a ${app.vault.configDir} directory at the root?`, onlySelection: true });": "const modal2 = new GeneralModal({ options: [\"取消\", \"确定\"], placeholder: `Does your remote repo contain a ${app.vault.configDir} directory at the root?`, onlySelection: true });",
        "new import_obsidian23.Notice(\"Aborted clone\");": "new import_obsidian23.Notice(\"中止克隆\");",
        "} else if (containsConflictDir === \"YES\") {": "} else if (containsConflictDir === \"确定\") {",
        "const confirmOption2 = \"DELETE ALL YOUR LOCAL CONFIG AND PLUGINS\";": "const confirmOption2 = \"删除所有本地配置和插件\";",
        "const modal3 = new GeneralModal({ options: [\"Abort clone\", confirmOption2], placeholder: `To avoid conflicts, the local ${app.vault.configDir} directory needs to be deleted.`, onlySelection: true });": "const modal3 = new GeneralModal({ options: [\"中止克隆\", confirmOption2], placeholder: `To avoid conflicts, the local ${app.vault.configDir} directory needs to be deleted.`, onlySelection: true });",
        "new import_obsidian23.Notice(\"Cloned new repo.\");": "new import_obsidian23.Notice(\"克隆了新的存储库\");",
        "new import_obsidian23.Notice(\"Please restart Obsidian\");": "new import_obsidian23.Notice(\"请重启 Obsidian\");",
        "this.displayMessage(\"Everything is up-to-date\");": "this.displayMessage(\"一切都是最新的\");",
        "this.displayError(`You have ${status2.conflicted.length} conflict ${status2.conflicted.length > 1 ? \"files\" : \"file\"}`);": "this.displayError(`你有${status2.conflicted.length} ${status2.conflicted.length > 1 ? \" 份文件\" : \" 份文件\"}发生冲突`);",
        "if (this.settings.syncMethod == \"reset\" && this.settings.pullBeforePush) {": "if (this.settings.syncMethod == \"重置\" && this.settings.pullBeforePush) {",
        "if (this.settings.syncMethod != \"reset\" && this.settings.pullBeforePush) {": "if (this.settings.syncMethod != \"重置\" && this.settings.pullBeforePush) {",
        "this.displayMessage(\"No changes to push\");": "this.displayMessage(\"没有要推送的更改\");",
        "this.displayError(`Did not commit, because you have ${status2.conflicted.length} conflict ${status2.conflicted.length > 1 ? \"files\" : \"file\"}. Please resolve them and commit per command.`);": "this.displayError(`提交失败，因为你有${status2.conflicted.length} ${status2.conflicted.length > 1 ? \" 份文件\" : \" 份文件\"}发生冲突，请解决它们并按命令提交。`);",
        "this.displayError(`Did not commit, because you have conflict files. Please resolve them and commit per command.`);": "this.displayError(`提交失败，因为你有冲突文件，请解决它们并按命令提交。`);",
        "new import_obsidian23.Notice(\"Auto backup: Please enter a custom commit message. Leave empty to abort\");": "new import_obsidian23.Notice(\"自动备份，请输入一个自定义的提交消息，留空表示放弃。\");",
        "this.displayMessage(`Committed${roughly ? \" approx.\" : \"\"} ${committedFiles} ${committedFiles > 1 ? \"files\" : \"file\"}`);": "this.displayMessage(`推送了${roughly ? \" approx.\" : \"\"} ${committedFiles}${committedFiles > 1 ? \" 份文件\" : \" 份文件\"}`);",
        "this.displayMessage(\"No changes to commit\");": "this.displayMessage(\"没有要提交的更改\");",
        "this.displayError(`Did not commit, because following files are too big: ${tooBigFiles.map((e) => e.vault_path)}. Please remove them.`);": "this.displayError(`提交失败，因为以下文件太大：${tooBigFiles.map((e) => e.vault_path)}，请删除它们。`);",
        "this.displayError(`Cannot push. You have ${status2.conflicted.length} conflict ${status2.conflicted.length > 1 ? \"files\" : \"file\"}`);": "this.displayError(`推送失败，你有${status2.conflicted.length} ${status2.conflicted.length > 1 ? \" 份文件\" : \" 份文件\"}发生冲突`);",
        "console.log(\"Pushing....\");": "console.log(\"推送中...\");",
        "console.log(\"Pushed!\", pushedFiles);": "console.log(\"推送完成！\", pushedFiles);",
        "this.displayMessage(`Pushed ${pushedFiles} ${pushedFiles > 1 ? \"files\" : \"file\"} to remote`);": "this.displayMessage(`推送了${pushedFiles} ${pushedFiles > 1 ? \" 份文件\" : \" 份文件\"}到远程存储库`);",
        "this.displayMessage(`No changes to push`);": "this.displayMessage(`没有要推送的更改`);",
        "this.displayMessage(`Pulled ${pulledFiles.length} ${pulledFiles.length > 1 ? \"files\" : \"file\"} from remote`);": "this.displayMessage(`从远程存储库拉取了${pulledFiles.length} ${pulledFiles.length > 1 ? \" 份文件\" : \" 份文件\"}`);",
        "this.displayMessage(`Staged ${file.path}`);": "this.displayMessage(`暂存 ${file.path}`);",
        "this.displayMessage(`Unstaged ${file.path}`);": "this.displayMessage(`未暂存 ${file.path}`);",
        "this.displayMessage(`Switched to ${selectedBranch}`);": "this.displayMessage(`切换到分支 ${selectedBranch}`);",
        "const newBranch = await new GeneralModal({ placeholder: \"Create new branch\" }).open();": "const newBranch = await new GeneralModal({ placeholder: \"创建新的分支\" }).open();",
        "this.displayMessage(`Created new branch ${newBranch}`);": "this.displayMessage(`创建新分支 ${newBranch}`);",
        "const branch2 = await new GeneralModal({ options: branchInfo.branches, placeholder: \"Delete branch\", onlySelection: true }).open();": "const branch2 = await new GeneralModal({ options: branchInfo.branches, placeholder: \"删除分支\", onlySelection: true }).open();",
        "const forceAnswer = await new GeneralModal({ options: [\"YES\", \"NO\"], placeholder: \"This branch isn't merged into HEAD. Force delete?\", onlySelection: true }).open();": "const forceAnswer = await new GeneralModal({ options: [\"确定\", \"取消\"], placeholder: \"这个分支还没有被合并到HEAD，强制删除？\", onlySelection: true }).open();",
        "if (forceAnswer !== \"YES\") {": "if (forceAnswer !== \"确定\") {",
        "force = forceAnswer === \"YES\";": "force = forceAnswer === \"确定\";",
        "new import_obsidian23.Notice(\"No upstream branch is set. Please select one.\");": "new import_obsidian23.Notice(\"没有设置上游分支，请选择一项。\");",
        "this.displayError(\"Aborted. No upstream-branch is set!\", 1e4);": "this.displayError(\"中止，没有设置上游分支！\", 1e4);",
        "this.saveLastAuto(new Date(), \"backup\");": "this.saveLastAuto(new Date(), \"备份\");",
        "this.saveLastAuto(new Date(), \"pull\");": "this.saveLastAuto(new Date(), \"拉取\");",
        "this.saveLastAuto(new Date(), \"push\");": "this.saveLastAuto(new Date(), \"推送\");",
        "this.localStorage.setConflict(\"true\");": "this.localStorage.setConflict(\"确定\");",
        "\"# Conflict files\",": "\"# 冲突文件\",",
        "\"Please resolve them and commit per command (This file will be deleted before the commit).\",": "\"请解决这些问题并按命令提交（该文件将在提交前被删除）。\",",
        "placeholder: \"Select or create a new remote by typing its name and selecting it\"": "placeholder: \"输入名称选择或创建一个新的远程存储库\"",
        "const nameModal = new GeneralModal({ options: remotes, placeholder: \"Select or create a new remote by typing its name and selecting it\" });": "const nameModal = new GeneralModal({ options: remotes, placeholder: \"输入名称选择或创建一个新的远程存储库\" });",
        "this.displayMessage(\"Fetching remote branches\");": "this.displayMessage(\"获取远程分支s\");",
        "const branchModal = new GeneralModal({ options: branches, placeholder: \"Select or create a new remote branch by typing its name and selecting it\" });": "const branchModal = new GeneralModal({ options: branches, placeholder: \"输入名称选择或创建一个新的远程分支\" });",
        "const nameModal = new GeneralModal({ options: remotes, placeholder: \"Select a remote\" });": "const nameModal = new GeneralModal({ options: remotes, placeholder: \"选择一个远程存储库\" });",
        "new import_obsidian23.Notice(\"Aborted\");": "new import_obsidian23.Notice(\"中止\");"
    }
}
