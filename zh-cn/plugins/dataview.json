{
    "manifest": {
        "author": "zero",
        "version": "1.0.0"
    },
    "dict": {
        ".setName(\"Enable inline queries\")": ".setName(\"启用内联查询\")",
        ".setName(\"Enable JavaScript queries\")": ".setName(\"启用JavaScript查询\")",
        ".setName(\"Enable inline JavaScript queries\")": ".setName(\"启用内联JavaScript查询\")",
        ".setName(\"Enable inline field highlighting in reading view\")": ".setName(\"在阅读视图中启用内联字段突出显示\")",
        ".setName(\"Enable inline field highlighting in Live Preview\")": ".setName(\"在实时预览中启用内联字段突出显示\")",
        ".setName(\"Codeblocks\")": ".setName(\"代码块\")",
        ".setName(\"DataviewJS keyword\")": ".setName(\"DataviewJS关键字\")",
        ".setName(\"Inline query prefix\")": ".setName(\"内联查询前缀\")",
        ".setName(\"JavaScript inline query prefix\")": ".setName(\"JavaScript内联查询前缀\")",
        ".setName(\"Code block inline queries\")": ".setName(\"代码块内联查询\")",
        ".setName(\"View\")": ".setName(\"查看\")",
        ".setName(\"Display result count\")": ".setName(\"显示结果计数\")",
        ".setName(\"Warn on empty result\")": ".setName(\"空结果警告\")",
        ".setName(\"Render null as\")": ".setName(\"将null渲染为\")",
        ".setName(\"Automatic view refreshing\")": ".setName(\"自动刷新视图\")",
        ".setName(\"Refresh interval\")": ".setName(\"刷新间隔\")",
        ".setName(\"Date format\")": ".setName(\"日期格式\")",
        ".setName(\"Date + time format\")": ".setName(\"日期 + 时间格式\")",
        ".setName(\"Tables\")": ".setName(\"表\")",
        ".setName(\"Primary column name\")": ".setName(\"主列名\")",
        ".setName(\"Grouped column name\")": ".setName(\"分组列名\")",
        ".setName(\"Tasks\")": ".setName(\"任务\")",
        ".setName(\"Automatic task completion tracking\")": ".setName(\"自动任务完成跟踪\")",
        ".setName(\"Use emoji shorthand for completion\")": ".setName(\"使用表情符号简写完成\")",
        ".setName(\"Completion field name\")": ".setName(\"完成字段名称\")",
        ".setName(\"Completion date format\")": ".setName(\"完成日期格式\")",
        ".setName(\"Recursive sub-task completion\")": ".setName(\"递归子任务完成\")",
        ".setDesc(\"Enable or disable executing regular inline Dataview queries.\")": ".setDesc(\"启用或禁用执行常规内联Dataview查询。\")",
        ".setDesc(\"Enable or disable executing DataviewJS queries.\")": ".setDesc(\"启用或禁用执行DataviewJS查询。\")",
        ".setDesc(\"Enable or disable executing inline DataviewJS queries. Requires that DataviewJS queries are enabled.\")": ".setDesc(\"启用或禁用执行内联DataviewJS查询。要求启用DataviewJS查询。\")",
        ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in reading view.\")": ".setDesc(\"启用或禁用读取视图中内联字段的视觉突出显示/漂亮渲染。\")",
        ".setDesc(\"Enables or disables visual highlighting / pretty rendering for inline fields in Live Preview.\")": ".setDesc(\"在实时预览中启用或禁用内联字段的视觉突出显示/漂亮渲染。\")",
        ".setDesc(\"Keyword for DataviewJS blocks. Defaults to 'dataviewjs'. Reload required for changes to take effect.\")": ".setDesc(\"DataviewJS块的关键字。默认为“dataviewjs”。更改生效需要重新加载。\")",
        ".setDesc(\"The prefix to inline queries (to mark them as Dataview queries). Defaults to '='.\")": ".setDesc(\"内联查询的前缀（将其标记为Dataview查询）。默认为“=”。\")",
        ".setDesc(\"The prefix to JavaScript inline queries (to mark them as DataviewJS queries). Defaults to '$='.\")": ".setDesc(\"JavaScript内联查询的前缀（将其标记为DataviewJS查询）。默认为“$=”。\")",
        ".setDesc(\"If enabled, inline queries will also be evaluated inside full code blocks.\")": ".setDesc(\"如果启用，内联查询也将在完整代码块内进行评估。\")",
        ".setDesc(\"If toggled off, the small number in the result header of TASK and TABLE queries will be hidden.\")": ".setDesc(\"如果关闭，TASK和TABLE查询结果头中的小数字将被隐藏。\")",
        ".setDesc(\"If set, queries which return 0 results will render a warning message.\")": ".setDesc(\"如果设置，返回0结果的查询将呈现警告消息。\")",
        ".setDesc(\"What null/non-existent should show up as in tables, by default. This supports Markdown notation.\")": ".setDesc(\"默认情况下，空/不存在的内容应显示在表中。这支持Markdown表示法。\")",
        ".setDesc(\"If enabled, views will automatically refresh when files in your vault change; this can negatively affect\" +\n            \" some functionality like embeds in views, so turn it off if such functionality is not working.\")": ".setDesc(\"如果启用，视图将在vault中的文件更改时自动刷新；这可能会产生负面影响\" +\n            \" some functionality like embeds in views, so turn it off if such functionality is not working.\")",
        ".setDesc(\"How long to wait (in milliseconds) for files to stop changing before updating views.\")": ".setDesc(\"在更新视图之前，等待文件停止更改的时间（以毫秒为单位）。\")",
        ".setDesc(\"The default date format (see Luxon date format options).\" +\n            \" Currently: \" +\n            DateTime.now().toFormat(this.plugin.settings.defaultDateFormat, { locale: currentLocale() }))\n            .addText(text => text\n            .setPlaceholder(DEFAULT_QUERY_SETTINGS.defaultDateFormat)\n            .setValue(this.plugin.settings.defaultDateFormat)\n            .onChange(async (value) => {\n            dformat.setDesc(\"The default date format (see Luxon date format options).\" +\n                \" Currently: \" +\n                DateTime.now().toFormat(value, { locale: currentLocale() }));\n            await this.plugin.updateSettings({ defaultDateFormat: value });\n            this.plugin.index.touch();\n        }));\n        let dtformat = new obsidian.Setting(this.containerEl)\n            .setName(\"Date + time format\")": ".setDesc(\"默认日期格式（请参阅Luxon日期格式选项）。\" +\n            \" Currently: \" +\n            DateTime.now().toFormat(this.plugin.settings.defaultDateFormat, { locale: currentLocale() }))\n            .addText(text => text\n            .setPlaceholder(DEFAULT_QUERY_SETTINGS.defaultDateFormat)\n            .setValue(this.plugin.settings.defaultDateFormat)\n            .onChange(async (value) => {\n            dformat.setDesc(\"The default date format (see Luxon date format options).\" +\n                \" Currently: \" +\n                DateTime.now().toFormat(value, { locale: currentLocale() }));\n            await this.plugin.updateSettings({ defaultDateFormat: value });\n            this.plugin.index.touch();\n        }));\n        let dtformat = new obsidian.Setting(this.containerEl)\n            .setName(\"Date + time format\")",
        ".setDesc(\"The default date and time format (see Luxon date format options).\" +\n            \" Currently: \" +\n            DateTime.now().toFormat(this.plugin.settings.defaultDateTimeFormat, { locale: currentLocale() }))\n            .addText(text => text\n            .setPlaceholder(DEFAULT_QUERY_SETTINGS.defaultDateTimeFormat)\n            .setValue(this.plugin.settings.defaultDateTimeFormat)\n            .onChange(async (value) => {\n            dtformat.setDesc(\"The default date and time format (see Luxon date format options).\" +\n                \" Currently: \" +\n                DateTime.now().toFormat(value, { locale: currentLocale() }));\n            await this.plugin.updateSettings({ defaultDateTimeFormat: value });\n            this.plugin.index.touch();\n        }));\n        new obsidian.Setting(this.containerEl).setName(\"Tables\")": ".setDesc(\"默认日期和时间格式（请参阅Luxon日期格式选项）。\" +\n            \" Currently: \" +\n            DateTime.now().toFormat(this.plugin.settings.defaultDateTimeFormat, { locale: currentLocale() }))\n            .addText(text => text\n            .setPlaceholder(DEFAULT_QUERY_SETTINGS.defaultDateTimeFormat)\n            .setValue(this.plugin.settings.defaultDateTimeFormat)\n            .onChange(async (value) => {\n            dtformat.setDesc(\"The default date and time format (see Luxon date format options).\" +\n                \" Currently: \" +\n                DateTime.now().toFormat(value, { locale: currentLocale() }));\n            await this.plugin.updateSettings({ defaultDateTimeFormat: value });\n            this.plugin.index.touch();\n        }));\n        new obsidian.Setting(this.containerEl).setName(\"Tables\")",
        ".setDesc(\"The name of the default ID column in tables; this is the auto-generated first column that links to the source file.\")": ".setDesc(\"表中默认ID列的名称；这是自动生成的链接到源文件的第一列。\")",
        ".setDesc(\"The name of the default ID column in tables, when the table is on grouped data; this is the auto-generated first column\" +\n            \"that links to the source file/group.\")": ".setDesc(\"当表位于分组数据上时，表中默认ID列的名称；这是自动生成的第一列\" +\n            \"that links to the source file/group.\")",
        ".setDesc('Only available when \"automatic task completion tracking\" is enabled.')": ".setDesc('仅在启用“自动任务完成跟踪”时可用。')",
        ".setDesc('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')": ".setDesc('仅当启用了“自动任务完成跟踪”并且禁用了“使用表情符号简写完成”时才可用。')",
        ".setDesc(\"If enabled, completing a task in a Dataview will automatically complete its subtasks too.\")": ".setDesc(\"如果启用，在数据视图中完成任务也将自动完成其子任务。\")",
        ".setPlaceholder(\"dataviewjs\")": ".setPlaceholder(\"dataviewjs\")",
        ".setPlaceholder(\"=\")": ".setPlaceholder(\"=\")",
        ".setPlaceholder(\"$=\")": ".setPlaceholder(\"$=\")",
        ".setPlaceholder(\"-\")": ".setPlaceholder(\"-\")",
        ".setPlaceholder(\"500\")": ".setPlaceholder(\"500\")",
        ".setPlaceholder(\"File\")": ".setPlaceholder(\"文件\")",
        ".setPlaceholder(\"Group\")": ".setPlaceholder(\"集团\")",
        ".appendText(\"...\")": ".appendText(\"...\")",
        ".appendText(\": \")": ".appendText(\":\")",
        ".appendText(`<unknown widget '${field.$widget}>`)": ".appendText(`<未知小部件'${field.$widget}>`)",
        ".appendText(\"<function>\")": ".appendText(\"<功能>\")",
        ".appendText(\"<empty list>\")": ".appendText(\"<空列表>\")",
        ".appendText(\", \")": ".appendText(\",\")",
        ".appendText(`<${field.constructor.name}>`)": ".appendText(`<${field.constructor.name}>`)",
        ".appendText(\"<empty object>\")": ".appendText(\"<空对象>\")",
        ".appendText(\"Unrecognized: \" + JSON.stringify(field));\n    }\n}\n\nvar papaparse_min = {exports: {}};\n\n/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\npapaparse_min.exports;\n\n(function (module, exports) {\n\t!function(e,t){module.exports=t();}(commonjsGlobal,function s(){var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return !1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",i,\")": ".appendText(\"无法识别：\" + JSON.stringify(field));\n    }\n}\n\nvar papaparse_min = {exports: {}};\n\n/* @license\nPapa Parse\nv5.4.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\npapaparse_min.exports;\n\n(function (module, exports) {\n\t!function(e,t){module.exports=t();}(commonjsGlobal,function s(){var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=f.IS_PAPA_WORKER||!1,a={},u=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;J(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!J(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return !1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",i,\")",
        ".appendText(\"If enabled, Dataview will automatically append tasks with their completion date when they are checked in Dataview views.\")": ".appendText(\"如果启用，当在Dataview视图中选中任务时，Dataview将自动附加任务及其完成日期。\")",
        ".appendText(\"Example with default field name and date format: - [x] my task [completion:: 2022-01-01]\")": ".appendText(\"带有默认字段名和日期格式的示例：-[x]我的任务[完成：：2022-01-01]\")",
        ".appendText('If enabled, will use emoji shorthand instead of inline field formatting to fill out implicit task field \"completion\".')": ".appendText('如果启用，将使用表情符号缩写而不是内联字段格式来填写隐式任务字段“完成”。')",
        ".appendText(\"Example: - [x] my task ✅ 2022-01-01\")": ".appendText(\"示例：-[x]我的任务✅ 2022-01-01\")",
        ".appendText(\"Disable this to customize the completion date format or field name, or to use Dataview inline field formatting.\")": ".appendText(\"禁用此选项可自定义完成日期格式或字段名称，或使用Dataview内联字段格式。\")",
        ".appendText('Only available when \"automatic task completion tracking\" is enabled.')": ".appendText('仅在启用“自动任务完成跟踪”时可用。')",
        ".appendText(\"Text used as inline field key for task completion date when toggling a task's checkbox in a Dataview view.\")": ".appendText(\"在Dataview视图中切换任务的复选框时，用作任务完成日期的内联字段键的文本。\")",
        ".appendText('Only available when \"automatic task completion tracking\" is enabled and \"use emoji shorthand for completion\" is disabled.')": ".appendText('仅当启用了“自动任务完成跟踪”并且禁用了“使用表情符号简写完成”时才可用。')",
        ".innerText = \"(disabled; enable in settings)\"": ".innerText = \"（禁用；在设置中启用）\""
    }
}
