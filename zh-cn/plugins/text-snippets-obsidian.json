{
    "manifest": {
        "author": "Fendi",
        "version": "1.0.0"
    },
    "dict": {
        "name: \"Run snippet replacement\",": "name: \"运行片段替换\",",
        "snippets_file: \"snippets : It is an obsidian plugin, that replaces your selected text.\",": "snippets_file: \"它是一个黑曜石插件，替代您选择的文本。\",",
        "snippets: [\"snippets : It is an obsidian plugin, that replaces your selected text.\"],": "snippets: [\"它是一个黑曜石插件，替代您选择的文本。\"],",
        "containerEl.createEl('h2', { text: 'Text Snippets - Settings' });": "containerEl.createEl('h2', { text: '文本片段-设置' });",
        ".setName(\"Snippets\")": ".setName(\"片段\")",
        ".setDesc(\"Type here your snippets in format 'snippet : result', one per line. Empty lines will be ignored. Ctrl+Tab to replace (hotkey can be changed).\")": ".setDesc(\"在这里输入你的代码片段，格式为“snippet: result”，每行一个。空行将被忽略。Ctrl+Tab替换(热键可以改变)。\")",
        ".setName(\"Cursor end position mark\")": ".setName(\"光标结束位置标记\")",
        ".setDesc(\"Places the cursor to the mark position after inserting a snippet (default: $end$).\\nMark does not appear anywhere within the snippet.\")": ".setDesc(\"插入代码段后将光标放置到标记位置(默认值:$end$)。\\nMark不会出现在代码片段的任何地方。\")",
        ".setName(\"Newline mark\")": ".setName(\"换行符标记\")",
        ".setDesc(\"Ignores newline after mark, replace it with a newline character after expanding (default: $nl$).\\nNecessary to write before every line break in multiline snippets.\")": ".setDesc(\"忽略标记后的换行符，在展开后用换行符替换它(默认:$nl$)。需要在多行代码段的每个换行之前写。\")",
        ".setName('Stop Symbol')": ".setName('停止标志')",
        ".setDesc('Symbol to jump to when command is called.')": ".setDesc('调用命令时要跳转到的符号。')",
        ".setName(\"Use Tab\")": ".setName(\"使用 Tab 键\")",
        ".setDesc(\"Uses the Tab key as the trigger\")": ".setDesc(\"使用Tab键作为触发器\")"
    }
}
